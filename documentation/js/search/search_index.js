var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.731,1,1.94]],["body/controllers/AppController.html",[0,2.937,1,3.291,2,2.453,3,0.586,4,0.512,5,0.442,6,3.617,7,0.512,8,3.291,9,4.803,10,1.996,11,0.037,12,1.647,13,4.371,14,2.75,15,0.892,16,0.701,17,1.811,18,2.827,19,3.617,20,0.586,21,0.19,22,4.371,23,3.12,24,2.453,25,4.371,26,0.031,27,0.031]],["title/modules/AppModule.html",[28,1.731,29,1.94]],["body/modules/AppModule.html",[1,3.243,2,2.62,3,0.487,4,0.426,5,0.367,11,0.037,16,0.784,17,1.507,18,2.907,19,3.009,20,0.487,21,0.158,26,0.027,27,0.027,28,2.894,29,3.73,30,2.041,31,0.769,32,2.596,33,2.596,34,2.041,35,3.681,36,2.596,37,3.009,38,3.009,39,3.009,40,3.231,41,3.333,42,2.596,43,2.288,44,3.637,45,3.863,46,3.009,47,2.041,48,3.637,49,3.637,50,0.889,51,4.668,52,1.37,53,1.458,54,2.041,55,3.009,56,0.552,57,4.266,58,3.009,59,3.637,60,3.009,61,3.009,62,3.637,63,3.009,64,3.009,65,3.009,66,3.637,67,3.009,68,3.637,69,2.596,70,3.637,71,3.637,72,2.041,73,3.863,74,3.637,75,3.863,76,3.637,77,3.637]],["title/injectables/AppService.html",[18,1.557,78,1.557]],["body/injectables/AppService.html",[3,0.602,4,0.526,5,0.454,7,0.526,8,3.346,9,4.846,11,0.036,12,1.693,14,2.826,15,0.907,16,0.602,17,1.861,18,2.685,20,0.602,21,0.195,24,2.522,26,0.031,27,0.031,78,2.685,79,3.207,80,3.718,81,4.492,82,4.492,83,4.492]],["title/classes/CreateWorkflowDefinitionDto.html",[21,0.134,84,1.557]],["body/classes/CreateWorkflowDefinitionDto.html",[3,0.388,4,0.339,5,0.293,7,0.339,10,2.462,11,0.037,12,2.032,15,0.889,16,0.665,20,0.388,21,0.2,26,0.024,27,0.024,56,0.908,84,2.024,85,1.625,86,4.575,87,1.592,88,2.067,89,0.945,90,1.827,91,1.906,92,1.831,93,2.322,94,1.346,95,1.906,96,1.628,97,3.721,98,2.895,99,2.895,100,1.411,101,4.108,102,4.964,103,1.831,104,4.964,105,3.123,106,2.862,107,2.895,108,1.733,109,2.396,110,4.009,111,2.582,112,4.009,113,1.252,114,2.895,115,2.895,116,2.895,117,2.895,118,2.251,119,2.895,120,3.279,121,2.862,122,3.318,123,2.895,124,2.895,125,2.895,126,3.283,127,3.318,128,3.283,129,3.318,130,4.009,131,4.009,132,1.821,133,2.396,134,2.895,135,3.85,136,3.318,137,1.625,138,1.821,139,1.035,140,2.862,141,2.522,142,2.396,143,2.067]],["title/interfaces/RetryConfig.html",[144,0.526,145,1.058]],["body/interfaces/RetryConfig.html",[3,0.467,4,0.408,5,0.352,7,0.408,11,0.037,15,1.002,16,0.467,20,0.763,21,0.151,26,0.027,27,0.027,31,0.737,50,0.664,56,0.843,89,0.865,90,1.089,91,1.445,93,1.761,94,1.173,95,1.445,96,1.089,100,1.521,108,1.314,113,1.089,139,0.9,144,0.913,145,1.836,146,1.445,147,1.196,148,1.592,149,2.218,150,2.218,151,2.218,152,2.056,153,1.089,154,1.445,155,2.218,156,1.882,157,1.882,158,1.089,159,1.957,160,1.445,161,1.063,162,2.094,163,2.074,164,1.445,165,1.712,166,1.445,167,1.882,168,1.314,169,2.074,170,1.445,171,1.761,172,1.445,173,2.074,174,1.445,175,1.445,176,1.445,177,1.592,178,1.592,179,1.592,180,1.196,181,1.712,182,2.074,183,1.882,184,2.294]],["title/classes/StartWorkflowDto.html",[21,0.134,185,1.94]],["body/classes/StartWorkflowDto.html",[3,0.519,4,0.454,5,0.391,7,0.454,10,2.219,11,0.037,12,1.831,15,0.829,16,0.651,20,0.519,21,0.211,26,0.029,27,0.029,56,0.738,85,2.175,87,1.437,89,0.925,90,1.518,97,3.469,100,1.381,103,2.618,105,3.502,106,2.766,111,2.728,126,3.469,128,3.469,132,2.438,135,3.791,137,2.175,141,2.438,161,1.137,185,3.057,186,4.394,187,3.206,188,2.681,189,4.022,190,3.875,191,3.057,192,4.022,193,4.022,194,4.022,195,4.022,196,3.875,197,3.875,198,3.206,199,3.206,200,3.206,201,3.206,202,3.206,203,3.875]],["title/interfaces/StepCondition.html",[144,0.526,173,1.408]],["body/interfaces/StepCondition.html",[3,0.47,4,0.411,5,0.354,7,0.411,11,0.037,15,1.023,16,0.47,20,0.764,21,0.152,26,0.027,27,0.027,31,0.742,50,0.668,56,0.881,89,0.868,90,1.095,91,1.453,93,1.771,94,1.177,95,1.453,96,1.095,100,1.525,108,1.322,113,1.095,139,0.905,144,0.915,145,1.738,146,1.453,147,1.203,148,1.602,149,1.453,150,1.453,151,1.453,152,1.84,153,1.095,154,1.453,155,2.223,156,1.89,157,1.89,158,1.095,159,1.969,160,1.453,161,1.067,162,2.1,163,2.082,164,1.453,165,1.718,166,1.453,167,1.89,168,1.322,169,2.082,170,1.453,171,1.771,172,1.453,173,2.314,174,1.453,175,1.453,176,1.453,177,2.45,178,2.314,179,2.314,180,1.203,181,1.718,182,2.082,183,1.89,184,2.303]],["title/interfaces/StepConfig.html",[144,0.526,169,1.408]],["body/interfaces/StepConfig.html",[3,0.467,4,0.408,5,0.352,7,0.408,11,0.037,15,1.022,16,0.467,20,0.763,21,0.151,26,0.027,27,0.027,31,0.737,50,0.664,56,0.843,89,0.865,90,1.089,91,1.445,93,1.761,94,1.173,95,1.445,96,1.089,100,1.67,108,1.314,113,1.089,139,0.9,144,0.913,145,1.733,146,1.445,147,1.196,148,1.592,149,1.445,150,1.445,151,1.445,152,1.836,153,1.089,154,1.445,155,2.218,156,1.882,157,1.882,158,1.089,159,1.957,160,1.445,161,1.063,162,2.094,163,2.074,164,1.445,165,1.712,166,1.445,167,1.882,168,1.314,169,2.307,170,1.445,171,1.761,172,1.445,173,2.074,174,2.218,175,2.218,176,2.218,177,1.592,178,1.592,179,1.592,180,1.196,181,1.712,182,2.074,183,1.882,184,2.294]],["title/interfaces/StepState.html",[144,0.526,204,1.557]],["body/interfaces/StepState.html",[3,0.417,4,0.365,5,0.315,7,0.365,11,0.037,15,0.978,16,0.565,20,0.717,21,0.135,26,0.025,27,0.025,50,0.974,52,1.173,53,0.972,56,0.87,87,0.804,89,0.802,92,2.517,94,0.804,100,1.357,103,1.422,113,0.972,118,3.002,139,1.088,144,0.719,146,1.29,147,1.068,152,1.638,153,0.972,154,1.29,155,2.216,156,1.746,157,1.746,158,0.972,160,1.29,161,0.729,162,1.979,164,1.29,165,2.213,166,1.29,180,1.755,188,2.128,204,2.584,205,1.748,206,3.22,207,3.654,208,2.873,209,3.22,210,3.002,211,2.873,212,2.873,213,3.008,214,3.008,215,2.681,216,3.22,217,2.337,218,2.873,219,2.584,220,2.128,221,2.365,222,2.223,223,1.748,224,2.365,225,1.959,226,3.008,227,2.223,228,2.223,229,1.959,230,1.959,231,1.422,232,2.651]],["title/interfaces/TaskResult.html",[144,0.526,233,2.202]],["body/interfaces/TaskResult.html",[3,0.16,4,0.139,5,0.12,7,0.139,11,0.038,15,0.768,16,0.5,17,0.493,20,0.16,21,0.052,23,0.85,24,3.154,26,0.018,27,0.012,31,0.252,47,0.668,50,0.383,52,0.449,53,1.305,54,0.668,56,0.567,78,1.017,87,0.52,89,0.383,92,0.919,96,1.166,100,0.874,101,1.666,103,1.194,108,1.159,111,1.931,113,0.629,118,2.859,121,0.85,139,0.794,143,3.526,144,0.203,146,0.493,158,0.372,161,0.805,165,1.159,167,0.493,168,1.407,170,0.493,172,1.275,177,0.544,178,0.919,179,0.919,180,0.408,181,1.296,183,0.493,188,1.321,189,1.666,191,0.749,204,1.017,206,0.749,208,2.989,209,1.646,210,1.727,211,0.668,212,0.668,215,0.668,217,0.544,218,1.727,219,1.737,223,1.13,225,0.749,229,1.267,230,1.267,231,1.988,233,2.196,234,0.85,235,0.85,236,2.013,237,0.985,238,1.437,239,1.13,240,1.194,241,0.85,242,0.985,243,1.666,244,2.546,245,1.666,246,0.668,247,3.526,248,3.062,249,1.191,250,0.85,251,0.985,252,0.985,253,3.461,254,0.985,255,3.461,256,4.15,257,4.065,258,1.191,259,3.461,260,3.439,261,2.846,262,4.407,263,1.191,264,2.165,265,1.191,266,1.191,267,2.013,268,4.502,269,1.191,270,1.191,271,2.546,272,3.602,273,0.985,274,3.976,275,2.013,276,1.191,277,4.179,278,3.076,279,2.616,280,2.616,281,4.179,282,2.013,283,2.013,284,2.013,285,1.191,286,1.191,287,1.191,288,1.191,289,1.191,290,3.439,291,1.191,292,1.191,293,1.191,294,1.191,295,3.245,296,1.191,297,1.191,298,1.191,299,3.076,300,1.267,301,1.191,302,1.191,303,1.191,304,3.29,305,1.191,306,0.985,307,1.191,308,1.191,309,0.985,310,2.013,311,1.191,312,1.191,313,2.165,314,0.985,315,3.834,316,2.013,317,2.013,318,3.976,319,1.191,320,2.013,321,2.616,322,1.191,323,1.191,324,1.191,325,1.191,326,2.013,327,1.267,328,2.013,329,2.616,330,2.013,331,2.013,332,1.191,333,1.191,334,2.616,335,1.191,336,1.191,337,1.191,338,1.191,339,3.439,340,1.191,341,1.191,342,1.191,343,1.191,344,1.191,345,1.191,346,2.013,347,1.191,348,0.985,349,2.013,350,1.191,351,1.191,352,1.191,353,4.179,354,1.191,355,1.191,356,1.191,357,2.013,358,1.191,359,1.191,360,1.191,361,1.191,362,2.616,363,1.191,364,1.191,365,1.191,366,1.191,367,1.191,368,1.935,369,3.439,370,1.191,371,1.191,372,2.013,373,2.013,374,1.666,375,1.191,376,1.191,377,1.191,378,1.191,379,1.191,380,1.191,381,1.191,382,0.668,383,1.191,384,3.733,385,1.191,386,0.85,387,1.191,388,2.165,389,1.191,390,1.191,391,1.191,392,2.013,393,1.191,394,2.616,395,1.191,396,1.191,397,1.191,398,2.013,399,1.191,400,1.191,401,1.191,402,1.191,403,2.013,404,2.013,405,1.191,406,2.616,407,1.191,408,1.191,409,1.191,410,1.191,411,1.191,412,1.191,413,2.013,414,2.013,415,1.191,416,1.191,417,1.191,418,1.191,419,1.191,420,1.191,421,2.013,422,2.013,423,1.191,424,1.191,425,1.191,426,1.191,427,2.013,428,1.191,429,1.191,430,2.013,431,2.013,432,1.191,433,1.191,434,2.013,435,1.191,436,1.191,437,1.191,438,1.191,439,1.191,440,1.191,441,2.013,442,1.191,443,0.985,444,2.013,445,0.985,446,1.191,447,0.985,448,0.985,449,1.191]],["title/classes/UpdateWorkflowDefinitionDto.html",[21,0.134,450,1.731]],["body/classes/UpdateWorkflowDefinitionDto.html",[3,0.605,4,0.529,5,0.456,11,0.036,16,0.715,20,0.605,21,0.196,26,0.031,27,0.031,84,2.867,85,2.535,87,1.377,88,3.224,382,2.535,450,2.994,451,3.736,452,5.334,453,5.677,454,3.736,455,3.736,456,3.224]],["title/controllers/WorkflowController.html",[0,1.731,457,1.94]],["body/controllers/WorkflowController.html",[0,0.524,2,0.524,3,0.125,4,0.109,5,0.094,7,0.109,8,1.028,10,1.928,11,0.038,12,1.591,14,2.808,15,0.953,16,0.525,17,0.387,20,0.125,21,0.041,23,1.166,24,2.37,26,0.01,27,0.01,31,0.789,50,0.565,52,0.352,53,1.223,54,0.524,56,0.907,84,1.319,87,1.573,89,0.669,90,1.842,91,0.902,92,1.928,94,1.377,95,0.902,96,1.019,103,0.746,108,0.82,111,3.066,121,0.667,137,0.524,140,2.509,141,2.736,142,0.773,143,1.166,145,0.32,149,0.387,150,0.387,151,0.387,152,1.018,161,1.302,168,1.405,174,1.545,175,1.545,176,1.545,181,1.405,182,0.746,185,2.736,188,0.825,191,1.028,192,1.352,193,1.352,194,1.352,195,1.352,198,0.773,199,0.773,200,1.802,201,0.773,202,0.773,210,2.782,217,0.746,220,1.319,221,0.917,239,0.917,240,0.994,241,0.667,246,1.222,247,1.166,248,1.832,250,0.667,253,2.33,254,1.352,255,1.865,256,0.667,257,0.667,259,0.667,261,3.779,262,4.152,272,3.599,300,1.643,327,2.463,368,1.867,374,2.909,382,1.466,443,1.352,445,0.773,447,0.773,448,0.773,450,1.466,456,1.166,457,1.028,458,0.773,459,0.934,460,0.773,461,1.634,462,2.178,463,2.162,464,1.352,465,1.634,466,1.634,467,1.352,468,1.634,469,0.934,470,1.352,471,2.178,472,3.264,473,4.566,474,2.612,475,4.566,476,0.934,477,2.912,478,0.934,479,0.934,480,0.934,481,3.264,482,1.634,483,2.612,484,0.934,485,1.634,486,3.264,487,3.264,488,2.162,489,0.934,490,1.634,491,0.934,492,0.934,493,0.934,494,2.162,495,0.934,496,0.934,497,0.934,498,1.166,499,1.802,500,0.934,501,0.773,502,0.934,503,0.934,504,1.634,505,0.934,506,0.934,507,0.934,508,0.934,509,1.352,510,0.934,511,0.934,512,1.352,513,0.934,514,0.773,515,0.934,516,1.802,517,1.634,518,1.634,519,0.934,520,0.934,521,0.934,522,0.934,523,1.352,524,1.634,525,0.934,526,0.934,527,0.934,528,2.701,529,0.934,530,1.634,531,0.934,532,0.773,533,2.612,534,0.934,535,2.178,536,0.934,537,0.934,538,0.934,539,0.773,540,0.934,541,0.773,542,1.352,543,2.612,544,4.35,545,3.515,546,4.957,547,0.934,548,0.773,549,0.934,550,0.934,551,0.773,552,0.773,553,0.934,554,0.934,555,4.892,556,1.634,557,2.968,558,2.509,559,0.934,560,0.934,561,0.667,562,0.773,563,2.612,564,0.934,565,1.352,566,2.612,567,0.934,568,0.934,569,2.178,570,2.178,571,1.634,572,0.934,573,0.588,574,1.555,575,0.667,576,1.634,577,0.934,578,3.515,579,2.968,580,1.634,581,2.178,582,0.934,583,2.701,584,0.934,585,0.934,586,2.612,587,0.934,588,0.934,589,1.634,590,0.934,591,0.934,592,1.352,593,0.934,594,0.934,595,0.934,596,2.178,597,0.934,598,1.634,599,0.934,600,2.178,601,0.934,602,2.968,603,0.773,604,2.612,605,2.612,606,1.634,607,1.802,608,0.934,609,2.612,610,1.634,611,2.612,612,1.634,613,2.612,614,1.634,615,2.612,616,1.634,617,0.934,618,0.934,619,0.934,620,0.934,621,0.934,622,2.178,623,0.934,624,2.178,625,0.934,626,0.934,627,0.934,628,1.634,629,0.934,630,1.634,631,1.634,632,1.634,633,0.934,634,1.634,635,0.934,636,0.934,637,0.934,638,1.634,639,0.934,640,0.934,641,1.352,642,0.773,643,1.634,644,0.934,645,1.634,646,0.934,647,1.634,648,0.934,649,0.934,650,0.934,651,0.934,652,0.934,653,0.934,654,0.934,655,0.934,656,0.934,657,0.934,658,0.934,659,0.934,660,0.934,661,0.773,662,1.634,663,0.934,664,0.934,665,0.934,666,0.934,667,0.934,668,0.934,669,0.934,670,0.934,671,1.634,672,0.934,673,0.934,674,0.934,675,0.934,676,0.934,677,0.934,678,0.773,679,0.934,680,0.934,681,0.934,682,0.934,683,0.934,684,1.634,685,0.934,686,0.934,687,0.934,688,0.934,689,0.934,690,0.934,691,0.934,692,0.934,693,0.934,694,0.934,695,0.934,696,0.934,697,0.934]],["title/entities/WorkflowDefinition.html",[50,0.587,153,0.963]],["body/entities/WorkflowDefinition.html",[3,0.404,4,0.354,5,0.305,7,0.354,10,2.636,11,0.037,12,2.175,15,1.005,16,0.404,20,0.732,21,0.131,26,0.024,27,0.024,31,0.638,50,0.786,56,0.895,72,1.694,89,0.786,90,1.468,91,1.948,93,2.373,94,1.304,95,1.948,96,1.468,100,1.552,108,1.555,113,0.943,139,1.065,144,0.862,145,1.612,147,2.003,148,1.378,149,1.251,150,1.251,151,1.251,152,1.733,153,0.943,154,1.251,155,2.263,156,1.948,157,1.948,158,0.943,159,1.694,160,1.709,161,1.182,162,2.263,163,2.146,164,1.948,165,1.904,166,1.948,167,1.709,168,1.137,169,1.884,170,1.251,171,1.524,172,1.251,173,1.884,174,1.251,175,1.251,176,1.251,177,1.378,178,1.378,179,1.378,180,1.035,181,1.555,182,1.884,183,1.709,184,2.083,698,3.018,699,3.018,700,3.018,701,3.018,702,3.018,703,3.018,704,3.018,705,3.018,706,3.018,707,3.018]],["title/entities/WorkflowInstance.html",[53,0.963,153,0.963]],["body/entities/WorkflowInstance.html",[3,0.368,4,0.322,5,0.278,7,0.322,10,2.645,11,0.037,12,2.183,15,0.904,16,0.518,20,0.685,21,0.119,26,0.023,27,0.023,50,1.037,52,1.035,53,1.207,56,0.888,72,1.542,87,0.709,89,0.736,94,0.709,100,1.453,103,2.042,113,1.207,118,2.724,139,1.253,144,0.659,147,2.006,152,0.942,153,0.858,154,1.138,155,2.198,156,1.853,157,1.853,158,0.858,160,1.602,161,1.046,162,2.198,164,1.853,165,2.159,166,1.853,180,1.819,188,2.582,204,2.258,205,1.542,206,1.728,207,1.962,208,1.542,209,1.728,210,2.724,211,1.542,212,2.17,213,2.76,214,2.76,215,2.87,216,3.052,217,2.216,218,2.724,219,2.45,220,1.952,221,2.17,222,1.962,223,2.51,224,2.51,225,1.728,226,2.76,227,3.192,228,3.192,229,1.728,230,1.728,231,1.255,232,2.432,488,2.274,708,3.865,709,2.748,710,2.748,711,2.748,712,2.748,713,2.748,714,2.748,715,2.748,716,2.748,717,2.748,718,2.748,719,2.748,720,2.748,721,2.748]],["title/modules/WorkflowModule.html",[28,1.731,40,1.731]],["body/modules/WorkflowModule.html",[2,2.687,3,0.507,4,0.443,5,0.382,11,0.037,16,0.791,17,1.568,20,0.507,21,0.164,26,0.028,27,0.028,28,2.948,30,2.124,31,0.8,32,2.701,33,2.701,34,2.124,35,3.75,36,3.75,40,3.411,41,3.418,42,2.701,43,2.38,45,3.131,46,3.131,47,2.124,50,0.72,52,1.426,53,1.495,54,2.124,87,0.977,239,2.687,240,2.806,241,2.701,246,3.45,457,3.304,552,3.131,722,3.131,723,3.131,724,3.131,725,3.784,726,3.784,727,3.784]],["title/injectables/WorkflowService.html",[78,1.557,240,1.408]],["body/injectables/WorkflowService.html",[3,0.301,4,0.263,5,0.227,7,0.263,8,2.102,11,0.038,12,2.027,14,3.312,15,0.97,16,0.687,17,0.931,20,0.301,21,0.098,24,2.877,26,0.02,27,0.02,31,0.707,47,1.261,50,0.899,52,0.847,53,0.702,54,1.261,56,0.799,78,1.687,79,1.604,84,2.231,87,1.323,92,2.404,94,1.359,96,1.246,139,0.58,158,0.702,161,1.232,208,1.261,211,2.239,237,1.859,238,3.659,239,1.876,240,1.526,247,3.371,248,2.778,250,2.386,251,1.859,252,3.301,253,4.266,255,4.096,256,4.059,257,3.533,259,2.848,271,1.859,273,1.859,295,3.113,300,1.413,304,2.765,306,1.859,309,1.859,327,2.51,382,2.239,450,2.48,456,2.386,463,3.656,464,2.765,467,2.765,477,3.759,501,2.765,514,2.765,532,1.859,539,1.859,548,1.859,551,1.859,583,2.765,728,1.859,729,3.342,730,3.342,731,3.989,732,2.247,733,2.247,734,3.342,735,3.342,736,2.247,737,3.342,738,2.247,739,2.247,740,3.342,741,2.247,742,3.342,743,2.247,744,2.247,745,2.247,746,4.418,747,2.247,748,2.247,749,2.247,750,2.247,751,2.247,752,3.342,753,2.247,754,2.247,755,3.342,756,2.247,757,2.247,758,1.859,759,1.859,760,3.301,761,3.342,762,2.247,763,2.247,764,2.247,765,2.247,766,3.989,767,3.342,768,2.247,769,2.247,770,2.247,771,3.342,772,3.342,773,2.247,774,2.247,775,2.247,776,2.247,777,2.247,778,2.247,779,2.247,780,2.247,781,2.247,782,2.247,783,2.247,784,2.247,785,2.247,786,2.247,787,2.247]],["title/interfaces/WorkflowState.html",[144,0.526,224,1.731]],["body/interfaces/WorkflowState.html",[3,0.442,4,0.386,5,0.333,7,0.386,11,0.037,15,0.893,16,0.587,20,0.731,21,0.143,26,0.026,27,0.026,50,0.997,52,1.243,53,1.03,56,0.795,87,0.852,89,0.834,94,0.852,100,1.549,103,1.506,113,1.03,118,2.459,139,1.131,144,0.747,146,1.367,147,1.132,152,1.132,153,1.03,154,1.367,155,2.259,156,1.815,157,1.815,158,1.03,160,1.367,161,0.772,162,2.038,164,1.367,165,2.112,166,1.367,180,1.797,188,2.212,204,2.888,205,1.852,206,2.075,207,2.355,208,1.852,209,2.075,210,2.459,211,1.852,212,2.459,213,3.127,214,3.127,215,2.76,216,3.296,217,2.392,218,2.941,219,2.645,220,2.212,221,2.459,222,2.355,223,1.852,224,2.76,225,2.075,226,3.127,227,2.355,228,2.355,229,3.296,230,3.296,231,2.392,232,2.755]],["title/interfaces/WorkflowStep.html",[144,0.526,163,1.408]],["body/interfaces/WorkflowStep.html",[3,0.432,4,0.378,5,0.326,7,0.378,11,0.037,15,1.036,16,0.432,20,0.746,21,0.14,26,0.025,27,0.025,31,1.098,50,0.614,56,0.917,89,0.822,90,1.008,91,1.337,92,2.543,93,1.629,94,1.397,95,1.337,96,1.008,100,1.475,108,1.216,113,1.008,139,0.833,144,0.886,145,1.982,146,1.337,147,1.107,148,1.473,149,1.337,150,1.337,151,1.337,152,1.91,153,1.008,154,1.337,155,2.152,156,1.788,157,1.788,158,1.008,159,1.811,160,1.337,161,1.267,162,2.015,163,2.221,164,1.337,165,1.626,166,1.337,167,2.152,168,1.957,169,2.371,170,2.152,171,1.629,172,2.152,173,2.371,174,1.337,175,1.337,176,1.337,177,1.473,178,1.473,179,1.473,180,1.107,181,1.626,182,1.971,183,1.788,184,2.179]],["title/classes/WorkflowStepDto.html",[21,0.134,120,1.94]],["body/classes/WorkflowStepDto.html",[3,0.353,4,0.308,5,0.266,7,0.308,10,2.512,11,0.037,12,2.073,15,0.938,16,0.585,20,0.353,21,0.163,26,0.022,27,0.022,31,0.924,52,0.992,56,0.914,85,1.478,87,1.35,89,0.714,90,1.748,92,2.388,94,1.299,96,1.171,97,3.399,100,1.066,105,3.291,106,1.88,109,3.615,120,2.36,126,3.399,127,3.104,128,3.399,129,3.94,132,1.657,135,3.734,136,3.94,137,1.478,138,1.657,139,0.968,141,1.657,145,1.499,149,1.554,150,1.554,151,1.554,152,1.726,161,1.022,167,2.085,168,1.646,170,2.085,171,1.894,172,2.085,174,1.554,175,1.554,176,1.554,177,1.713,178,1.713,179,1.202,180,0.903,219,1.894,239,1.478,295,3.682,315,2.179,368,3.166,498,2.678,561,2.678,565,2.179,573,1.657,575,2.678,758,3.104,759,3.104,788,4.633,789,2.179,790,4.369,791,3.751,792,2.633,793,4.761,794,2.633,795,3.751,796,2.633,797,2.633,798,3.104,799,3.751,800,2.633,801,2.633,802,2.633,803,2.633,804,2.633,805,2.633,806,2.633,807,2.633,808,2.633,809,3.751,810,2.633,811,2.633,812,2.633,813,2.633,814,2.633]],["title/coverage.html",[815,2.989]],["body/coverage.html",[0,2.56,1,2.206,5,0.354,6,2.902,11,0.037,18,1.771,21,0.233,26,0.027,27,0.027,34,1.969,50,0.668,53,1.095,56,0.532,78,2.559,80,2.902,84,1.771,86,2.902,87,1.177,88,3.256,120,2.206,144,0.99,145,1.203,147,2.019,148,2.54,153,1.424,163,1.602,169,1.602,173,1.602,185,2.206,186,2.902,187,2.902,204,1.771,205,2.844,224,1.969,233,2.504,234,3.256,235,3.256,240,1.602,246,1.969,248,1.969,313,5.17,388,2.902,450,1.969,451,2.902,457,2.206,458,2.902,728,2.902,788,2.902,789,2.902,798,2.902,815,2.504,816,2.902,817,3.507,818,4.56,819,2.902,820,5.562,821,3.507,822,4.56,823,4.56,824,5.365,825,3.507,826,3.507,827,3.507,828,3.507,829,2.902,830,2.902,831,3.507,832,2.902,833,3.507,834,3.507]],["title/dependencies.html",[31,0.783,835,2.14]],["body/dependencies.html",[11,0.037,17,1.807,21,0.227,26,0.031,27,0.031,31,0.922,47,2.447,132,2.743,133,3.608,137,2.447,158,1.362,454,3.608,455,3.608,836,5.594,837,4.36,838,4.36,839,4.36,840,5.224,841,4.36,842,4.36,843,4.36,844,4.36,845,4.36,846,4.36,847,4.36,848,4.36,849,4.36,850,4.36,851,4.36,852,4.36,853,4.36,854,4.36,855,4.36]],["title/miscellaneous/enumerations.html",[856,1.306,857,3.064]],["body/miscellaneous/enumerations.html",[7,0.451,11,0.037,26,0.028,27,0.028,147,1.66,148,2.21,167,2.005,172,2.005,181,1.824,182,2.21,183,2.005,184,2.444,205,2.972,212,2.717,215,2.717,216,3.494,217,2.536,218,3.118,219,2.804,220,2.444,221,2.717,232,3.045,234,2.748,235,3.455,242,4.005,243,4.005,244,4.005,245,4.005,558,4.488,856,1.944,857,3.186,858,5.554]],["title/miscellaneous/functions.html",[386,2.644,856,1.306]],["body/miscellaneous/functions.html",[7,0.565,11,0.033,26,0.033,27,0.033,34,3.274,386,3.442,819,3.99,856,2.435,859,4.822]],["title/index.html",[7,0.303,494,2.14,860,2.586]],["body/index.html",[4,0.216,5,0.291,11,0.037,15,0.603,26,0.017,27,0.017,31,0.915,43,2.884,56,0.727,69,2.055,75,2.927,87,1.493,89,0.352,90,1.104,91,0.765,94,0.913,95,0.765,96,1.495,105,3.432,108,0.696,111,2.429,122,2.382,138,1.162,140,1.319,145,0.634,149,0.765,150,0.765,151,0.765,161,0.674,168,1.085,170,0.765,174,1.193,175,1.193,176,1.193,181,1.085,183,0.765,191,1.162,217,1.314,220,0.933,231,1.314,238,2.525,248,1.616,264,2.382,295,1.811,300,2.884,314,1.529,327,1.162,348,1.529,368,2.225,382,2.429,460,2.927,470,1.529,477,1.319,498,1.319,499,2.382,509,1.529,512,1.529,516,2.382,523,1.529,528,2.927,541,1.529,542,3.582,561,1.319,562,2.382,573,1.162,574,1.319,575,1.319,592,1.529,603,2.382,607,4.098,641,2.382,642,1.529,661,1.529,678,2.382,760,2.382,815,2.055,816,3.304,861,1.847,862,2.878,863,3.536,864,2.878,865,1.847,866,1.847,867,1.847,868,1.847,869,3.536,870,1.847,871,1.847,872,4.328,873,1.847,874,5.627,875,1.847,876,4.514,877,2.878,878,2.878,879,3.993,880,2.878,881,1.847,882,4.328,883,2.878,884,3.304,885,2.878,886,2.878,887,1.847,888,1.847,889,3.993,890,5.201,891,1.847,892,1.847,893,1.847,894,1.847,895,1.847,896,1.847,897,2.878,898,3.993,899,1.847,900,2.878,901,1.847,902,4.585,903,3.993,904,1.847,905,2.878,906,1.847,907,1.847,908,1.847,909,1.847,910,3.993,911,3.536,912,3.536,913,1.847,914,1.847,915,2.878,916,1.847,917,1.847,918,2.878,919,1.847,920,1.847,921,2.878,922,1.847,923,1.847,924,1.847,925,2.878,926,1.847,927,1.847,928,3.582,929,2.878,930,1.847,931,1.847,932,1.847,933,1.847,934,1.847,935,1.847,936,1.847,937,1.847,938,2.878,939,1.847,940,1.847,941,1.847,942,1.847,943,3.536,944,1.847,945,1.847,946,1.847,947,1.847,948,1.847,949,1.847,950,2.878,951,1.847,952,1.847,953,1.847,954,1.847,955,1.847,956,2.878,957,1.847,958,1.847,959,1.847,960,3.536,961,3.536,962,2.878,963,1.847,964,1.847,965,1.847,966,2.878,967,1.847,968,1.847,969,1.847,970,1.847,971,2.878,972,1.847,973,1.529,974,1.847,975,1.847,976,1.847,977,1.847,978,1.847,979,1.847,980,3.304,981,3.536,982,1.847,983,1.847,984,1.847,985,1.847,986,2.878,987,1.847,988,2.878,989,2.878,990,1.847,991,1.847,992,1.847,993,1.847,994,1.847,995,1.847,996,1.847,997,1.847,998,1.847,999,1.847,1000,1.847,1001,1.847,1002,3.536,1003,1.847,1004,2.878,1005,1.847,1006,1.847,1007,1.847,1008,2.878,1009,1.847,1010,1.847,1011,1.847,1012,2.878,1013,3.993,1014,1.847,1015,1.847,1016,1.847,1017,1.847,1018,1.847,1019,1.847,1020,1.847,1021,1.847,1022,1.847,1023,1.847,1024,1.847,1025,1.847,1026,1.847,1027,1.847,1028,1.847,1029,1.847,1030,1.847,1031,1.847,1032,1.847,1033,3.536,1034,1.847,1035,1.847,1036,1.847,1037,1.847,1038,1.847,1039,1.847,1040,1.847,1041,2.878,1042,2.878,1043,3.536,1044,4.328,1045,1.847,1046,1.847,1047,3.536,1048,1.847,1049,2.878,1050,1.847,1051,1.847,1052,1.847,1053,1.529,1054,1.847,1055,1.847,1056,3.993,1057,2.878,1058,1.847,1059,1.847,1060,2.878,1061,2.878,1062,1.847,1063,1.847,1064,2.878,1065,1.847,1066,1.847,1067,1.847,1068,1.847]],["title/modules.html",[30,2.35]],["body/modules.html",[11,0.032,26,0.032,27,0.032,29,3.009,30,2.685,40,2.685,928,4.565,1069,5.516,1070,5.516,1071,5.516]],["title/overview.html",[1072,3.464]],["body/overview.html",[2,2.327,11,0.036,18,2.764,26,0.03,27,0.03,28,2.327,29,3.743,30,2.327,31,0.877,32,2.96,33,2.96,34,2.327,35,2.96,36,2.96,37,3.431,38,3.431,39,3.431,40,3.439,41,3.618,42,2.96,43,2.608,72,2.327,79,2.96,85,2.327,146,1.718,240,2.751,246,3.382,573,2.608,574,3.908,722,3.431,723,3.431,724,3.431,1072,3.431,1073,4.146,1074,4.146]],["title/properties.html",[89,0.705,835,2.14]],["body/properties.html",[11,0.036,26,0.032,27,0.032,89,0.911,90,1.494,973,3.958,980,3.958,1075,4.783,1076,4.783,1077,4.783]],["title/miscellaneous/variables.html",[231,1.691,856,1.306]],["body/miscellaneous/variables.html",[7,0.504,11,0.037,26,0.03,27,0.03,50,0.82,53,1.345,55,3.564,56,0.654,57,4.605,58,3.564,60,3.564,61,3.564,63,3.564,64,3.564,65,3.564,67,3.564,69,3.075,72,2.418,73,3.564,113,1.345,138,2.71,139,1.339,223,2.418,231,1.967,558,3.075,829,3.564,830,4.292,832,4.292,856,2.175,876,3.564,884,3.564,1053,3.564,1078,4.307,1079,4.307,1080,4.307,1081,4.307,1082,4.307,1083,4.307,1084,4.307,1085,4.307,1086,4.307]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":313,"title":{},"body":{"interfaces/TaskResult.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1076,"title":{},"body":{"properties.html":{}}}],["0.14.0",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":820,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":821,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":825,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":443,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{}}}],["1.5",{"_index":813,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["10",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":575,"title":{},"body":{"controllers/WorkflowController.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["12345",{"_index":201,"title":{},"body":{"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{}}}],["123e4567",{"_index":192,"title":{},"body":{"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{}}}],["12d3",{"_index":194,"title":{},"body":{"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{}}}],["2",{"_index":574,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{},"overview.html":{}}}],["2.0.4",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":473,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["201",{"_index":481,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["204",{"_index":518,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["3",{"_index":573,"title":{},"body":{"controllers/WorkflowController.html":{},"classes/WorkflowStepDto.html":{},"index.html":{},"overview.html":{}}}],["30000",{"_index":405,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["4",{"_index":1073,"title":{},"body":{"overview.html":{}}}],["404",{"_index":475,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["426614174000",{"_index":198,"title":{},"body":{"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{}}}],["426614174000'})@isstring",{"_index":196,"title":{},"body":{"classes/StartWorkflowDto.html":{}}}],["426614174001",{"_index":682,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["5.0.1",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":1074,"title":{},"body":{"overview.html":{}}}],["7.4.2",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["8.11.3",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["99.99",{"_index":203,"title":{},"body":{"classes/StartWorkflowDto.html":{}}}],["a456",{"_index":195,"title":{},"body":{"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{}}}],["active",{"_index":112,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["add",{"_index":264,"title":{},"body":{"interfaces/TaskResult.html":{},"index.html":{}}}],["allowing",{"_index":916,"title":{},"body":{"index.html":{}}}],["allows",{"_index":985,"title":{},"body":{"index.html":{}}}],["already",{"_index":296,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["amazing",{"_index":966,"title":{},"body":{"index.html":{}}}],["amount",{"_index":202,"title":{},"body":{"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{}}}],["api",{"_index":1002,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":543,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["apioperation",{"_index":544,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["apiparam",{"_index":545,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["apiproperty",{"_index":135,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"classes/WorkflowStepDto.html":{}}}],["apiproperty({description",{"_index":97,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"classes/WorkflowStepDto.html":{}}}],["apiproperty({enum",{"_index":805,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["apipropertyoptional",{"_index":136,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/WorkflowStepDto.html":{}}}],["apipropertyoptional({description",{"_index":109,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/WorkflowStepDto.html":{}}}],["apiresponse",{"_index":546,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["apitags",{"_index":547,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["apitags('workflows",{"_index":553,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["app.controller",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applicantname",{"_index":609,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["application",{"_index":607,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["applications",{"_index":603,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approval",{"_index":1042,"title":{},"body":{"index.html":{}}}],["approve",{"_index":1049,"title":{},"body":{"index.html":{}}}],["approved",{"_index":641,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["approvehandler",{"_index":1050,"title":{},"body":{"index.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":121,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{}}}],["array.isarray(tasks",{"_index":407,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["assess",{"_index":628,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["assessment",{"_index":606,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["associate",{"_index":266,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["async",{"_index":253,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["attempts",{"_index":206,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["author",{"_index":973,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":1030,"title":{},"body":{"index.html":{}}}],["await",{"_index":257,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["aws",{"_index":905,"title":{},"body":{"index.html":{}}}],["b",{"_index":1059,"title":{},"body":{"index.html":{}}}],["backers",{"_index":967,"title":{},"body":{"index.html":{}}}],["backoffmultiplier",{"_index":149,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["based",{"_index":314,"title":{},"body":{"interfaces/TaskResult.html":{},"index.html":{}}}],["between",{"_index":991,"title":{},"body":{"index.html":{}}}],["board",{"_index":959,"title":{},"body":{"index.html":{}}}],["body",{"_index":374,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{}}}],["boolean",{"_index":108,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"index.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":1057,"title":{},"body":{"index.html":{}}}],["branching",{"_index":994,"title":{},"body":{"index.html":{}}}],["break",{"_index":321,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["browse",{"_index":1071,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1069,"title":{},"body":{"modules.html":{}}}],["building",{"_index":864,"title":{},"body":{"index.html":{}}}],["built",{"_index":984,"title":{},"body":{"index.html":{}}}],["cancel",{"_index":470,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["cancelled",{"_index":221,"title":{},"body":{"interfaces/StepState.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"miscellaneous/enumerations.html":{}}}],["cancelworkflow",{"_index":461,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["cancelworkflow(@param('instanceid",{"_index":696,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["cancelworkflow(instanceid",{"_index":448,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{}}}],["case",{"_index":318,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["catch",{"_index":281,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["cd",{"_index":1014,"title":{},"body":{"index.html":{}}}],["changes",{"_index":1062,"title":{},"body":{"index.html":{}}}],["channel",{"_index":931,"title":{},"body":{"index.html":{}}}],["check",{"_index":300,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{},"index.html":{}}}],["checkcirculardependencies",{"_index":729,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["checkcirculardependencies(steps",{"_index":735,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["checkout",{"_index":1058,"title":{},"body":{"index.html":{}}}],["circular",{"_index":772,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["class",{"_index":21,"title":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"classes/WorkflowStepDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":85,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"classes/WorkflowStepDto.html":{},"overview.html":{}}}],["clean",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clicks",{"_index":915,"title":{},"body":{"index.html":{}}}],["clone",{"_index":1012,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":901,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_workflowmodule",{"_index":722,"title":{},"body":{"modules/WorkflowModule.html":{},"overview.html":{}}}],["cluster_workflowmodule_exports",{"_index":723,"title":{},"body":{"modules/WorkflowModule.html":{},"overview.html":{}}}],["cluster_workflowmodule_providers",{"_index":724,"title":{},"body":{"modules/WorkflowModule.html":{},"overview.html":{}}}],["column",{"_index":155,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{}}}],["column('jsonb",{"_index":162,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{}}}],["column({default",{"_index":702,"title":{},"body":{"entities/WorkflowDefinition.html":{}}}],["column({nullable",{"_index":708,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["column({type",{"_index":716,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["come",{"_index":922,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1061,"title":{},"body":{"index.html":{}}}],["complete",{"_index":340,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["completed",{"_index":218,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"miscellaneous/enumerations.html":{}}}],["completedat",{"_index":228,"title":{},"body":{"interfaces/StepState.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["completedstepids",{"_index":288,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["completedstepids.has(depid",{"_index":302,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["completedstepids.has(step.id",{"_index":297,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["completedsteps",{"_index":230,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["complex",{"_index":987,"title":{},"body":{"index.html":{}}}],["comprehensive",{"_index":998,"title":{},"body":{"index.html":{}}}],["condition",{"_index":172,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"miscellaneous/enumerations.html":{}}}],["conditional",{"_index":989,"title":{},"body":{"index.html":{}}}],["config",{"_index":168,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["configuration",{"_index":793,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["const",{"_index":256,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["constructor",{"_index":250,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["constructor(workflowdefinitionrepo",{"_index":732,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["context",{"_index":384,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["continue",{"_index":346,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/WorkflowController.html":{}},"body":{"controllers/AppController.html":{},"controllers/WorkflowController.html":{},"coverage.html":{}}}],["controller('workflows",{"_index":554,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/WorkflowController.html":{},"modules/WorkflowModule.html":{},"overview.html":{}}}],["courses",{"_index":937,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":815,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":382,"title":{},"body":{"interfaces/TaskResult.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{},"index.html":{}}}],["create(@body",{"_index":649,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["create(createdto",{"_index":738,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["create(createworkflowdto",{"_index":478,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["created",{"_index":482,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["createdat",{"_index":164,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{}}}],["createdatecolumn",{"_index":156,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{}}}],["createdb",{"_index":1027,"title":{},"body":{"index.html":{}}}],["createdto",{"_index":740,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["createworkflowdefinitiondto",{"_index":84,"title":{"classes/CreateWorkflowDefinitionDto.html":{}},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{},"coverage.html":{}}}],["createworkflowdto",{"_index":490,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["creating",{"_index":1040,"title":{},"body":{"index.html":{}}}],["creation",{"_index":485,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["credit",{"_index":604,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["credit.output.creditscore",{"_index":631,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["credit_card",{"_index":685,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["creditchecker",{"_index":621,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["creditreport",{"_index":626,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["creditscore",{"_index":624,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["current",{"_index":310,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["currentsteps",{"_index":229,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["data",{"_index":189,"title":{},"body":{"classes/StartWorkflowDto.html":{},"interfaces/TaskResult.html":{}}}],["database",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["database.module.ts",{"_index":830,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":165,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{}}}],["date.now",{"_index":413,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["db_host=localhost",{"_index":1021,"title":{},"body":{"index.html":{}}}],["db_name=workflow_engine",{"_index":1025,"title":{},"body":{"index.html":{}}}],["db_password=postgres",{"_index":1024,"title":{},"body":{"index.html":{}}}],["db_port=5432",{"_index":1022,"title":{},"body":{"index.html":{}}}],["db_username=postgres",{"_index":1023,"title":{},"body":{"index.html":{}}}],["decision",{"_index":182,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"miscellaneous/enumerations.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"classes/WorkflowStepDto.html":{}}}],["deeper",{"_index":933,"title":{},"body":{"index.html":{}}}],["default",{"_index":113,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":122,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"index.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"injectables/WorkflowService.html":{},"classes/WorkflowStepDto.html":{}}}],["definition",{"_index":111,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"index.html":{}}}],["definition'})@apiparam({name",{"_index":517,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["definition'})@apiresponse({status",{"_index":480,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["definition'})@isstring",{"_index":116,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["definition.dto",{"_index":456,"title":{},"body":{"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["definition.dto.ts",{"_index":88,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"coverage.html":{}}}],["definition.dto.ts:16",{"_index":117,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["definition.dto.ts:20",{"_index":99,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["definition.dto.ts:29",{"_index":125,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["definition.dto.ts:41",{"_index":107,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["definition.dto.ts:53",{"_index":119,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["definition.dto.ts:61",{"_index":115,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["definition.entity",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"classes/WorkflowStepDto.html":{}}}],["definition.entity.ts",{"_index":148,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["definition.entity.ts:12",{"_index":700,"title":{},"body":{"entities/WorkflowDefinition.html":{}}}],["definition.entity.ts:15",{"_index":704,"title":{},"body":{"entities/WorkflowDefinition.html":{}}}],["definition.entity.ts:18",{"_index":699,"title":{},"body":{"entities/WorkflowDefinition.html":{}}}],["definition.entity.ts:21",{"_index":706,"title":{},"body":{"entities/WorkflowDefinition.html":{}}}],["definition.entity.ts:24",{"_index":701,"title":{},"body":{"entities/WorkflowDefinition.html":{}}}],["definition.entity.ts:27",{"_index":705,"title":{},"body":{"entities/WorkflowDefinition.html":{}}}],["definition.entity.ts:30",{"_index":703,"title":{},"body":{"entities/WorkflowDefinition.html":{}}}],["definition.entity.ts:33",{"_index":698,"title":{},"body":{"entities/WorkflowDefinition.html":{}}}],["definition.entity.ts:36",{"_index":707,"title":{},"body":{"entities/WorkflowDefinition.html":{}}}],["definitions",{"_index":499,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["definitions'})@apiresponse({status",{"_index":497,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["delay",{"_index":245,"title":{},"body":{"interfaces/TaskResult.html":{},"miscellaneous/enumerations.html":{}}}],["delete",{"_index":516,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["delete(':id",{"_index":664,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":515,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["deleted",{"_index":665,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["deleted'})@apiresponse({status",{"_index":519,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":771,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["depends",{"_index":795,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["depid",{"_index":766,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["deploy",{"_index":889,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":904,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":897,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":914,"title":{},"body":{"index.html":{}}}],["description",{"_index":90,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":509,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["detected",{"_index":778,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["development",{"_index":877,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":945,"title":{},"body":{"index.html":{}}}],["dfs",{"_index":776,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["dfs(depid",{"_index":784,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["dfs(step.id",{"_index":787,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["directory",{"_index":1019,"title":{},"body":{"index.html":{}}}],["discord",{"_index":930,"title":{},"body":{"index.html":{}}}],["dive",{"_index":932,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":816,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["does'})@isstring",{"_index":98,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["don't",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["dropschema",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto/create",{"_index":548,"title":{},"body":{"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["dto/start",{"_index":549,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["dto/update",{"_index":551,"title":{},"body":{"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["duration",{"_index":394,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["e2e",{"_index":885,"title":{},"body":{"index.html":{}}}],["e89b",{"_index":193,"title":{},"body":{"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{}}}],["each",{"_index":138,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/WorkflowStepDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["efficient",{"_index":865,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":895,"title":{},"body":{"index.html":{}}}],["email",{"_index":141,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{},"classes/WorkflowStepDto.html":{}}}],["emailhandler",{"_index":564,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["emailworkflow",{"_index":556,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["endpoints",{"_index":1032,"title":{},"body":{"index.html":{}}}],["endtime",{"_index":207,"title":{},"body":{"interfaces/StepState.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["engine",{"_index":981,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":893,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":949,"title":{},"body":{"index.html":{}}}],["entities",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/workflow",{"_index":239,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"classes/WorkflowStepDto.html":{}}}],["entity",{"_index":153,"title":{"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{}},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"coverage.html":{}}}],["entity('workflow_definitions",{"_index":159,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{}}}],["entity('workflow_instances",{"_index":222,"title":{},"body":{"interfaces/StepState.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["enum",{"_index":180,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["enumerations",{"_index":857,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":1017,"title":{},"body":{"index.html":{}}}],["environment",{"_index":1016,"title":{},"body":{"index.html":{}}}],["error",{"_index":208,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{}}}],["error('parallel",{"_index":409,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["error('task",{"_index":419,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["error(`condition",{"_index":391,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["error(`duplicate",{"_index":763,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["error(`http",{"_index":380,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["error(`script",{"_index":389,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["error(`step",{"_index":769,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["error(`unsupported",{"_index":326,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["error(`workflow",{"_index":260,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["error.message",{"_index":353,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["evaluate",{"_index":399,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["evaluatecondition",{"_index":390,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["evaluation",{"_index":392,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["example",{"_index":105,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["examples",{"_index":487,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["execute",{"_index":191,"title":{},"body":{"classes/StartWorkflowDto.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"index.html":{}}}],["executedecision",{"_index":397,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["executedelay(config",{"_index":393,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["executehttptask(config",{"_index":370,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["executeparallel",{"_index":402,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["executescripttask",{"_index":381,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["executesteps",{"_index":305,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["executetask",{"_index":354,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["executeworkflow",{"_index":462,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["executeworkflow(id",{"_index":491,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["executeworkflow(instanceid",{"_index":270,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["executing",{"_index":283,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["execution",{"_index":368,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["execution'})@apiresponse({status",{"_index":529,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["execution'})@isoptional()@isnumber",{"_index":803,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["execution.service",{"_index":552,"title":{},"body":{"controllers/WorkflowController.html":{},"modules/WorkflowModule.html":{}}}],["execution.service.ts",{"_index":235,"title":{},"body":{"interfaces/TaskResult.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["exist",{"_index":765,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["experience",{"_index":935,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{},"overview.html":{}}}],["express",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["expression",{"_index":177,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["extends",{"_index":452,"title":{},"body":{"classes/UpdateWorkflowDefinitionDto.html":{}}}],["failed",{"_index":219,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"classes/WorkflowStepDto.html":{},"miscellaneous/enumerations.html":{}}}],["failfast",{"_index":406,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["failurecount",{"_index":432,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["false",{"_index":299,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["fast",{"_index":908,"title":{},"body":{"index.html":{}}}],["feature",{"_index":1056,"title":{},"body":{"index.html":{}}}],["feature/amazing",{"_index":1060,"title":{},"body":{"index.html":{}}}],["features",{"_index":918,"title":{},"body":{"index.html":{}}}],["fetch(url",{"_index":376,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["few",{"_index":910,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"coverage.html":{},"index.html":{}}}],["filter((step",{"_index":293,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["find",{"_index":438,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["findall",{"_index":463,"title":{},"body":{"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["findinstancebyid",{"_index":730,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["findinstancebyid(id",{"_index":742,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["findone",{"_index":464,"title":{},"body":{"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["findone(@param('id",{"_index":653,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["findone(id",{"_index":501,"title":{},"body":{"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["findreadysteps(instance",{"_index":285,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["flexible",{"_index":983,"title":{},"body":{"index.html":{}}}],["focus",{"_index":917,"title":{},"body":{"index.html":{}}}],["follow",{"_index":953,"title":{},"body":{"index.html":{}}}],["following",{"_index":1020,"title":{},"body":{"index.html":{}}}],["fork",{"_index":1055,"title":{},"body":{"index.html":{}}}],["format",{"_index":142,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{}}}],["found",{"_index":261,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{}}}],["found'})@apibody({description",{"_index":530,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["found'})@httpcode(httpstatus.no_content",{"_index":520,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["framework",{"_index":863,"title":{},"body":{"index.html":{}}}],["full",{"_index":948,"title":{},"body":{"index.html":{}}}],["function",{"_index":388,"title":{},"body":{"interfaces/TaskResult.html":{},"coverage.html":{}}}],["functionality",{"_index":661,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["functions",{"_index":386,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/TaskResult.html":{},"miscellaneous/functions.html":{}}}],["g",{"_index":913,"title":{},"body":{"index.html":{}}}],["generates",{"_index":440,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["generateworkflowoutput",{"_index":437,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["get(':id",{"_index":652,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["get(':id')@apioperation({summary",{"_index":502,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["get('instances/:id",{"_index":672,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["get('instances/:id')@apioperation({summary",{"_index":507,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["get()@apioperation({summary",{"_index":496,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":860,"title":{"index.html":{}},"body":{}}],["getworkflowinstance",{"_index":465,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["getworkflowinstance(@param('id",{"_index":673,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["getworkflowinstance(id",{"_index":506,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["git",{"_index":1013,"title":{},"body":{"index.html":{}}}],["graph",{"_index":940,"title":{},"body":{"index.html":{}}}],["grow",{"_index":963,"title":{},"body":{"index.html":{}}}],["handle",{"_index":996,"title":{},"body":{"index.html":{}}}],["handler",{"_index":174,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["hands",{"_index":934,"title":{},"body":{"index.html":{}}}],["handy",{"_index":923,"title":{},"body":{"index.html":{}}}],["headers",{"_index":373,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["hello",{"_index":82,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":938,"title":{},"body":{"index.html":{}}}],["helper",{"_index":385,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["here",{"_index":971,"title":{},"body":{"index.html":{}}}],["here's",{"_index":1039,"title":{},"body":{"index.html":{}}}],["host",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":243,"title":{},"body":{"interfaces/TaskResult.html":{},"miscellaneous/enumerations.html":{}}}],["httpcode",{"_index":537,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":666,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["https://nestjs.com",{"_index":977,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":538,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["id",{"_index":161,"title":{},"body":{"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["id'})@apiparam({name",{"_index":503,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["id'})@apiresponse({status",{"_index":472,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["identifier",{"_index":798,"title":{},"body":{"classes/WorkflowStepDto.html":{},"coverage.html":{}}}],["ids",{"_index":759,"title":{},"body":{"injectables/WorkflowService.html":{},"classes/WorkflowStepDto.html":{}}}],["implement",{"_index":401,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{}}}],["income",{"_index":611,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["information",{"_index":899,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":920,"title":{},"body":{"index.html":{}}}],["initialdelay",{"_index":150,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["injectable",{"_index":78,"title":{"injectables/AppService.html":{},"injectables/WorkflowService.html":{}},"body":{"injectables/AppService.html":{},"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{},"coverage.html":{}}}],["injectables",{"_index":79,"title":{},"body":{"injectables/AppService.html":{},"injectables/WorkflowService.html":{},"overview.html":{}}}],["injectrepository",{"_index":237,"title":{},"body":{"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{}}}],["injectrepository(workflowdefinition",{"_index":750,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["injectrepository(workflowinstance",{"_index":251,"title":{},"body":{"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{}}}],["input",{"_index":103,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["input.amount",{"_index":814,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["input.applicantname",{"_index":610,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["input.body",{"_index":568,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["input.email",{"_index":565,"title":{},"body":{"controllers/WorkflowController.html":{},"classes/WorkflowStepDto.html":{}}}],["input.income",{"_index":612,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["input.items",{"_index":587,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["input.loanamount",{"_index":614,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["input.loanterm",{"_index":616,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["input.orderid",{"_index":585,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["input.paymentmethod",{"_index":597,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["input.request",{"_index":1046,"title":{},"body":{"index.html":{}}}],["input.ssn",{"_index":623,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["input.subject",{"_index":567,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["input.templateid",{"_index":659,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["input/output",{"_index":993,"title":{},"body":{"index.html":{}}}],["inputmapping",{"_index":175,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["inputschema",{"_index":91,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"index.html":{}}}],["install",{"_index":912,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1011,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":875,"title":{},"body":{"index.html":{}}}],["instance",{"_index":262,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{}}}],["instance.completedat",{"_index":343,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.entity",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{}}}],["instance.entity.ts",{"_index":205,"title":{},"body":{"interfaces/StepState.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["instance.entity.ts:24",{"_index":711,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["instance.entity.ts:27",{"_index":721,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["instance.entity.ts:31",{"_index":720,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["instance.entity.ts:34",{"_index":712,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["instance.entity.ts:37",{"_index":713,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["instance.entity.ts:40",{"_index":715,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["instance.entity.ts:47",{"_index":717,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["instance.entity.ts:50",{"_index":710,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["instance.entity.ts:53",{"_index":718,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["instance.entity.ts:56",{"_index":714,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["instance.entity.ts:59",{"_index":709,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["instance.output",{"_index":344,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.startedat",{"_index":276,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.state",{"_index":287,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.state.completedsteps.length",{"_index":436,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.state.completedsteps.push(stepstate",{"_index":336,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.state.completedsteps[instance.state.completedsteps.length",{"_index":442,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.state.currentsteps",{"_index":337,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.state.currentsteps.filter",{"_index":338,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.state.currentsteps.find",{"_index":328,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.state.currentsteps.push",{"_index":311,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.state.variables",{"_index":339,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.status",{"_index":274,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.workflowdefinition",{"_index":286,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.workflowdefinition.steps.find((s",{"_index":308,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.workflowdefinition.steps.length",{"_index":435,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instanceid",{"_index":272,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{}}}],["interact",{"_index":941,"title":{},"body":{"index.html":{}}}],["interestrate",{"_index":645,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["interface",{"_index":144,"title":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{}},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"coverage.html":{}}}],["interfaces",{"_index":146,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"overview.html":{}}}],["invalid",{"_index":770,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["involving",{"_index":779,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["isactive",{"_index":93,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{}}}],["isarray",{"_index":127,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/WorkflowStepDto.html":{}}}],["isboolean",{"_index":130,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["isenum",{"_index":808,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["isenum(steptype",{"_index":810,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["isnumber",{"_index":809,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["isobject",{"_index":128,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"classes/WorkflowStepDto.html":{}}}],["isoptional",{"_index":129,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/WorkflowStepDto.html":{}}}],["isstring",{"_index":126,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"classes/WorkflowStepDto.html":{}}}],["isvalid",{"_index":617,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["isworkflowcomplete(instance",{"_index":433,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["item",{"_index":684,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["items",{"_index":586,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["javascript",{"_index":178,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["job",{"_index":956,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":958,"title":{},"body":{"index.html":{}}}],["join",{"_index":969,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":214,"title":{},"body":{"interfaces/StepState.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["joining",{"_index":680,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["json",{"_index":101,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/TaskResult.html":{}}}],["json.stringify(body",{"_index":377,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["jsonpath",{"_index":179,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["kamil",{"_index":974,"title":{},"body":{"index.html":{}}}],["key",{"_index":891,"title":{},"body":{"index.html":{}}}],["last",{"_index":439,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["laststep",{"_index":441,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["laststep.output",{"_index":444,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["later",{"_index":1008,"title":{},"body":{"index.html":{}}}],["learn",{"_index":926,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{},"overview.html":{}}}],["license",{"_index":980,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":961,"title":{},"body":{"index.html":{}}}],["line",{"_index":265,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["linkedin",{"_index":955,"title":{},"body":{"index.html":{}}}],["list",{"_index":498,"title":{},"body":{"controllers/WorkflowController.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["literal",{"_index":790,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["loan",{"_index":602,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["loanamount",{"_index":613,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["loandecision",{"_index":637,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["loanid",{"_index":643,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["loanprocessing",{"_index":601,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["loanterm",{"_index":615,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["loanvalidator",{"_index":608,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["localhost",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":236,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["logger(workflowexecutionservice.name",{"_index":249,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["logging",{"_index":999,"title":{},"body":{"index.html":{}}}],["logic",{"_index":562,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["looking",{"_index":900,"title":{},"body":{"index.html":{}}}],["loop",{"_index":951,"title":{},"body":{"index.html":{}}}],["m",{"_index":1063,"title":{},"body":{"index.html":{}}}],["main",{"_index":1031,"title":{},"body":{"index.html":{}}}],["make",{"_index":636,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["makes",{"_index":906,"title":{},"body":{"index.html":{}}}],["manage",{"_index":986,"title":{},"body":{"index.html":{}}}],["management",{"_index":1003,"title":{},"body":{"index.html":{}}}],["managing",{"_index":919,"title":{},"body":{"index.html":{}}}],["manytoone",{"_index":213,"title":{},"body":{"interfaces/StepState.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["manytoone(undefined)@joincolumn({name",{"_index":719,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["map((step",{"_index":303,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":902,"title":{},"body":{"index.html":{}}}],["maxattempts",{"_index":151,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["mechanisms",{"_index":995,"title":{},"body":{"index.html":{}}}],["messageid",{"_index":571,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["metadata",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":372,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["milliseconds",{"_index":171,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["miscellaneous",{"_index":856,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":960,"title":{},"body":{"index.html":{}}}],["mode",{"_index":879,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{},"modules.html":{},"overview.html":{}}}],["monitoring",{"_index":1000,"title":{},"body":{"index.html":{}}}],["more",{"_index":898,"title":{},"body":{"index.html":{}}}],["move",{"_index":335,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["multiple",{"_index":988,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":975,"title":{},"body":{"index.html":{}}}],["name",{"_index":94,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["need",{"_index":946,"title":{},"body":{"index.html":{}}}],["needed",{"_index":387,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["nest",{"_index":869,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":979,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":890,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":454,"title":{},"body":{"classes/UpdateWorkflowDefinitionDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":137,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{},"classes/WorkflowStepDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"interfaces/TaskResult.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"dependencies.html":{}}}],["new",{"_index":248,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{},"coverage.html":{},"index.html":{}}}],["newemailhandler",{"_index":657,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["next",{"_index":347,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["nextsteps",{"_index":349,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["nextsteps.length",{"_index":350,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["node.js",{"_index":862,"title":{},"body":{"index.html":{}}}],["node_env=development",{"_index":1026,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":539,"title":{},"body":{"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["notfoundexception(`workflow",{"_index":675,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["notification",{"_index":557,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["notifications",{"_index":560,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["npm",{"_index":874,"title":{},"body":{"index.html":{}}}],["null",{"_index":369,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["nullable",{"_index":226,"title":{},"body":{"interfaces/StepState.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["number",{"_index":152,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["object",{"_index":140,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"index.html":{}}}],["object.assign(workflow",{"_index":756,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["offer",{"_index":957,"title":{},"body":{"index.html":{}}}],["official",{"_index":903,"title":{},"body":{"index.html":{}}}],["on'})@isarray()@isstring({each",{"_index":796,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["open",{"_index":962,"title":{},"body":{"index.html":{}}}],["optional",{"_index":92,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["ord",{"_index":683,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["order",{"_index":578,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["order.output.total",{"_index":595,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["orderid",{"_index":200,"title":{},"body":{"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{}}}],["orderprocessing",{"_index":577,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["ordervalidator",{"_index":584,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["orderworkflow",{"_index":681,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["origin",{"_index":1065,"title":{},"body":{"index.html":{}}}],["out",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":118,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["output.approved",{"_index":642,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["output.errors",{"_index":619,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["output.id",{"_index":1048,"title":{},"body":{"index.html":{}}}],["output.interestrate",{"_index":646,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["output.isvalid",{"_index":589,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["output.loanid",{"_index":644,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["output.messageid",{"_index":572,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["output.reason",{"_index":648,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["output.recommendedrate",{"_index":635,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["output.report",{"_index":627,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["output.risklevel",{"_index":633,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["output.score",{"_index":625,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["output.sent",{"_index":812,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["output.success",{"_index":570,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["output.total",{"_index":591,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["output.transactionid",{"_index":599,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["outputmapping",{"_index":176,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["outputschema",{"_index":95,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"index.html":{}}}],["overview",{"_index":1072,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":835,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parallel",{"_index":183,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["param",{"_index":540,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["param('id",{"_index":662,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["parameters",{"_index":477,"title":{},"body":{"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{},"index.html":{}}}],["parseint(process.env.db_port",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["parseint(process.env.test_db_port",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["part",{"_index":947,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":453,"title":{},"body":{"classes/UpdateWorkflowDefinitionDto.html":{}}}],["password",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":541,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["patch(':id",{"_index":655,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":534,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["pause",{"_index":512,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["pause/resume",{"_index":997,"title":{},"body":{"index.html":{}}}],["paused",{"_index":220,"title":{},"body":{"interfaces/StepState.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["pauseworkflow",{"_index":466,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["pauseworkflow(@param('instanceid",{"_index":690,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["pauseworkflow(instanceid",{"_index":445,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{}}}],["payload",{"_index":486,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["payment",{"_index":581,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["paymentmethod",{"_index":596,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["paymentprocessor",{"_index":593,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["pending",{"_index":216,"title":{},"body":{"interfaces/StepState.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"miscellaneous/enumerations.html":{}}}],["persistence",{"_index":1005,"title":{},"body":{"index.html":{}}}],["pg",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["platform",{"_index":678,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["please",{"_index":929,"title":{},"body":{"index.html":{}}}],["port",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["possible",{"_index":896,"title":{},"body":{"index.html":{}}}],["post",{"_index":542,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["post(':id/execute",{"_index":669,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["post(':id/execute')@apioperation({summary",{"_index":492,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["post(':instanceid/cancel",{"_index":695,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["post(':instanceid/cancel')@apioperation({summary",{"_index":469,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["post(':instanceid/pause",{"_index":689,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["post(':instanceid/pause')@apioperation({summary",{"_index":511,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["post(':instanceid/resume",{"_index":692,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["post(':instanceid/resume')@apioperation({summary",{"_index":522,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["post('execute",{"_index":676,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["post('execute')@apioperation({summary",{"_index":527,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["post()@apioperation({summary",{"_index":479,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["postgres",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["postgresql",{"_index":1004,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":982,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":459,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["prerequisites",{"_index":1006,"title":{},"body":{"index.html":{}}}],["primarygeneratedcolumn",{"_index":154,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":160,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{}}}],["private",{"_index":247,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["process",{"_index":592,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["process.env.db_host",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_name",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_username",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.node_env",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.test_db_host",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.test_db_name",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.test_db_password",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.test_db_username",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processes",{"_index":580,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["processing",{"_index":579,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["production",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["progressive",{"_index":861,"title":{},"body":{"index.html":{}}}],["project",{"_index":872,"title":{},"body":{"index.html":{}}}],["promise",{"_index":255,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["promise((_",{"_index":415,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["promise((resolve",{"_index":395,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["promise.all(taskpromises",{"_index":425,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["promise.race",{"_index":420,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["properties",{"_index":89,"title":{"properties.html":{}},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{},"properties.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{},"overview.html":{}}}],["pull",{"_index":1066,"title":{},"body":{"index.html":{}}}],["push",{"_index":1064,"title":{},"body":{"index.html":{}}}],["quantity",{"_index":600,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["questions",{"_index":927,"title":{},"body":{"index.html":{}}}],["r.success",{"_index":427,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["r.success).length",{"_index":431,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["read",{"_index":970,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{}}}],["ready",{"_index":348,"title":{},"body":{"interfaces/TaskResult.html":{},"index.html":{}}}],["readysteps",{"_index":278,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["real",{"_index":942,"title":{},"body":{"index.html":{}}}],["reason",{"_index":647,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["recommendedrate",{"_index":634,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["record",{"_index":100,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["recursionstack",{"_index":775,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["recursionstack.add(stepid",{"_index":782,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["recursionstack.delete(stepid",{"_index":785,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["recursionstack.has(stepid",{"_index":777,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["reflect",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["reject",{"_index":416,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["reject(new",{"_index":418,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["relations",{"_index":273,"title":{},"body":{"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{}}}],["remove",{"_index":467,"title":{},"body":{"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["remove(@param('id",{"_index":667,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["remove(id",{"_index":514,"title":{},"body":{"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["repository",{"_index":238,"title":{},"body":{"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{},"index.html":{}}}],["request",{"_index":1044,"title":{},"body":{"index.html":{}}}],["requestid",{"_index":1047,"title":{},"body":{"index.html":{}}}],["required",{"_index":576,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["requires",{"_index":410,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["requiring",{"_index":909,"title":{},"body":{"index.html":{}}}],["reset",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{},"overview.html":{}}}],["resources",{"_index":921,"title":{},"body":{"index.html":{}}}],["response",{"_index":375,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["response.json",{"_index":378,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["response.ok",{"_index":379,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["rest",{"_index":1001,"title":{},"body":{"index.html":{}}}],["result",{"_index":315,"title":{},"body":{"interfaces/TaskResult.html":{},"classes/WorkflowStepDto.html":{}}}],["result.error",{"_index":424,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["result.output",{"_index":334,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["result.success",{"_index":423,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["results.every((r",{"_index":426,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["results.filter((r",{"_index":430,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["results.some((r",{"_index":428,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["resume",{"_index":523,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["resumed",{"_index":524,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["resumeworkflow",{"_index":468,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["resumeworkflow(@param('instanceid",{"_index":693,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["resumeworkflow(instanceid",{"_index":447,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{}}}],["retry",{"_index":561,"title":{},"body":{"controllers/WorkflowController.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["retryconfig",{"_index":145,"title":{"interfaces/RetryConfig.html":{}},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"coverage.html":{},"index.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["risk",{"_index":605,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["risk.output.recommendedrate",{"_index":640,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["risk.output.risklevel",{"_index":639,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["riskassessor",{"_index":629,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["risklevel",{"_index":632,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["root",{"_index":1018,"title":{},"body":{"index.html":{}}}],["run",{"_index":876,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["running",{"_index":217,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["runningstepids",{"_index":291,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["runningstepids.has(step.id",{"_index":298,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["runs",{"_index":894,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":329,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["s.id",{"_index":309,"title":{},"body":{"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{}}}],["s.stepid",{"_index":290,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["safe",{"_index":383,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["savedinstance",{"_index":267,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["scalable",{"_index":866,"title":{},"body":{"index.html":{}}}],["schema",{"_index":102,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["score",{"_index":620,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["script",{"_index":244,"title":{},"body":{"interfaces/TaskResult.html":{},"miscellaneous/enumerations.html":{}}}],["see",{"_index":1068,"title":{},"body":{"index.html":{}}}],["send",{"_index":563,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["sendemail",{"_index":811,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["sends",{"_index":559,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["sent",{"_index":569,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["server",{"_index":867,"title":{},"body":{"index.html":{}}}],["set",{"_index":760,"title":{},"body":{"injectables/WorkflowService.html":{},"index.html":{}}}],["set(completedsteps.map((s",{"_index":289,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["set(currentsteps.map((s",{"_index":292,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["settimeout",{"_index":417,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["settimeout(resolve",{"_index":396,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["setup",{"_index":873,"title":{},"body":{"index.html":{}}}],["shipping",{"_index":582,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["side",{"_index":868,"title":{},"body":{"index.html":{}}}],["simple",{"_index":911,"title":{},"body":{"index.html":{}}}],["skip",{"_index":294,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["skipped",{"_index":232,"title":{},"body":{"interfaces/StepState.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["specific",{"_index":1034,"title":{},"body":{"index.html":{}}}],["specify",{"_index":992,"title":{},"body":{"index.html":{}}}],["sponsors",{"_index":965,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":859,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../workflow",{"_index":858,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":80,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":81,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":819,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/workflow/dto/create",{"_index":86,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"coverage.html":{}}}],["src/workflow/dto/start",{"_index":186,"title":{},"body":{"classes/StartWorkflowDto.html":{},"coverage.html":{}}}],["src/workflow/dto/update",{"_index":451,"title":{},"body":{"classes/UpdateWorkflowDefinitionDto.html":{},"coverage.html":{}}}],["src/workflow/dto/workflow",{"_index":788,"title":{},"body":{"classes/WorkflowStepDto.html":{},"coverage.html":{}}}],["src/workflow/entities/workflow",{"_index":147,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/workflow/workflow",{"_index":234,"title":{},"body":{"interfaces/TaskResult.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/workflow/workflow.controller.ts",{"_index":458,"title":{},"body":{"controllers/WorkflowController.html":{},"coverage.html":{}}}],["src/workflow/workflow.controller.ts:274",{"_index":489,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["src/workflow/workflow.controller.ts:285",{"_index":500,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["src/workflow/workflow.controller.ts:301",{"_index":505,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["src/workflow/workflow.controller.ts:351",{"_index":536,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["src/workflow/workflow.controller.ts:370",{"_index":521,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["src/workflow/workflow.controller.ts:381",{"_index":495,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["src/workflow/workflow.controller.ts:395",{"_index":510,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["src/workflow/workflow.controller.ts:444",{"_index":531,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["src/workflow/workflow.controller.ts:463",{"_index":513,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["src/workflow/workflow.controller.ts:479",{"_index":525,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["src/workflow/workflow.controller.ts:495",{"_index":476,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["src/workflow/workflow.module.ts",{"_index":725,"title":{},"body":{"modules/WorkflowModule.html":{}}}],["src/workflow/workflow.service.ts",{"_index":728,"title":{},"body":{"injectables/WorkflowService.html":{},"coverage.html":{}}}],["src/workflow/workflow.service.ts:10",{"_index":733,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["src/workflow/workflow.service.ts:18",{"_index":739,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["src/workflow/workflow.service.ts:25",{"_index":741,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["src/workflow/workflow.service.ts:29",{"_index":744,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["src/workflow/workflow.service.ts:33",{"_index":747,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["src/workflow/workflow.service.ts:42",{"_index":745,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["src/workflow/workflow.service.ts:47",{"_index":743,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["src/workflow/workflow.service.ts:54",{"_index":749,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["src/workflow/workflow.service.ts:81",{"_index":736,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["ssn",{"_index":622,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["start",{"_index":528,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["start:dev",{"_index":880,"title":{},"body":{"index.html":{}}}],["start:prodapi",{"_index":1029,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":881,"title":{},"body":{"index.html":{}}}],["started",{"_index":494,"title":{"index.html":{}},"body":{"controllers/WorkflowController.html":{}}}],["startedat",{"_index":227,"title":{},"body":{"interfaces/StepState.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["starter",{"_index":871,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":209,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["startworkflow",{"_index":254,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{}}}],["startworkflow(@body",{"_index":686,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["startworkflow(startworkflowdto",{"_index":526,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["startworkflowdto",{"_index":185,"title":{"classes/StartWorkflowDto.html":{}},"body":{"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{},"coverage.html":{}}}],["startworkflowdto.input",{"_index":671,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["startworkflowdto.workflowdefinitionid",{"_index":688,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["state",{"_index":223,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":817,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":210,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["status'})@apiresponse({status",{"_index":508,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["stay",{"_index":950,"title":{},"body":{"index.html":{}}}],["step",{"_index":295,"title":{},"body":{"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["step'})@isenum(steptype",{"_index":806,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["step'})@isstring",{"_index":799,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["step.condition.expression",{"_index":400,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["step.condition.type",{"_index":398,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["step.config",{"_index":362,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["step.config.type",{"_index":357,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["step.dependencies",{"_index":767,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["step.dependencies.every((depid",{"_index":301,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["step.dto",{"_index":134,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["step.dto.ts",{"_index":789,"title":{},"body":{"classes/WorkflowStepDto.html":{},"coverage.html":{}}}],["step.dto.ts:15",{"_index":800,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["step.dto.ts:19",{"_index":801,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["step.dto.ts:23",{"_index":807,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["step.dto.ts:28",{"_index":797,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["step.dto.ts:39",{"_index":794,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["step.dto.ts:55",{"_index":802,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["step.dto.ts:66",{"_index":804,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["step.dto.ts:77",{"_index":792,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["step.id",{"_index":304,"title":{},"body":{"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{}}}],["step.name",{"_index":356,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["step.type",{"_index":317,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["stepcondition",{"_index":173,"title":{"interfaces/StepCondition.html":{}},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"coverage.html":{}}}],["stepconfig",{"_index":169,"title":{"interfaces/StepConfig.html":{}},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"coverage.html":{}}}],["stepid",{"_index":211,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{}}}],["stepids",{"_index":306,"title":{},"body":{"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{}}}],["stepids.add(step.id",{"_index":764,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["stepids.has(depid",{"_index":768,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["stepids.has(step.id",{"_index":762,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["stepids.map((id",{"_index":307,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["steps",{"_index":96,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["steps.assess",{"_index":638,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["steps.check",{"_index":630,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["steps.find((s",{"_index":783,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["steps.submit.output.requestid",{"_index":1051,"title":{},"body":{"index.html":{}}}],["steps.validate",{"_index":594,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["stepstate",{"_index":204,"title":{"interfaces/StepState.html":{}},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"coverage.html":{}}}],["stepstate.endtime",{"_index":332,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["stepstate.error",{"_index":352,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["stepstate.output",{"_index":333,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["stepstate.status",{"_index":330,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["stepstatus",{"_index":212,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"miscellaneous/enumerations.html":{}}}],["stepstatus.completed",{"_index":331,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["stepstatus.failed",{"_index":351,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["stepstatus.running",{"_index":312,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["steptype",{"_index":167,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"miscellaneous/enumerations.html":{}}}],["steptype.decision",{"_index":322,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["steptype.parallel",{"_index":324,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["steptype.task",{"_index":319,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["straightforward",{"_index":907,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["sub_workflow",{"_index":184,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"miscellaneous/enumerations.html":{}}}],["subject",{"_index":566,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["submit",{"_index":1043,"title":{},"body":{"index.html":{}}}],["submithandler",{"_index":1045,"title":{},"body":{"index.html":{}}}],["success",{"_index":143,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{}}}],["successcount",{"_index":429,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["successfully",{"_index":483,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["summary",{"_index":555,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["support",{"_index":928,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1070,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":316,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["synchronize",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":892,"title":{},"body":{"index.html":{}}}],["task",{"_index":181,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["task.id",{"_index":422,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["taskid",{"_index":421,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["taskpromises",{"_index":411,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["taskresult",{"_index":233,"title":{"interfaces/TaskResult.html":{}},"body":{"interfaces/TaskResult.html":{},"coverage.html":{}}}],["tasks",{"_index":403,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["tasks.length",{"_index":408,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["tasks.map(async",{"_index":412,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["tasktype",{"_index":242,"title":{},"body":{"interfaces/TaskResult.html":{},"miscellaneous/enumerations.html":{}}}],["tasktype.condition",{"_index":363,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["tasktype.delay",{"_index":365,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["tasktype.http",{"_index":358,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["tasktype.script",{"_index":360,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["template",{"_index":658,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["templates",{"_index":990,"title":{},"body":{"index.html":{}}}],["test",{"_index":884,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test/.../test",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/test",{"_index":829,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["test:covcontributing",{"_index":1054,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":887,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":886,"title":{},"body":{"index.html":{}}}],["testdatabasemodule",{"_index":832,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["testing",{"_index":1053,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tests",{"_index":882,"title":{},"body":{"index.html":{}}}],["thank",{"_index":679,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["thanks",{"_index":964,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.checkcirculardependencies(workflow.steps",{"_index":773,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["this.evaluatecondition",{"_index":364,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.executedecision(instance",{"_index":323,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.executedelay(step.config",{"_index":366,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.executehttptask(step.config",{"_index":359,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.executeparallel(instance",{"_index":325,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.executescripttask",{"_index":361,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.executesteps(instance",{"_index":280,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.executetask(instance",{"_index":320,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.executeworkflow(savedinstance.id",{"_index":269,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.findone(id",{"_index":755,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["this.findreadysteps(instance",{"_index":279,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.generateworkflowoutput(instance",{"_index":345,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.isworkflowcomplete(instance",{"_index":341,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.logger.debug(`executing",{"_index":355,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.logger.error(`error",{"_index":282,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.logger.error(`task",{"_index":367,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.workflowdefinitionrepo.create(createdto",{"_index":751,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["this.workflowdefinitionrepo.find",{"_index":753,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["this.workflowdefinitionrepo.findoneby",{"_index":754,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["this.workflowdefinitionrepo.remove(workflow",{"_index":757,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["this.workflowdefinitionrepo.save(workflow",{"_index":752,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["this.workflowexecutionservice.cancelworkflow(instanceid",{"_index":697,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["this.workflowexecutionservice.pauseworkflow(instanceid",{"_index":691,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["this.workflowexecutionservice.resumeworkflow(instanceid",{"_index":694,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["this.workflowexecutionservice.startworkflow",{"_index":687,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["this.workflowexecutionservice.startworkflow(id",{"_index":670,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["this.workflowinstancerepo.create",{"_index":263,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.workflowinstancerepo.findone",{"_index":271,"title":{},"body":{"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{}}}],["this.workflowinstancerepo.save(instance",{"_index":268,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.workflowservice.create(createworkflowdto",{"_index":650,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["this.workflowservice.findall",{"_index":651,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["this.workflowservice.findinstancebyid(id",{"_index":674,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["this.workflowservice.findone(id",{"_index":654,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["this.workflowservice.findone(workflowdefinitionid",{"_index":258,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.workflowservice.remove(id",{"_index":668,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["this.workflowservice.update(id",{"_index":663,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["throw",{"_index":259,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["time",{"_index":943,"title":{},"body":{"index.html":{}}}],["timeout",{"_index":170,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["timeoutms",{"_index":404,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["timeoutpromise",{"_index":414,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["title",{"_index":1052,"title":{},"body":{"index.html":{}}}],["total",{"_index":590,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["totalsteps",{"_index":434,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["touch",{"_index":972,"title":{},"body":{"index.html":{}}}],["transactionid",{"_index":598,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["transformer",{"_index":133,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"dependencies.html":{}}}],["true",{"_index":139,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"miscellaneous/variables.html":{}}}],["true})@isoptional()@isboolean",{"_index":114,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["true})@type(undefined",{"_index":124,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["try",{"_index":277,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["twitter",{"_index":978,"title":{},"body":{"index.html":{}}}],["two",{"_index":1041,"title":{},"body":{"index.html":{}}}],["type",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":158,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{}}}],["typeormmodule.forfeature([workflowdefinition",{"_index":727,"title":{},"body":{"modules/WorkflowModule.html":{}}}],["typeormmodule.forroot",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":455,"title":{},"body":{"classes/UpdateWorkflowDefinitionDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":870,"title":{},"body":{"index.html":{}}}],["ui",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":488,"title":{},"body":{"controllers/WorkflowController.html":{},"entities/WorkflowInstance.html":{}}}],["undefined})@isarray()@validatenested({each",{"_index":123,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["undefined})@isobject",{"_index":106,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"classes/WorkflowStepDto.html":{}}}],["undefined})@isoptional()@isobject",{"_index":791,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["under",{"_index":1067,"title":{},"body":{"index.html":{}}}],["unique",{"_index":758,"title":{},"body":{"injectables/WorkflowService.html":{},"classes/WorkflowStepDto.html":{}}}],["unit",{"_index":883,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":1077,"title":{},"body":{"properties.html":{}}}],["up",{"_index":1015,"title":{},"body":{"index.html":{}}}],["update",{"_index":327,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{},"index.html":{}}}],["update(id",{"_index":532,"title":{},"body":{"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["updated",{"_index":535,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["updatedat",{"_index":166,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{}}}],["updatedatecolumn",{"_index":157,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{}}}],["updatedescription",{"_index":660,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["updatedto",{"_index":746,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["updates",{"_index":952,"title":{},"body":{"index.html":{}}}],["updatesteps",{"_index":656,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["updateworkflowdefinitiondto",{"_index":450,"title":{"classes/UpdateWorkflowDefinitionDto.html":{}},"body":{"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{},"coverage.html":{}}}],["updateworkflowdto",{"_index":533,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["url",{"_index":371,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["use",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["user@example.com",{"_index":199,"title":{},"body":{"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{}}}],["username",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":944,"title":{},"body":{"index.html":{}}}],["v12",{"_index":1009,"title":{},"body":{"index.html":{}}}],["v16",{"_index":1007,"title":{},"body":{"index.html":{}}}],["valid",{"_index":588,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["validate",{"_index":583,"title":{},"body":{"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["validatenested",{"_index":131,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["validateworkflowdefinition",{"_index":731,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["validateworkflowdefinition(workflow",{"_index":748,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["validation",{"_index":104,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["validationerrors",{"_index":618,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["validator",{"_index":132,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"classes/WorkflowStepDto.html":{},"dependencies.html":{}}}],["value",{"_index":558,"title":{},"body":{"controllers/WorkflowController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":231,"title":{"miscellaneous/variables.html":{}},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1075,"title":{},"body":{"properties.html":{}}}],["video",{"_index":936,"title":{},"body":{"index.html":{}}}],["visit",{"_index":925,"title":{},"body":{"index.html":{}}}],["visited",{"_index":774,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["visited.add(stepid",{"_index":781,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["visited.has(step.id",{"_index":786,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["visited.has(stepid",{"_index":780,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["visualize",{"_index":939,"title":{},"body":{"index.html":{}}}],["void",{"_index":737,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["watch",{"_index":878,"title":{},"body":{"index.html":{}}}],["website",{"_index":976,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":677,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["whether",{"_index":110,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["workflow",{"_index":87,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"classes/WorkflowStepDto.html":{},"coverage.html":{},"index.html":{}}}],["workflow'})@apiparam({name",{"_index":471,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["workflow'})@apiresponse({status",{"_index":493,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["workflow.controller",{"_index":726,"title":{},"body":{"modules/WorkflowModule.html":{}}}],["workflow.dto",{"_index":550,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["workflow.dto.ts",{"_index":187,"title":{},"body":{"classes/StartWorkflowDto.html":{},"coverage.html":{}}}],["workflow.dto.ts:10",{"_index":197,"title":{},"body":{"classes/StartWorkflowDto.html":{}}}],["workflow.dto.ts:21",{"_index":190,"title":{},"body":{"classes/StartWorkflowDto.html":{}}}],["workflow.service",{"_index":241,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"modules/WorkflowModule.html":{}}}],["workflow.steps",{"_index":761,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["workflow/entities/workflow",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["workflow/workflow.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["workflow_engine",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["workflow_engine_test",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workflow_enginerunning",{"_index":1028,"title":{},"body":{"index.html":{}}}],["workflowcontroller",{"_index":457,"title":{"controllers/WorkflowController.html":{}},"body":{"controllers/WorkflowController.html":{},"modules/WorkflowModule.html":{},"coverage.html":{}}}],["workflowdefinition",{"_index":50,"title":{"entities/WorkflowDefinition.html":{}},"body":{"modules/AppModule.html":{},"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["workflowdefinitionid",{"_index":188,"title":{},"body":{"classes/StartWorkflowDto.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["workflowdefinitionrepo",{"_index":734,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["workflowdefinition})@apibody({description",{"_index":484,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["workflowdefinition})@apiresponse({status",{"_index":504,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["workflowexecutionservice",{"_index":246,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"modules/WorkflowModule.html":{},"coverage.html":{},"overview.html":{}}}],["workflowinstance",{"_index":53,"title":{"entities/WorkflowInstance.html":{}},"body":{"modules/AppModule.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["workflowinstancerepo",{"_index":252,"title":{},"body":{"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{}}}],["workflowinstance})@apiresponse({status",{"_index":474,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["workflowmodule",{"_index":40,"title":{"modules/WorkflowModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{},"modules.html":{},"overview.html":{}}}],["workflows",{"_index":460,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["workflows/:id",{"_index":1033,"title":{},"body":{"index.html":{}}}],["workflows/:instanceid/cancel",{"_index":1038,"title":{},"body":{"index.html":{}}}],["workflows/:instanceid/pause",{"_index":1036,"title":{},"body":{"index.html":{}}}],["workflows/:instanceid/resume",{"_index":1037,"title":{},"body":{"index.html":{}}}],["workflows/execute",{"_index":1035,"title":{},"body":{"index.html":{}}}],["workflowservice",{"_index":240,"title":{"injectables/WorkflowService.html":{}},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"coverage.html":{},"overview.html":{}}}],["workflowstate",{"_index":224,"title":{"interfaces/WorkflowState.html":{}},"body":{"interfaces/StepState.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"coverage.html":{}}}],["workflowstatus",{"_index":215,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"miscellaneous/enumerations.html":{}}}],["workflowstatus.cancelled",{"_index":449,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["workflowstatus.completed",{"_index":342,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["workflowstatus.failed",{"_index":284,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["workflowstatus.paused",{"_index":446,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["workflowstatus.pending",{"_index":225,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["workflowstatus.running",{"_index":275,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["workflowstep",{"_index":163,"title":{"interfaces/WorkflowStep.html":{}},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"coverage.html":{}}}],["workflowstepdto",{"_index":120,"title":{"classes/WorkflowStepDto.html":{}},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/WorkflowStepDto.html":{},"coverage.html":{}}}],["working",{"_index":924,"title":{},"body":{"index.html":{}}}],["world",{"_index":83,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":954,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":1010,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":968,"title":{},"body":{"index.html":{}}}],["you're",{"_index":888,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nWorkflowModule\n\nWorkflowModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nWorkflowModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WorkflowModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { WorkflowModule } from './workflow/workflow.module';\nimport { WorkflowDefinition } from './workflow/entities/workflow-definition.entity';\nimport { WorkflowInstance } from './workflow/entities/workflow-instance.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: process.env.DB_HOST || 'localhost',\n      port: parseInt(process.env.DB_PORT, 10) || 5432,\n      username: process.env.DB_USERNAME || 'postgres',\n      password: process.env.DB_PASSWORD || 'postgres',\n      database: process.env.DB_NAME || 'workflow_engine',\n      entities: [WorkflowDefinition, WorkflowInstance],\n      synchronize: process.env.NODE_ENV !== 'production', // Don't use synchronize in production\n    }),\n    WorkflowModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateWorkflowDefinitionDto.html":{"url":"classes/CreateWorkflowDefinitionDto.html","title":"class - CreateWorkflowDefinitionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateWorkflowDefinitionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/dto/create-workflow-definition.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                inputSchema\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isActive\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                outputSchema\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                steps\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Description of what the workflow does'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/create-workflow-definition.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        inputSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JSON Schema for workflow input validation', example: undefined})@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/create-workflow-definition.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether the workflow definition is active', default: true})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/create-workflow-definition.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the workflow definition'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/create-workflow-definition.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        outputSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JSON Schema for workflow output validation', example: undefined})@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/create-workflow-definition.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        steps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkflowStepDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Array of workflow steps that define the workflow', type: undefined})@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/create-workflow-definition.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsArray,\n  IsObject,\n  IsOptional,\n  IsBoolean,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { WorkflowStepDto } from './workflow-step.dto';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class CreateWorkflowDefinitionDto {\n  @ApiProperty({ description: 'Name of the workflow definition' })\n  @IsString()\n  name: string;\n\n  @ApiProperty({ description: 'Description of what the workflow does' })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    description: 'Array of workflow steps that define the workflow',\n    type: [WorkflowStepDto],\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => WorkflowStepDto)\n  steps: WorkflowStepDto[];\n\n  @ApiProperty({\n    description: 'JSON Schema for workflow input validation',\n    example: {\n      type: 'object',\n      properties: {\n        email: { type: 'string', format: 'email' },\n      },\n    },\n  })\n  @IsObject()\n  inputSchema: Record;\n\n  @ApiProperty({\n    description: 'JSON Schema for workflow output validation',\n    example: {\n      type: 'object',\n      properties: {\n        success: { type: 'boolean' },\n      },\n    },\n  })\n  @IsObject()\n  outputSchema: Record;\n\n  @ApiPropertyOptional({\n    description: 'Whether the workflow definition is active',\n    default: true,\n  })\n  @IsOptional()\n  @IsBoolean()\n  isActive?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RetryConfig.html":{"url":"interfaces/RetryConfig.html","title":"interface - RetryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RetryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/entities/workflow-definition.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            backoffMultiplier\n                                        \n                                \n                                \n                                        \n                                            initialDelay\n                                        \n                                \n                                \n                                        \n                                            maxAttempts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backoffMultiplier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backoffMultiplier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialDelay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialDelay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAttempts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxAttempts:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity('workflow_definitions')\nexport class WorkflowDefinition {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  description: string;\n\n  @Column('jsonb')\n  steps: WorkflowStep[];\n\n  @Column('jsonb')\n  inputSchema: Record;\n\n  @Column('jsonb')\n  outputSchema: Record;\n\n  @Column({ default: true })\n  isActive: boolean;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\nexport interface WorkflowStep {\n  id: string;\n  name: string;\n  type: StepType;\n  dependencies: string[];\n  config: StepConfig;\n  retryConfig?: RetryConfig;\n  timeout?: number; // in milliseconds\n  condition?: StepCondition;\n}\n\nexport interface StepConfig {\n  handler: string;\n  inputMapping: Record;\n  outputMapping: Record;\n}\n\nexport interface RetryConfig {\n  maxAttempts: number;\n  backoffMultiplier: number;\n  initialDelay: number;\n}\n\nexport interface StepCondition {\n  expression: string;\n  type: 'javascript' | 'jsonpath';\n}\n\nexport enum StepType {\n  TASK = 'TASK',\n  DECISION = 'DECISION',\n  PARALLEL = 'PARALLEL',\n  SUB_WORKFLOW = 'SUB_WORKFLOW',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StartWorkflowDto.html":{"url":"classes/StartWorkflowDto.html","title":"class - StartWorkflowDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StartWorkflowDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/dto/start-workflow.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                input\n                            \n                            \n                                    \n                                    \n                                workflowDefinitionId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        input\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Input data for the workflow', example: undefined})@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/start-workflow.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        workflowDefinitionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID of the workflow definition to execute', example: '123e4567-e89b-12d3-a456-426614174000'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/start-workflow.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsObject } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class StartWorkflowDto {\n  @ApiProperty({\n    description: 'ID of the workflow definition to execute',\n    example: '123e4567-e89b-12d3-a456-426614174000',\n  })\n  @IsString()\n  workflowDefinitionId: string;\n\n  @ApiProperty({\n    description: 'Input data for the workflow',\n    example: {\n      email: 'user@example.com',\n      orderId: '12345',\n      amount: 99.99,\n    },\n  })\n  @IsObject()\n  input: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StepCondition.html":{"url":"interfaces/StepCondition.html","title":"interface - StepCondition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StepCondition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/entities/workflow-definition.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expression\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expression\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expression:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"javascript\" | \"jsonpath\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"javascript\" | \"jsonpath\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity('workflow_definitions')\nexport class WorkflowDefinition {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  description: string;\n\n  @Column('jsonb')\n  steps: WorkflowStep[];\n\n  @Column('jsonb')\n  inputSchema: Record;\n\n  @Column('jsonb')\n  outputSchema: Record;\n\n  @Column({ default: true })\n  isActive: boolean;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\nexport interface WorkflowStep {\n  id: string;\n  name: string;\n  type: StepType;\n  dependencies: string[];\n  config: StepConfig;\n  retryConfig?: RetryConfig;\n  timeout?: number; // in milliseconds\n  condition?: StepCondition;\n}\n\nexport interface StepConfig {\n  handler: string;\n  inputMapping: Record;\n  outputMapping: Record;\n}\n\nexport interface RetryConfig {\n  maxAttempts: number;\n  backoffMultiplier: number;\n  initialDelay: number;\n}\n\nexport interface StepCondition {\n  expression: string;\n  type: 'javascript' | 'jsonpath';\n}\n\nexport enum StepType {\n  TASK = 'TASK',\n  DECISION = 'DECISION',\n  PARALLEL = 'PARALLEL',\n  SUB_WORKFLOW = 'SUB_WORKFLOW',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StepConfig.html":{"url":"interfaces/StepConfig.html","title":"interface - StepConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StepConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/entities/workflow-definition.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            handler\n                                        \n                                \n                                \n                                        \n                                            inputMapping\n                                        \n                                \n                                \n                                        \n                                            outputMapping\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        handler\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handler:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputMapping\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inputMapping:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outputMapping\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outputMapping:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity('workflow_definitions')\nexport class WorkflowDefinition {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  description: string;\n\n  @Column('jsonb')\n  steps: WorkflowStep[];\n\n  @Column('jsonb')\n  inputSchema: Record;\n\n  @Column('jsonb')\n  outputSchema: Record;\n\n  @Column({ default: true })\n  isActive: boolean;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\nexport interface WorkflowStep {\n  id: string;\n  name: string;\n  type: StepType;\n  dependencies: string[];\n  config: StepConfig;\n  retryConfig?: RetryConfig;\n  timeout?: number; // in milliseconds\n  condition?: StepCondition;\n}\n\nexport interface StepConfig {\n  handler: string;\n  inputMapping: Record;\n  outputMapping: Record;\n}\n\nexport interface RetryConfig {\n  maxAttempts: number;\n  backoffMultiplier: number;\n  initialDelay: number;\n}\n\nexport interface StepCondition {\n  expression: string;\n  type: 'javascript' | 'jsonpath';\n}\n\nexport enum StepType {\n  TASK = 'TASK',\n  DECISION = 'DECISION',\n  PARALLEL = 'PARALLEL',\n  SUB_WORKFLOW = 'SUB_WORKFLOW',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StepState.html":{"url":"interfaces/StepState.html","title":"interface - StepState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StepState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/entities/workflow-instance.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attempts\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endTime\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            output\n                                        \n                                \n                                \n                                        \n                                            startTime\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            stepId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attempts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attempts:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StepStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stepId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stepId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { WorkflowDefinition } from './workflow-definition.entity';\n\nexport enum WorkflowStatus {\n  PENDING = 'PENDING',\n  RUNNING = 'RUNNING',\n  COMPLETED = 'COMPLETED',\n  FAILED = 'FAILED',\n  PAUSED = 'PAUSED',\n  CANCELLED = 'CANCELLED',\n}\n\n@Entity('workflow_instances')\nexport class WorkflowInstance {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  workflowDefinitionId: string;\n\n  @ManyToOne(() => WorkflowDefinition)\n  @JoinColumn({ name: 'workflowDefinitionId' })\n  workflowDefinition: WorkflowDefinition;\n\n  @Column('jsonb')\n  input: Record;\n\n  @Column('jsonb')\n  output: Record;\n\n  @Column('jsonb')\n  state: WorkflowState;\n\n  @Column({\n    type: 'enum',\n    enum: WorkflowStatus,\n    default: WorkflowStatus.PENDING,\n  })\n  status: WorkflowStatus;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @Column({ nullable: true })\n  startedAt: Date;\n\n  @Column({ nullable: true })\n  completedAt: Date;\n}\n\nexport interface WorkflowState {\n  currentSteps: StepState[];\n  completedSteps: StepState[];\n  variables: Record;\n}\n\nexport interface StepState {\n  stepId: string;\n  status: StepStatus;\n  startTime: Date;\n  endTime?: Date;\n  attempts: number;\n  error?: string;\n  output?: any;\n}\n\nexport enum StepStatus {\n  PENDING = 'PENDING',\n  RUNNING = 'RUNNING',\n  COMPLETED = 'COMPLETED',\n  FAILED = 'FAILED',\n  SKIPPED = 'SKIPPED',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskResult.html":{"url":"interfaces/TaskResult.html","title":"interface - TaskResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaskResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/workflow-execution.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            output\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { StepType } from './entities/workflow-definition.entity';\nimport {\n  StepStatus,\n  WorkflowInstance,\n  WorkflowStatus,\n} from './entities/workflow-instance.entity';\nimport { WorkflowService } from './workflow.service';\n\nenum TaskType {\n  HTTP = 'http',\n  SCRIPT = 'script',\n  CONDITION = 'condition',\n  DELAY = 'delay',\n}\n\ninterface TaskResult {\n  success: boolean;\n  output: any;\n  error?: string;\n}\n\n@Injectable()\nexport class WorkflowExecutionService {\n  private readonly logger = new Logger(WorkflowExecutionService.name);\n\n  constructor(\n    @InjectRepository(WorkflowInstance)\n    private workflowInstanceRepo: Repository,\n    private workflowService: WorkflowService,\n  ) {}\n\n  async startWorkflow(\n    workflowDefinitionId: string,\n    input: Record,\n  ): Promise {\n    const definition = await this.workflowService.findOne(workflowDefinitionId);\n\n    if (!definition) {\n      throw new Error(`Workflow definition ${workflowDefinitionId} not found`);\n    }\n\n    const instance = this.workflowInstanceRepo.create({\n      workflowDefinitionId,\n      workflowDefinition: definition, // Add this line to associate the definition\n      input,\n      state: {\n        currentSteps: [],\n        completedSteps: [],\n        variables: { ...input },\n      },\n      output: {},\n      status: WorkflowStatus.PENDING,\n    });\n\n    const savedInstance = await this.workflowInstanceRepo.save(instance);\n    await this.executeWorkflow(savedInstance.id);\n    return savedInstance;\n  }\n\n  async executeWorkflow(instanceId: string): Promise {\n    const instance = await this.workflowInstanceRepo.findOne({\n      where: { id: instanceId },\n      relations: ['workflowDefinition'],\n    });\n\n    if (!instance) {\n      throw new Error(`Workflow instance ${instanceId} not found`);\n    }\n\n    instance.status = WorkflowStatus.RUNNING;\n    instance.startedAt = new Date();\n    await this.workflowInstanceRepo.save(instance);\n\n    try {\n      const readySteps = this.findReadySteps(instance);\n      await this.executeSteps(instance, readySteps);\n    } catch (error) {\n      this.logger.error(`Error executing workflow ${instanceId}:`, error);\n      instance.status = WorkflowStatus.FAILED;\n      await this.workflowInstanceRepo.save(instance);\n    }\n  }\n\n  private findReadySteps(instance: WorkflowInstance): string[] {\n    const { steps } = instance.workflowDefinition;\n    const { completedSteps, currentSteps } = instance.state;\n\n    const completedStepIds = new Set(completedSteps.map((s) => s.stepId));\n    const runningStepIds = new Set(currentSteps.map((s) => s.stepId));\n\n    return steps\n      .filter((step) => {\n        // Skip if step is already completed or running\n        if (completedStepIds.has(step.id) || runningStepIds.has(step.id)) {\n          return false;\n        }\n\n        // Check if all dependencies are completed\n        return step.dependencies.every((depId) => completedStepIds.has(depId));\n      })\n      .map((step) => step.id);\n  }\n\n  private async executeSteps(\n    instance: WorkflowInstance,\n    stepIds: string[],\n  ): Promise {\n    const steps = stepIds.map((id) =>\n      instance.workflowDefinition.steps.find((s) => s.id === id),\n    );\n\n    for (const step of steps) {\n      try {\n        // Add step to current steps\n        instance.state.currentSteps.push({\n          stepId: step.id,\n          status: StepStatus.RUNNING,\n          startTime: new Date(),\n          attempts: 0,\n        });\n\n        await this.workflowInstanceRepo.save(instance);\n\n        // Execute step based on type\n        let result: TaskResult;\n        switch (step.type) {\n          case StepType.TASK:\n            result = await this.executeTask(instance, step);\n            break;\n          case StepType.DECISION:\n            result = await this.executeDecision(instance, step);\n            break;\n          case StepType.PARALLEL:\n            result = await this.executeParallel(instance, step);\n            break;\n          default:\n            throw new Error(`Unsupported step type: ${step.type}`);\n        }\n\n        // Update step status to completed\n        const stepState = instance.state.currentSteps.find(\n          (s) => s.stepId === step.id,\n        );\n        stepState.status = StepStatus.COMPLETED;\n        stepState.endTime = new Date();\n        stepState.output = result.output;\n\n        // Move step from current to completed\n        instance.state.completedSteps.push(stepState);\n        instance.state.currentSteps = instance.state.currentSteps.filter(\n          (s) => s.stepId !== step.id,\n        );\n\n        // Update instance state variables with step output\n        instance.state.variables = {\n          ...instance.state.variables,\n          [step.id]: {\n            output: result.output,\n            status: StepStatus.COMPLETED,\n          },\n        };\n\n        await this.workflowInstanceRepo.save(instance);\n\n        // Check if workflow is complete\n        if (this.isWorkflowComplete(instance)) {\n          instance.status = WorkflowStatus.COMPLETED;\n          instance.completedAt = new Date();\n          instance.output = this.generateWorkflowOutput(instance);\n          await this.workflowInstanceRepo.save(instance);\n        } else {\n          // Continue with next ready steps\n          const nextSteps = this.findReadySteps(instance);\n          if (nextSteps.length > 0) {\n            await this.executeSteps(instance, nextSteps);\n          }\n        }\n      } catch (error) {\n        this.logger.error(`Error executing step ${step.id}:`, error);\n\n        const stepState = instance.state.currentSteps.find(\n          (s) => s.stepId === step.id,\n        );\n        stepState.status = StepStatus.FAILED;\n        stepState.error = error.message;\n\n        instance.status = WorkflowStatus.FAILED;\n        await this.workflowInstanceRepo.save(instance);\n        throw error;\n      }\n    }\n  }\n\n  private async executeTask(\n    instance: WorkflowInstance,\n    step: any,\n  ): Promise {\n    try {\n      this.logger.debug(`Executing task: ${step.name}`);\n\n      switch (step.config.type) {\n        case TaskType.HTTP:\n          return await this.executeHttpTask(step.config);\n\n        case TaskType.SCRIPT:\n          return await this.executeScriptTask(\n            step.config,\n            instance.state.variables,\n          );\n\n        case TaskType.CONDITION:\n          return await this.evaluateCondition(\n            step.config,\n            instance.state.variables,\n          );\n\n        case TaskType.DELAY:\n          return await this.executeDelay(step.config);\n\n        default:\n          throw new Error(`Unsupported task type: ${step.config.type}`);\n      }\n    } catch (error) {\n      this.logger.error(`Task execution failed: ${error.message}`);\n      return {\n        success: false,\n        output: null,\n        error: error.message,\n      };\n    }\n  }\n\n  private async executeHttpTask(config: any): Promise {\n    const { url, method, headers, body } = config;\n    try {\n      const response = await fetch(url, {\n        method,\n        headers,\n        body: JSON.stringify(body),\n      });\n\n      const data = await response.json();\n      return {\n        success: response.ok,\n        output: data,\n      };\n    } catch (error) {\n      throw new Error(`HTTP task failed: ${error.message}`);\n    }\n  }\n\n  private async executeScriptTask(\n    config: any,\n    variables: Record,\n  ): Promise {\n    const { script } = config;\n    try {\n      // Create a safe context with variables\n      const context = {\n        ...variables,\n        // Add helper functions if needed\n        JSON: JSON,\n      };\n\n      const result = new Function(\n        'context',\n        `\n        with (context) {\n          ${script}\n        }\n        `,\n      )(context);\n\n      return {\n        success: true,\n        output: result,\n      };\n    } catch (error) {\n      throw new Error(`Script execution failed: ${error.message}`);\n    }\n  }\n\n  private async evaluateCondition(\n    config: any,\n    variables: Record,\n  ): Promise {\n    const { condition } = config;\n    try {\n      const result = new Function(\n        'variables',\n        `\n        with (variables) {\n          return ${condition};\n        }\n      `,\n      )(variables);\n\n      return {\n        success: true,\n        output: !!result,\n      };\n    } catch (error) {\n      throw new Error(`Condition evaluation failed: ${error.message}`);\n    }\n  }\n\n  private async executeDelay(config: any): Promise {\n    const { duration } = config;\n    await new Promise((resolve) => setTimeout(resolve, duration));\n    return {\n      success: true,\n      output: null,\n    };\n  }\n\n  private async executeDecision(\n    instance: WorkflowInstance,\n    step: any,\n  ): Promise {\n    if (step.condition.type === 'javascript') {\n      // Evaluate JavaScript expression\n      const result = new Function(\n        'context',\n        `return ${step.condition.expression}`,\n      )(instance.state.variables);\n      return result;\n    } else if (step.condition.type === 'jsonpath') {\n      // Implement JSONPath evaluation\n      return null;\n    }\n    return null;\n  }\n\n  private async executeParallel(\n    instance: WorkflowInstance,\n    step: any,\n  ): Promise {\n    const { tasks, timeoutMs = 30000, failFast = true } = step.config;\n\n    if (!Array.isArray(tasks) || tasks.length === 0) {\n      throw new Error('Parallel step requires an array of tasks');\n    }\n\n    try {\n      const taskPromises = tasks.map(async (task) => {\n        try {\n          const startTime = Date.now();\n          const timeoutPromise = new Promise((_, reject) => {\n            setTimeout(() => reject(new Error('Task timeout')), timeoutMs);\n          });\n\n          const result = (await Promise.race([\n            this.executeTask(instance, task),\n            timeoutPromise,\n          ])) as TaskResult;\n\n          return {\n            taskId: task.id,\n            duration: Date.now() - startTime,\n            success: result.success,\n            output: result.output,\n            error: result.error,\n          };\n        } catch (error) {\n          if (failFast) {\n            throw error;\n          }\n          return {\n            taskId: task.id,\n            success: false,\n            error: error.message,\n          };\n        }\n      });\n\n      const results = await Promise.all(taskPromises);\n      const success = failFast\n        ? results.every((r) => r.success)\n        : results.some((r) => r.success);\n\n      return {\n        success,\n        output: {\n          results,\n          successCount: results.filter((r) => r.success).length,\n          failureCount: results.filter((r) => !r.success).length,\n        },\n      };\n    } catch (error) {\n      return {\n        success: false,\n        output: null,\n        error: `Parallel execution failed: ${error.message}`,\n      };\n    }\n  }\n\n  private isWorkflowComplete(instance: WorkflowInstance): boolean {\n    const totalSteps = instance.workflowDefinition.steps.length;\n    return instance.state.completedSteps.length === totalSteps;\n  }\n\n  private generateWorkflowOutput(\n    instance: WorkflowInstance,\n  ): Record {\n    // Find the last step that generates output\n    const lastStep = instance.state.completedSteps[instance.state.completedSteps.length - 1];\n    if (lastStep && lastStep.output) {\n      return lastStep.output;\n    }\n    return {};\n  }\n\n  async pauseWorkflow(instanceId: string): Promise {\n    const instance = await this.workflowInstanceRepo.findOne({\n      where: { id: instanceId },\n    });\n\n    if (!instance) {\n      throw new Error(`Workflow instance ${instanceId} not found`);\n    }\n\n    instance.status = WorkflowStatus.PAUSED;\n    return await this.workflowInstanceRepo.save(instance);\n  }\n\n  async resumeWorkflow(instanceId: string): Promise {\n    const instance = await this.workflowInstanceRepo.findOne({\n      where: { id: instanceId },\n    });\n\n    if (!instance) {\n      throw new Error(`Workflow instance ${instanceId} not found`);\n    }\n\n    instance.status = WorkflowStatus.RUNNING;\n    await this.workflowInstanceRepo.save(instance);\n\n    // Continue execution\n    const readySteps = this.findReadySteps(instance);\n    await this.executeSteps(instance, readySteps);\n\n    return instance;\n  }\n\n  async cancelWorkflow(instanceId: string): Promise {\n    const instance = await this.workflowInstanceRepo.findOne({\n      where: { id: instanceId },\n    });\n\n    if (!instance) {\n      throw new Error(`Workflow instance ${instanceId} not found`);\n    }\n\n    instance.status = WorkflowStatus.CANCELLED;\n    return await this.workflowInstanceRepo.save(instance);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateWorkflowDefinitionDto.html":{"url":"classes/UpdateWorkflowDefinitionDto.html","title":"class - UpdateWorkflowDefinitionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateWorkflowDefinitionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/dto/update-workflow-definition.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  CreateWorkflowDefinitionDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateWorkflowDefinitionDto } from './create-workflow-definition.dto';\n\nexport class UpdateWorkflowDefinitionDto extends PartialType(\n  CreateWorkflowDefinitionDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WorkflowController.html":{"url":"controllers/WorkflowController.html","title":"controller - WorkflowController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WorkflowController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/workflow.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                workflows\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                cancelWorkflow\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                executeWorkflow\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getWorkflowInstance\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                pauseWorkflow\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                resumeWorkflow\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                startWorkflow\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        cancelWorkflow\n                        \n                    \n                \n            \n            \n                \n                        \n                    cancelWorkflow(instanceId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':instanceId/cancel')@ApiOperation({summary: 'Cancel a workflow'})@ApiParam({name: 'instanceId', description: 'Workflow instance ID'})@ApiResponse({status: 200, description: 'The workflow has been cancelled', type: WorkflowInstance})@ApiResponse({status: 404, description: 'Workflow instance not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/workflow/workflow.controller.ts:495\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                instanceId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createWorkflowDto: CreateWorkflowDefinitionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new workflow definition'})@ApiResponse({status: 201, description: 'The workflow definition has been created successfully.', type: WorkflowDefinition})@ApiBody({description: 'Workflow definition creation payload', examples: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/workflow/workflow.controller.ts:274\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createWorkflowDto\n                                            \n                                                            CreateWorkflowDefinitionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        executeWorkflow\n                        \n                    \n                \n            \n            \n                \n                        \n                    executeWorkflow(id: string, startWorkflowDto: StartWorkflowDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/execute')@ApiOperation({summary: 'Execute a workflow'})@ApiResponse({status: 201, description: 'The workflow has been started successfully.', type: WorkflowInstance})\n                \n            \n\n                    \n                        \n                            Defined in src/workflow/workflow.controller.ts:381\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                startWorkflowDto\n                                            \n                                                            StartWorkflowDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all workflow definitions'})@ApiResponse({status: 200, description: 'List of all workflow definitions', type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/workflow/workflow.controller.ts:285\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get a workflow definition by id'})@ApiParam({name: 'id', description: 'Workflow definition ID'})@ApiResponse({status: 200, description: 'The workflow definition has been found', type: WorkflowDefinition})@ApiResponse({status: 404, description: 'Workflow definition not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/workflow/workflow.controller.ts:301\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getWorkflowInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWorkflowInstance(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('instances/:id')@ApiOperation({summary: 'Get workflow instance status'})@ApiResponse({status: 200, description: 'Returns the workflow instance details', type: WorkflowInstance})\n                \n            \n\n                    \n                        \n                            Defined in src/workflow/workflow.controller.ts:395\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        pauseWorkflow\n                        \n                    \n                \n            \n            \n                \n                        \n                    pauseWorkflow(instanceId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':instanceId/pause')@ApiOperation({summary: 'Pause a running workflow'})@ApiParam({name: 'instanceId', description: 'Workflow instance ID'})@ApiResponse({status: 200, description: 'The workflow has been paused', type: WorkflowInstance})@ApiResponse({status: 404, description: 'Workflow instance not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/workflow/workflow.controller.ts:463\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                instanceId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Delete a workflow definition'})@ApiParam({name: 'id', description: 'Workflow definition ID'})@ApiResponse({status: 204, description: 'The workflow definition has been deleted'})@ApiResponse({status: 404, description: 'Workflow definition not found'})@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/workflow/workflow.controller.ts:370\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        resumeWorkflow\n                        \n                    \n                \n            \n            \n                \n                        \n                    resumeWorkflow(instanceId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':instanceId/resume')@ApiOperation({summary: 'Resume a paused workflow'})@ApiParam({name: 'instanceId', description: 'Workflow instance ID'})@ApiResponse({status: 200, description: 'The workflow has been resumed', type: WorkflowInstance})@ApiResponse({status: 404, description: 'Workflow instance not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/workflow/workflow.controller.ts:479\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                instanceId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        startWorkflow\n                        \n                    \n                \n            \n            \n                \n                        \n                    startWorkflow(startWorkflowDto: StartWorkflowDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('execute')@ApiOperation({summary: 'Start a new workflow execution'})@ApiResponse({status: 201, description: 'The workflow execution has started', type: WorkflowInstance})@ApiResponse({status: 404, description: 'Workflow definition not found'})@ApiBody({description: 'Start workflow execution payload', examples: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/workflow/workflow.controller.ts:444\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                startWorkflowDto\n                                            \n                                                            StartWorkflowDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateWorkflowDto: UpdateWorkflowDefinitionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Update a workflow definition'})@ApiParam({name: 'id', description: 'Workflow definition ID'})@ApiResponse({status: 200, description: 'The workflow definition has been updated', type: WorkflowDefinition})@ApiResponse({status: 404, description: 'Workflow definition not found'})@ApiBody({description: 'Workflow definition update payload', examples: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/workflow/workflow.controller.ts:351\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateWorkflowDto\n                                            \n                                                            UpdateWorkflowDefinitionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  NotFoundException,\n  Param,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport {\n  ApiBody,\n  ApiOperation,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { CreateWorkflowDefinitionDto } from './dto/create-workflow-definition.dto';\nimport { StartWorkflowDto } from './dto/start-workflow.dto';\nimport { UpdateWorkflowDefinitionDto } from './dto/update-workflow-definition.dto';\nimport { WorkflowDefinition } from './entities/workflow-definition.entity';\nimport { WorkflowInstance } from './entities/workflow-instance.entity';\nimport { WorkflowExecutionService } from './workflow-execution.service';\nimport { WorkflowService } from './workflow.service';\n\n@ApiTags('workflows')\n@Controller('workflows')\nexport class WorkflowController {\n  constructor(\n    private readonly workflowService: WorkflowService,\n    private readonly workflowExecutionService: WorkflowExecutionService,\n  ) { }\n\n  @Post()\n  @ApiOperation({ summary: 'Create a new workflow definition' })\n  @ApiResponse({\n    status: 201,\n    description: 'The workflow definition has been created successfully.',\n    type: WorkflowDefinition,\n  })\n  @ApiBody({\n    description: 'Workflow definition creation payload',\n    examples: {\n      emailWorkflow: {\n        summary: 'Email Notification Workflow',\n        value: {\n          name: 'Email Notification Workflow',\n          description: 'Sends email notifications with optional retry logic',\n          steps: [\n            {\n              id: 'send-email',\n              name: 'Send Email Notification',\n              type: 'TASK',\n              dependencies: [],\n              config: {\n                handler: 'emailHandler',\n                inputMapping: {\n                  to: '$.input.email',\n                  subject: '$.input.subject',\n                  body: '$.input.body',\n                },\n                outputMapping: {\n                  sent: '$.output.success',\n                  messageId: '$.output.messageId',\n                },\n              },\n              retryConfig: {\n                maxAttempts: 3,\n                backoffMultiplier: 2,\n                initialDelay: 1000,\n              },\n            },\n          ],\n          inputSchema: {\n            type: 'object',\n            properties: {\n              email: { type: 'string', format: 'email' },\n              subject: { type: 'string' },\n              body: { type: 'string' },\n            },\n            required: ['email', 'subject', 'body'],\n          },\n          outputSchema: {\n            type: 'object',\n            properties: {\n              sent: { type: 'boolean' },\n              messageId: { type: 'string' },\n            },\n          },\n        },\n      },\n      orderProcessing: {\n        summary: 'Order Processing Workflow',\n        value: {\n          name: 'Order Processing Workflow',\n          description: 'Processes an order with payment and shipping steps',\n          steps: [\n            {\n              id: 'validate-order',\n              name: 'Validate Order',\n              type: 'TASK',\n              dependencies: [],\n              config: {\n                handler: 'orderValidator',\n                inputMapping: {\n                  orderId: '$.input.orderId',\n                  items: '$.input.items',\n                },\n                outputMapping: {\n                  valid: '$.output.isValid',\n                  total: '$.output.total',\n                },\n              },\n            },\n            {\n              id: 'process-payment',\n              name: 'Process Payment',\n              type: 'TASK',\n              dependencies: ['validate-order'],\n              config: {\n                handler: 'paymentProcessor',\n                inputMapping: {\n                  amount: '$.steps.validate-order.output.total',\n                  paymentMethod: '$.input.paymentMethod',\n                },\n                outputMapping: {\n                  success: '$.output.success',\n                  transactionId: '$.output.transactionId',\n                },\n              },\n            },\n          ],\n          inputSchema: {\n            type: 'object',\n            properties: {\n              orderId: { type: 'string' },\n              items: {\n                type: 'array',\n                items: {\n                  type: 'object',\n                  properties: {\n                    id: { type: 'string' },\n                    quantity: { type: 'number' },\n                  },\n                },\n              },\n              paymentMethod: { type: 'string' },\n            },\n          },\n          outputSchema: {\n            type: 'object',\n            properties: {\n              success: { type: 'boolean' },\n              transactionId: { type: 'string' },\n            },\n          },\n        },\n      },\n      loanProcessing: {\n        summary: 'Loan Processing Workflow',\n        value: {\n          name: 'Loan Processing Workflow',\n          description:\n            'Processes loan applications with credit check and risk assessment',\n          steps: [\n            {\n              id: 'validate-application',\n              name: 'Validate Loan Application',\n              type: 'TASK',\n              dependencies: [],\n              config: {\n                handler: 'loanValidator',\n                inputMapping: {\n                  applicantName: '$.input.applicantName',\n                  income: '$.input.income',\n                  loanAmount: '$.input.loanAmount',\n                  loanTerm: '$.input.loanTerm',\n                },\n                outputMapping: {\n                  isValid: '$.output.isValid',\n                  validationErrors: '$.output.errors',\n                },\n              },\n            },\n            {\n              id: 'check-credit',\n              name: 'Credit Score Check',\n              type: 'TASK',\n              dependencies: ['validate-application'],\n              config: {\n                handler: 'creditChecker',\n                inputMapping: {\n                  applicantName: '$.input.applicantName',\n                  ssn: '$.input.ssn',\n                },\n                outputMapping: {\n                  creditScore: '$.output.score',\n                  creditReport: '$.output.report',\n                },\n              },\n            },\n            {\n              id: 'assess-risk',\n              name: 'Risk Assessment',\n              type: 'TASK',\n              dependencies: ['check-credit'],\n              config: {\n                handler: 'riskAssessor',\n                inputMapping: {\n                  creditScore: '$.steps.check-credit.output.creditScore',\n                  income: '$.input.income',\n                  loanAmount: '$.input.loanAmount',\n                  loanTerm: '$.input.loanTerm',\n                },\n                outputMapping: {\n                  riskLevel: '$.output.riskLevel',\n                  recommendedRate: '$.output.recommendedRate',\n                },\n              },\n            },\n            {\n              id: 'make-decision',\n              name: 'Loan Decision',\n              type: 'TASK',\n              dependencies: ['assess-risk'],\n              config: {\n                handler: 'loanDecision',\n                inputMapping: {\n                  riskLevel: '$.steps.assess-risk.output.riskLevel',\n                  recommendedRate: '$.steps.assess-risk.output.recommendedRate',\n                  creditScore: '$.steps.check-credit.output.creditScore',\n                },\n                outputMapping: {\n                  approved: '$.output.approved',\n                  loanId: '$.output.loanId',\n                  interestRate: '$.output.interestRate',\n                  reason: '$.output.reason',\n                },\n              },\n            },\n          ],\n          inputSchema: {\n            type: 'object',\n            properties: {\n              applicantName: { type: 'string' },\n              ssn: { type: 'string' },\n              income: { type: 'number' },\n              loanAmount: { type: 'number' },\n              loanTerm: { type: 'number' },\n            },\n            required: [\n              'applicantName',\n              'ssn',\n              'income',\n              'loanAmount',\n              'loanTerm',\n            ],\n          },\n          outputSchema: {\n            type: 'object',\n            properties: {\n              approved: { type: 'boolean' },\n              loanId: { type: 'string' },\n              interestRate: { type: 'number' },\n              reason: { type: 'string' },\n            },\n          },\n        },\n      },\n    },\n  })\n  create(@Body() createWorkflowDto: CreateWorkflowDefinitionDto) {\n    return this.workflowService.create(createWorkflowDto);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Get all workflow definitions' })\n  @ApiResponse({\n    status: 200,\n    description: 'List of all workflow definitions',\n    type: [WorkflowDefinition],\n  })\n  findAll() {\n    return this.workflowService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Get a workflow definition by id' })\n  @ApiParam({ name: 'id', description: 'Workflow definition ID' })\n  @ApiResponse({\n    status: 200,\n    description: 'The workflow definition has been found',\n    type: WorkflowDefinition,\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Workflow definition not found',\n  })\n  findOne(@Param('id') id: string) {\n    return this.workflowService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Update a workflow definition' })\n  @ApiParam({ name: 'id', description: 'Workflow definition ID' })\n  @ApiResponse({\n    status: 200,\n    description: 'The workflow definition has been updated',\n    type: WorkflowDefinition,\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Workflow definition not found',\n  })\n  @ApiBody({\n    description: 'Workflow definition update payload',\n    examples: {\n      updateSteps: {\n        summary: 'Update workflow steps',\n        value: {\n          steps: [\n            {\n              id: 'send-email',\n              name: 'Send Email Notification',\n              type: 'TASK',\n              dependencies: [],\n              config: {\n                handler: 'newEmailHandler',\n                inputMapping: {\n                  to: '$.input.email',\n                  template: '$.input.templateId',\n                },\n                outputMapping: {\n                  sent: '$.output.success',\n                },\n              },\n            },\n          ],\n        },\n      },\n      updateDescription: {\n        summary: 'Update workflow description',\n        value: {\n          description: 'Updated workflow description with new functionality',\n        },\n      },\n    },\n  })\n  update(\n    @Param('id') id: string,\n    @Body() updateWorkflowDto: UpdateWorkflowDefinitionDto,\n  ) {\n    return this.workflowService.update(id, updateWorkflowDto);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Delete a workflow definition' })\n  @ApiParam({ name: 'id', description: 'Workflow definition ID' })\n  @ApiResponse({\n    status: 204,\n    description: 'The workflow definition has been deleted',\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Workflow definition not found',\n  })\n  @HttpCode(HttpStatus.NO_CONTENT)\n  remove(@Param('id') id: string) {\n    return this.workflowService.remove(id);\n  }\n\n  @Post(':id/execute')\n  @ApiOperation({ summary: 'Execute a workflow' })\n  @ApiResponse({\n    status: 201,\n    description: 'The workflow has been started successfully.',\n    type: WorkflowInstance,\n  })\n  async executeWorkflow(\n    @Param('id') id: string,\n    @Body() startWorkflowDto: StartWorkflowDto,\n  ): Promise {\n    return this.workflowExecutionService.startWorkflow(id, startWorkflowDto.input);\n  }\n\n  @Get('instances/:id')\n  @ApiOperation({ summary: 'Get workflow instance status' })\n  @ApiResponse({\n    status: 200,\n    description: 'Returns the workflow instance details',\n    type: WorkflowInstance,\n  })\n  async getWorkflowInstance(@Param('id') id: string): Promise {\n    const instance = await this.workflowService.findInstanceById(id);\n    if (!instance) {\n      throw new NotFoundException(`Workflow instance ${id} not found`);\n    }\n    return instance;\n  }\n\n  @Post('execute')\n  @ApiOperation({ summary: 'Start a new workflow execution' })\n  @ApiResponse({\n    status: 201,\n    description: 'The workflow execution has started',\n    type: WorkflowInstance,\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Workflow definition not found',\n  })\n  @ApiBody({\n    description: 'Start workflow execution payload',\n    examples: {\n      emailWorkflow: {\n        summary: 'Start email notification workflow',\n        value: {\n          workflowDefinitionId: '123e4567-e89b-12d3-a456-426614174000',\n          input: {\n            email: 'user@example.com',\n            subject: 'Welcome to our platform',\n            body: 'Thank you for joining us!',\n          },\n        },\n      },\n      orderWorkflow: {\n        summary: 'Start order processing workflow',\n        value: {\n          workflowDefinitionId: '123e4567-e89b-12d3-a456-426614174001',\n          input: {\n            orderId: 'ORD-12345',\n            items: [\n              { id: 'ITEM-1', quantity: 2 },\n              { id: 'ITEM-2', quantity: 1 },\n            ],\n            paymentMethod: 'credit_card',\n          },\n        },\n      },\n    },\n  })\n  startWorkflow(@Body() startWorkflowDto: StartWorkflowDto) {\n    return this.workflowExecutionService.startWorkflow(\n      startWorkflowDto.workflowDefinitionId,\n      startWorkflowDto.input,\n    );\n  }\n\n  @Post(':instanceId/pause')\n  @ApiOperation({ summary: 'Pause a running workflow' })\n  @ApiParam({ name: 'instanceId', description: 'Workflow instance ID' })\n  @ApiResponse({\n    status: 200,\n    description: 'The workflow has been paused',\n    type: WorkflowInstance,\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Workflow instance not found',\n  })\n  pauseWorkflow(@Param('instanceId') instanceId: string) {\n    return this.workflowExecutionService.pauseWorkflow(instanceId);\n  }\n\n  @Post(':instanceId/resume')\n  @ApiOperation({ summary: 'Resume a paused workflow' })\n  @ApiParam({ name: 'instanceId', description: 'Workflow instance ID' })\n  @ApiResponse({\n    status: 200,\n    description: 'The workflow has been resumed',\n    type: WorkflowInstance,\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Workflow instance not found',\n  })\n  resumeWorkflow(@Param('instanceId') instanceId: string) {\n    return this.workflowExecutionService.resumeWorkflow(instanceId);\n  }\n\n  @Post(':instanceId/cancel')\n  @ApiOperation({ summary: 'Cancel a workflow' })\n  @ApiParam({ name: 'instanceId', description: 'Workflow instance ID' })\n  @ApiResponse({\n    status: 200,\n    description: 'The workflow has been cancelled',\n    type: WorkflowInstance,\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Workflow instance not found',\n  })\n  cancelWorkflow(@Param('instanceId') instanceId: string) {\n    return this.workflowExecutionService.cancelWorkflow(instanceId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/WorkflowDefinition.html":{"url":"entities/WorkflowDefinition.html","title":"entity - WorkflowDefinition","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  WorkflowDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/entities/workflow-definition.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                inputSchema\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                outputSchema\n                            \n                            \n                                    \n                                steps\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-definition.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-definition.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-definition.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        inputSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('jsonb')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-definition.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-definition.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-definition.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        outputSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('jsonb')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-definition.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        steps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkflowStep[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('jsonb')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-definition.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-definition.entity.ts:36\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity('workflow_definitions')\nexport class WorkflowDefinition {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  description: string;\n\n  @Column('jsonb')\n  steps: WorkflowStep[];\n\n  @Column('jsonb')\n  inputSchema: Record;\n\n  @Column('jsonb')\n  outputSchema: Record;\n\n  @Column({ default: true })\n  isActive: boolean;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\nexport interface WorkflowStep {\n  id: string;\n  name: string;\n  type: StepType;\n  dependencies: string[];\n  config: StepConfig;\n  retryConfig?: RetryConfig;\n  timeout?: number; // in milliseconds\n  condition?: StepCondition;\n}\n\nexport interface StepConfig {\n  handler: string;\n  inputMapping: Record;\n  outputMapping: Record;\n}\n\nexport interface RetryConfig {\n  maxAttempts: number;\n  backoffMultiplier: number;\n  initialDelay: number;\n}\n\nexport interface StepCondition {\n  expression: string;\n  type: 'javascript' | 'jsonpath';\n}\n\nexport enum StepType {\n  TASK = 'TASK',\n  DECISION = 'DECISION',\n  PARALLEL = 'PARALLEL',\n  SUB_WORKFLOW = 'SUB_WORKFLOW',\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/WorkflowInstance.html":{"url":"entities/WorkflowInstance.html","title":"entity - WorkflowInstance","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  WorkflowInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/entities/workflow-instance.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                completedAt\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                input\n                            \n                            \n                                    \n                                output\n                            \n                            \n                                    \n                                startedAt\n                            \n                            \n                                    \n                                state\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                workflowDefinition\n                            \n                            \n                                    \n                                workflowDefinitionId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        completedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-instance.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-instance.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-instance.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        input\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('jsonb')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-instance.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        output\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('jsonb')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-instance.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-instance.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkflowState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('jsonb')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-instance.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkflowStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: WorkflowStatus, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-instance.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-instance.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        workflowDefinition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkflowDefinition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'workflowDefinitionId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-instance.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        workflowDefinitionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-instance.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { WorkflowDefinition } from './workflow-definition.entity';\n\nexport enum WorkflowStatus {\n  PENDING = 'PENDING',\n  RUNNING = 'RUNNING',\n  COMPLETED = 'COMPLETED',\n  FAILED = 'FAILED',\n  PAUSED = 'PAUSED',\n  CANCELLED = 'CANCELLED',\n}\n\n@Entity('workflow_instances')\nexport class WorkflowInstance {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  workflowDefinitionId: string;\n\n  @ManyToOne(() => WorkflowDefinition)\n  @JoinColumn({ name: 'workflowDefinitionId' })\n  workflowDefinition: WorkflowDefinition;\n\n  @Column('jsonb')\n  input: Record;\n\n  @Column('jsonb')\n  output: Record;\n\n  @Column('jsonb')\n  state: WorkflowState;\n\n  @Column({\n    type: 'enum',\n    enum: WorkflowStatus,\n    default: WorkflowStatus.PENDING,\n  })\n  status: WorkflowStatus;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @Column({ nullable: true })\n  startedAt: Date;\n\n  @Column({ nullable: true })\n  completedAt: Date;\n}\n\nexport interface WorkflowState {\n  currentSteps: StepState[];\n  completedSteps: StepState[];\n  variables: Record;\n}\n\nexport interface StepState {\n  stepId: string;\n  status: StepStatus;\n  startTime: Date;\n  endTime?: Date;\n  attempts: number;\n  error?: string;\n  output?: any;\n}\n\nexport enum StepStatus {\n  PENDING = 'PENDING',\n  RUNNING = 'RUNNING',\n  COMPLETED = 'COMPLETED',\n  FAILED = 'FAILED',\n  SKIPPED = 'SKIPPED',\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WorkflowModule.html":{"url":"modules/WorkflowModule.html","title":"module - WorkflowModule","body":"\n                   \n\n\n\n\n    Modules\n    WorkflowModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WorkflowModule\n\n\n\ncluster_WorkflowModule_exports\n\n\n\ncluster_WorkflowModule_providers\n\n\n\n\nWorkflowExecutionService \n\nWorkflowExecutionService \n\n\n\nWorkflowService \n\nWorkflowService \n\n\n\nWorkflowModule\n\nWorkflowModule\n\nWorkflowExecutionService  -->\n\nWorkflowModule->WorkflowExecutionService \n\n\n\nWorkflowService  -->\n\nWorkflowModule->WorkflowService \n\n\n\n\n\nWorkflowExecutionService\n\nWorkflowExecutionService\n\nWorkflowModule -->\n\nWorkflowExecutionService->WorkflowModule\n\n\n\n\n\nWorkflowService\n\nWorkflowService\n\nWorkflowModule -->\n\nWorkflowService->WorkflowModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/workflow/workflow.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            WorkflowExecutionService\n                        \n                        \n                            WorkflowService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            WorkflowController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            WorkflowExecutionService\n                        \n                        \n                            WorkflowService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { WorkflowDefinition } from './entities/workflow-definition.entity';\nimport { WorkflowInstance } from './entities/workflow-instance.entity';\nimport { WorkflowService } from './workflow.service';\nimport { WorkflowController } from './workflow.controller';\nimport { WorkflowExecutionService } from './workflow-execution.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([WorkflowDefinition, WorkflowInstance])],\n  providers: [WorkflowService, WorkflowExecutionService],\n  controllers: [WorkflowController],\n  exports: [WorkflowService, WorkflowExecutionService],\n})\nexport class WorkflowModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkflowService.html":{"url":"injectables/WorkflowService.html","title":"injectable - WorkflowService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WorkflowService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/workflow.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkCircularDependencies\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findInstanceById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                validateWorkflowDefinition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(workflowDefinitionRepo: Repository, workflowInstanceRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/workflow/workflow.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        workflowDefinitionRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        workflowInstanceRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkCircularDependencies\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkCircularDependencies(steps: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/workflow/workflow.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                steps\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateWorkflowDefinitionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/workflow/workflow.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                            CreateWorkflowDefinitionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/workflow/workflow.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findInstanceById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findInstanceById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/workflow/workflow.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/workflow/workflow.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/workflow/workflow.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateWorkflowDefinitionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/workflow/workflow.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                            UpdateWorkflowDefinitionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateWorkflowDefinition\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateWorkflowDefinition(workflow: WorkflowDefinition)\n                \n            \n\n\n                    \n                        \n                            Defined in src/workflow/workflow.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                workflow\n                                            \n                                                            WorkflowDefinition\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { WorkflowDefinition } from './entities/workflow-definition.entity';\nimport { WorkflowInstance } from './entities/workflow-instance.entity';\nimport { CreateWorkflowDefinitionDto } from './dto/create-workflow-definition.dto';\nimport { UpdateWorkflowDefinitionDto } from './dto/update-workflow-definition.dto';\n\n@Injectable()\nexport class WorkflowService {\n  constructor(\n    @InjectRepository(WorkflowDefinition)\n    private workflowDefinitionRepo: Repository,\n    @InjectRepository(WorkflowInstance)\n    private workflowInstanceRepo: Repository,\n  ) {}\n\n  async create(\n    createDto: CreateWorkflowDefinitionDto,\n  ): Promise {\n    const workflow = this.workflowDefinitionRepo.create(createDto);\n    return await this.workflowDefinitionRepo.save(workflow);\n  }\n\n  async findAll(): Promise {\n    return await this.workflowDefinitionRepo.find();\n  }\n\n  async findOne(id: string): Promise {\n    return this.workflowDefinitionRepo.findOneBy({ id });\n  }\n\n  async update(\n    id: string,\n    updateDto: UpdateWorkflowDefinitionDto,\n  ): Promise {\n    const workflow = await this.findOne(id);\n    Object.assign(workflow, updateDto);\n    return await this.workflowDefinitionRepo.save(workflow);\n  }\n\n  async remove(id: string): Promise {\n    const workflow = await this.findOne(id);\n    await this.workflowDefinitionRepo.remove(workflow);\n  }\n\n  async findInstanceById(id: string): Promise {\n    return this.workflowInstanceRepo.findOne({\n      where: { id },\n      relations: ['workflowDefinition'],\n    });\n  }\n\n  async validateWorkflowDefinition(\n    workflow: WorkflowDefinition,\n  ): Promise {\n    // Validate steps have unique IDs\n    const stepIds = new Set();\n    for (const step of workflow.steps) {\n      if (stepIds.has(step.id)) {\n        throw new Error(`Duplicate step ID: ${step.id}`);\n      }\n      stepIds.add(step.id);\n    }\n\n    // Validate dependencies exist\n    for (const step of workflow.steps) {\n      for (const depId of step.dependencies) {\n        if (!stepIds.has(depId)) {\n          throw new Error(`Step ${step.id} has invalid dependency: ${depId}`);\n        }\n      }\n    }\n\n    // Check for circular dependencies\n    this.checkCircularDependencies(workflow.steps);\n\n    return true;\n  }\n\n  private checkCircularDependencies(steps: any[]): void {\n    const visited = new Set();\n    const recursionStack = new Set();\n\n    const dfs = (stepId: string) => {\n      if (recursionStack.has(stepId)) {\n        throw new Error(\n          `Circular dependency detected involving step: ${stepId}`,\n        );\n      }\n      if (visited.has(stepId)) return;\n\n      visited.add(stepId);\n      recursionStack.add(stepId);\n\n      const step = steps.find((s) => s.id === stepId);\n      for (const depId of step.dependencies) {\n        dfs(depId);\n      }\n\n      recursionStack.delete(stepId);\n    };\n\n    for (const step of steps) {\n      if (!visited.has(step.id)) {\n        dfs(step.id);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkflowState.html":{"url":"interfaces/WorkflowState.html","title":"interface - WorkflowState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkflowState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/entities/workflow-instance.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completedSteps\n                                        \n                                \n                                \n                                        \n                                            currentSteps\n                                        \n                                \n                                \n                                        \n                                            variables\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completedSteps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completedSteps:         StepState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentSteps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentSteps:         StepState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variables\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        variables:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { WorkflowDefinition } from './workflow-definition.entity';\n\nexport enum WorkflowStatus {\n  PENDING = 'PENDING',\n  RUNNING = 'RUNNING',\n  COMPLETED = 'COMPLETED',\n  FAILED = 'FAILED',\n  PAUSED = 'PAUSED',\n  CANCELLED = 'CANCELLED',\n}\n\n@Entity('workflow_instances')\nexport class WorkflowInstance {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  workflowDefinitionId: string;\n\n  @ManyToOne(() => WorkflowDefinition)\n  @JoinColumn({ name: 'workflowDefinitionId' })\n  workflowDefinition: WorkflowDefinition;\n\n  @Column('jsonb')\n  input: Record;\n\n  @Column('jsonb')\n  output: Record;\n\n  @Column('jsonb')\n  state: WorkflowState;\n\n  @Column({\n    type: 'enum',\n    enum: WorkflowStatus,\n    default: WorkflowStatus.PENDING,\n  })\n  status: WorkflowStatus;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @Column({ nullable: true })\n  startedAt: Date;\n\n  @Column({ nullable: true })\n  completedAt: Date;\n}\n\nexport interface WorkflowState {\n  currentSteps: StepState[];\n  completedSteps: StepState[];\n  variables: Record;\n}\n\nexport interface StepState {\n  stepId: string;\n  status: StepStatus;\n  startTime: Date;\n  endTime?: Date;\n  attempts: number;\n  error?: string;\n  output?: any;\n}\n\nexport enum StepStatus {\n  PENDING = 'PENDING',\n  RUNNING = 'RUNNING',\n  COMPLETED = 'COMPLETED',\n  FAILED = 'FAILED',\n  SKIPPED = 'SKIPPED',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkflowStep.html":{"url":"interfaces/WorkflowStep.html","title":"interface - WorkflowStep","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkflowStep\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/entities/workflow-definition.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            condition\n                                        \n                                \n                                \n                                        \n                                            config\n                                        \n                                \n                                \n                                        \n                                            dependencies\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            retryConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timeout\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condition:         StepCondition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepCondition\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:         StepConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dependencies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dependencies:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        retryConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        retryConfig:         RetryConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RetryConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         StepType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity('workflow_definitions')\nexport class WorkflowDefinition {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  description: string;\n\n  @Column('jsonb')\n  steps: WorkflowStep[];\n\n  @Column('jsonb')\n  inputSchema: Record;\n\n  @Column('jsonb')\n  outputSchema: Record;\n\n  @Column({ default: true })\n  isActive: boolean;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\nexport interface WorkflowStep {\n  id: string;\n  name: string;\n  type: StepType;\n  dependencies: string[];\n  config: StepConfig;\n  retryConfig?: RetryConfig;\n  timeout?: number; // in milliseconds\n  condition?: StepCondition;\n}\n\nexport interface StepConfig {\n  handler: string;\n  inputMapping: Record;\n  outputMapping: Record;\n}\n\nexport interface RetryConfig {\n  maxAttempts: number;\n  backoffMultiplier: number;\n  initialDelay: number;\n}\n\nexport interface StepCondition {\n  expression: string;\n  type: 'javascript' | 'jsonpath';\n}\n\nexport enum StepType {\n  TASK = 'TASK',\n  DECISION = 'DECISION',\n  PARALLEL = 'PARALLEL',\n  SUB_WORKFLOW = 'SUB_WORKFLOW',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkflowStepDto.html":{"url":"classes/WorkflowStepDto.html","title":"class - WorkflowStepDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkflowStepDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/dto/workflow-step.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                condition\n                            \n                            \n                                    \n                                    \n                                config\n                            \n                            \n                                    \n                                    \n                                    \n                                dependencies\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                retryConfig\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                timeout\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        condition\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Condition for step execution', example: undefined})@IsOptional()@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/workflow-step.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Configuration for the step execution', example: undefined})@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/workflow-step.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        dependencies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of step IDs that this step depends on'})@IsArray()@IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/workflow-step.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Unique identifier for the workflow step'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/workflow-step.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the workflow step'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/workflow-step.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        retryConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Retry configuration for failed steps', example: undefined})@IsOptional()@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/workflow-step.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        timeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Timeout in milliseconds for the step execution'})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/workflow-step.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StepType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: StepType, description: 'Type of the workflow step'})@IsEnum(StepType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/workflow-step.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsEnum,\n  IsArray,\n  IsObject,\n  IsOptional,\n  IsNumber,\n} from 'class-validator';\nimport { StepType } from '../entities/workflow-definition.entity';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class WorkflowStepDto {\n  @ApiProperty({ description: 'Unique identifier for the workflow step' })\n  @IsString()\n  id: string;\n\n  @ApiProperty({ description: 'Name of the workflow step' })\n  @IsString()\n  name: string;\n\n  @ApiProperty({ enum: StepType, description: 'Type of the workflow step' })\n  @IsEnum(StepType)\n  type: StepType;\n\n  @ApiProperty({ description: 'List of step IDs that this step depends on' })\n  @IsArray()\n  @IsString({ each: true })\n  dependencies: string[];\n\n  @ApiProperty({\n    description: 'Configuration for the step execution',\n    example: {\n      handler: 'sendEmail',\n      inputMapping: { email: '$.input.email' },\n      outputMapping: { result: '$.output.sent' },\n    },\n  })\n  @IsObject()\n  config: {\n    handler: string;\n    inputMapping: Record;\n    outputMapping: Record;\n  };\n\n  @ApiPropertyOptional({\n    description: 'Retry configuration for failed steps',\n    example: {\n      maxAttempts: 3,\n      backoffMultiplier: 1.5,\n      initialDelay: 1000,\n    },\n  })\n  @IsOptional()\n  @IsObject()\n  retryConfig?: {\n    maxAttempts: number;\n    backoffMultiplier: number;\n    initialDelay: number;\n  };\n\n  @ApiPropertyOptional({\n    description: 'Timeout in milliseconds for the step execution',\n  })\n  @IsOptional()\n  @IsNumber()\n  timeout?: number;\n\n  @ApiPropertyOptional({\n    description: 'Condition for step execution',\n    example: {\n      expression: '$.input.amount > 1000',\n      type: 'javascript',\n    },\n  })\n  @IsOptional()\n  @IsObject()\n  condition?: {\n    expression: string;\n    type: 'javascript' | 'jsonpath';\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workflow/dto/create-workflow-definition.dto.ts\n            \n            class\n            CreateWorkflowDefinitionDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/workflow/dto/start-workflow.dto.ts\n            \n            class\n            StartWorkflowDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/workflow/dto/update-workflow-definition.dto.ts\n            \n            class\n            UpdateWorkflowDefinitionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workflow/dto/workflow-step.dto.ts\n            \n            class\n            WorkflowStepDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/workflow/entities/workflow-definition.entity.ts\n            \n            entity\n            WorkflowDefinition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workflow/entities/workflow-definition.entity.ts\n            \n            interface\n            RetryConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/workflow/entities/workflow-definition.entity.ts\n            \n            interface\n            StepCondition\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/workflow/entities/workflow-definition.entity.ts\n            \n            interface\n            StepConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/workflow/entities/workflow-definition.entity.ts\n            \n            interface\n            WorkflowStep\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/workflow/entities/workflow-instance.entity.ts\n            \n            entity\n            WorkflowInstance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workflow/entities/workflow-instance.entity.ts\n            \n            interface\n            StepState\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/workflow/entities/workflow-instance.entity.ts\n            \n            interface\n            WorkflowState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/workflow/workflow-execution.service.ts\n            \n            injectable\n            WorkflowExecutionService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/workflow/workflow-execution.service.ts\n            \n            interface\n            TaskResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/workflow/workflow.controller.ts\n            \n            controller\n            WorkflowController\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/workflow/workflow.service.ts\n            \n            injectable\n            WorkflowService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        test/test-database.module.ts\n            \n            variable\n            TestDatabaseModule\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : ^2.0.4\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.4.2\n        \n            @nestjs/typeorm : ^10.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            pg : ^8.11.3\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.1\n        \n            typeorm : ^0.3.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StepStatus   (src/.../workflow-instance.entity.ts)\n                        \n                        \n                            StepType   (src/.../workflow-definition.entity.ts)\n                        \n                        \n                            TaskType   (src/.../workflow-execution.service.ts)\n                        \n                        \n                            WorkflowStatus   (src/.../workflow-instance.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/workflow/entities/workflow-instance.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        StepStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 RUNNING\n                            \n                        \n                        \n                            \n                                Value : RUNNING\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : COMPLETED\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : FAILED\n                            \n                        \n                        \n                            \n                                 SKIPPED\n                            \n                        \n                        \n                            \n                                Value : SKIPPED\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        WorkflowStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 RUNNING\n                            \n                        \n                        \n                            \n                                Value : RUNNING\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : COMPLETED\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : FAILED\n                            \n                        \n                        \n                            \n                                 PAUSED\n                            \n                        \n                        \n                            \n                                Value : PAUSED\n                            \n                        \n                        \n                            \n                                 CANCELLED\n                            \n                        \n                        \n                            \n                                Value : CANCELLED\n                            \n                        \n            \n        \n\n    src/workflow/entities/workflow-definition.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        StepType\n                    \n                \n                        \n                            \n                                 TASK\n                            \n                        \n                        \n                            \n                                Value : TASK\n                            \n                        \n                        \n                            \n                                 DECISION\n                            \n                        \n                        \n                            \n                                Value : DECISION\n                            \n                        \n                        \n                            \n                                 PARALLEL\n                            \n                        \n                        \n                            \n                                Value : PARALLEL\n                            \n                        \n                        \n                            \n                                 SUB_WORKFLOW\n                            \n                        \n                        \n                            \n                                Value : SUB_WORKFLOW\n                            \n                        \n            \n        \n\n    src/workflow/workflow-execution.service.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskType\n                    \n                \n                        \n                            \n                                 HTTP\n                            \n                        \n                        \n                            \n                                Value : http\n                            \n                        \n                        \n                            \n                                 SCRIPT\n                            \n                        \n                        \n                            \n                                Value : script\n                            \n                        \n                        \n                            \n                                 CONDITION\n                            \n                        \n                        \n                            \n                                Value : condition\n                            \n                        \n                        \n                            \n                                 DELAY\n                            \n                        \n                        \n                            \n                                Value : delay\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\nNestJS Workflow Engine\nA powerful and flexible workflow engine built with NestJS that allows you to define, execute, and manage complex workflows with multiple steps, dependencies, and conditional logic.\nFeatures\n\nCreate and manage workflow templates with multiple steps\nDefine dependencies between steps\nSpecify input/output parameters for each step\nSet conditional logic and branching\nAdd timeout and retry mechanisms\nHandle parallel execution\nSupport workflow pause/resume functionality\nComprehensive logging and monitoring\nREST API for workflow management\nPostgreSQL database for persistence\n\nPrerequisites\n\nNode.js (v16 or later)\nPostgreSQL (v12 or later)\nnpm or yarn\n\nInstallation\n\nClone the repository:\n\nExample :git clone \ncd workflow-engine\nInstall dependencies:\n\nExample :npm install\nSet up environment variables:\nCreate a .env file in the root directory with the following variables:\n\nExample :DB_HOST=localhost\nDB_PORT=5432\nDB_USERNAME=postgres\nDB_PASSWORD=postgres\nDB_NAME=workflow_engine\nNODE_ENV=development\nCreate the database:\n\nExample :createdb workflow_engineRunning the Application\nExample :# development\nnpm run start\n\n# watch mode\nnpm run start:dev\n\n# production mode\nnpm run start:prodAPI Documentation\nThe API documentation is available at /api when the application is running. Here are the main endpoints:\nWorkflow Definitions\n\nPOST /workflows - Create a new workflow definition\nGET /workflows - List all workflow definitions\nGET /workflows/:id - Get a specific workflow definition\nPATCH /workflows/:id - Update a workflow definition\nDELETE /workflows/:id - Delete a workflow definition\n\nWorkflow Execution\n\nPOST /workflows/execute - Start a new workflow execution\nPOST /workflows/:instanceId/pause - Pause a running workflow\nPOST /workflows/:instanceId/resume - Resume a paused workflow\nPOST /workflows/:instanceId/cancel - Cancel a workflow\n\nExample Workflow Definition\nHere's an example of creating a simple workflow with two steps:\nExample :{\n  \"name\": \"Simple Approval Workflow\",\n  \"description\": \"A two-step approval process\",\n  \"steps\": [\n    {\n      \"id\": \"submit\",\n      \"name\": \"Submit Request\",\n      \"type\": \"TASK\",\n      \"dependencies\": [],\n      \"config\": {\n        \"handler\": \"submitHandler\",\n        \"inputMapping\": {\n          \"request\": \"$.input.request\"\n        },\n        \"outputMapping\": {\n          \"requestId\": \"$.output.id\"\n        }\n      }\n    },\n    {\n      \"id\": \"approve\",\n      \"name\": \"Approve Request\",\n      \"type\": \"TASK\",\n      \"dependencies\": [\"submit\"],\n      \"config\": {\n        \"handler\": \"approveHandler\",\n        \"inputMapping\": {\n          \"requestId\": \"$.steps.submit.output.requestId\"\n        },\n        \"outputMapping\": {\n          \"approved\": \"$.output.approved\"\n        }\n      },\n      \"retryConfig\": {\n        \"maxAttempts\": 3,\n        \"backoffMultiplier\": 2,\n        \"initialDelay\": 1000\n      }\n    }\n  ],\n  \"inputSchema\": {\n    \"request\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": { \"type\": \"string\" },\n        \"description\": { \"type\": \"string\" }\n      }\n    }\n  },\n  \"outputSchema\": {\n    \"requestId\": { \"type\": \"string\" },\n    \"approved\": { \"type\": \"boolean\" }\n  }\n}Testing\nExample :# unit tests\nnpm run test\n\n# e2e tests\nnpm run test:e2e\n\n# test coverage\nnpm run test:covContributing\n\nFork the repository\nCreate your feature branch (git checkout -b feature/amazing-feature)\nCommit your changes (git commit -m 'Add some amazing feature')\nPush to the branch (git push origin feature/amazing-feature)\nOpen a Pull Request\n\nLicense\nThis project is licensed under the MIT License - see the LICENSE file for details.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WorkflowModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_WorkflowModule\n\n\n\ncluster_WorkflowModule_exports\n\n\n\ncluster_WorkflowModule_providers\n\n\n\n\nWorkflowModule\n\nWorkflowModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nWorkflowModule->AppModule\n\n\n\n\n\nWorkflowExecutionService \n\nWorkflowExecutionService \n\nWorkflowExecutionService  -->\n\nWorkflowModule->WorkflowExecutionService \n\n\n\n\n\nWorkflowService \n\nWorkflowService \n\nWorkflowService  -->\n\nWorkflowModule->WorkflowService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nWorkflowExecutionService\n\nWorkflowExecutionService\n\nWorkflowModule -->\n\nWorkflowExecutionService->WorkflowModule\n\n\n\n\n\nWorkflowService\n\nWorkflowService\n\nWorkflowModule -->\n\nWorkflowService->WorkflowModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TestDatabaseModule   (test/.../test-database.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    test/test-database.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TestDatabaseModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TypeOrmModule.forRoot({\n  type: 'postgres',\n  host: process.env.TEST_DB_HOST || 'localhost',\n  port: parseInt(process.env.TEST_DB_PORT, 10) || 5432,\n  username: process.env.TEST_DB_USERNAME || 'postgres',\n  password: process.env.TEST_DB_PASSWORD || 'postgres',\n  database: process.env.TEST_DB_NAME || 'workflow_engine_test',\n  entities: [WorkflowDefinition, WorkflowInstance],\n  synchronize: true, // Only for testing\n  dropSchema: true, // Clean state for each test run\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
