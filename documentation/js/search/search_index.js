var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.686,1,1.894]],["body/controllers/AppController.html",[0,2.867,1,3.221,2,2.391,3,0.532,4,0.458,5,0.388,6,3.55,7,0.532,8,3.221,9,4.727,10,1.935,11,0.038,12,1.588,13,4.3,14,2.686,15,0.828,16,0.637,17,1.752,18,2.756,19,3.55,20,0.532,21,0.137,22,4.3,23,3.055,24,2.391,25,4.3,26,0.032,27,0.032]],["title/modules/AppModule.html",[28,1.686,29,1.894]],["body/modules/AppModule.html",[1,3.168,2,2.55,3,0.44,4,0.379,5,0.321,11,0.039,16,0.714,17,1.45,18,2.831,19,2.939,20,0.44,21,0.114,26,0.028,27,0.028,28,2.82,29,3.653,30,1.98,31,0.719,32,2.53,33,2.53,34,1.98,35,3.604,36,2.53,37,2.939,38,2.939,39,2.939,40,3.155,41,3.258,42,2.53,43,2.224,44,3.56,45,3.785,46,2.939,47,1.98,48,3.56,49,3.56,50,0.926,51,4.585,52,1.315,53,1.693,54,2.224,55,3.56,56,0.572,57,5.072,58,3.56,59,3.56,60,3.56,61,3.56,62,3.56,63,3.56,64,3.56,65,3.56,66,3.56,67,3.56,68,3.56,69,2.939,70,3.56,71,3.56,72,2.224,73,4.585,74,3.56,75,3.785,76,3.56,77,3.56]],["title/injectables/AppService.html",[18,1.513,78,1.513]],["body/injectables/AppService.html",[3,0.547,4,0.471,5,0.399,7,0.547,8,3.276,9,4.772,11,0.038,12,1.634,14,2.763,15,0.842,16,0.547,17,1.802,18,2.617,20,0.547,21,0.141,24,2.46,26,0.032,27,0.032,78,2.617,79,3.143,80,3.651,81,4.423,82,4.423,83,4.423]],["title/classes/CreateWorkflowDefinitionDto.html",[21,0.097,84,1.513]],["body/classes/CreateWorkflowDefinitionDto.html",[3,0.349,4,0.3,5,0.255,7,0.349,10,2.388,11,0.039,12,1.959,15,0.823,16,0.603,20,0.349,21,0.144,26,0.024,27,0.024,56,0.947,84,1.957,85,1.568,86,4.492,87,1.516,88,2.004,89,0.881,90,1.753,91,1.837,92,1.766,93,2.25,94,1.277,95,1.666,96,1.558,97,3.641,98,2.82,99,2.82,100,1.343,101,4.875,102,4.024,103,1.766,104,4.875,105,3.045,106,2.787,107,2.82,108,1.666,109,2.328,110,3.923,111,2.25,112,3.923,113,1.315,114,2.82,115,2.82,116,2.82,117,2.82,118,2.181,119,2.82,120,3.201,121,2.787,122,3.238,123,2.82,124,2.82,125,2.82,126,3.204,127,3.238,128,3.204,129,3.238,130,3.923,131,3.923,132,1.762,133,2.328,134,2.82,135,3.769,136,3.238,137,1.568,138,2.004,139,1.081,140,2.787,141,2.45,142,2.328,143,2.004]],["title/interfaces/RetryConfig.html",[144,0.487,145,1.016]],["body/interfaces/RetryConfig.html",[3,0.422,4,0.363,5,0.308,7,0.422,11,0.038,15,0.931,16,0.422,20,0.693,21,0.109,26,0.027,27,0.027,31,0.689,50,0.689,56,0.878,89,0.806,90,1.037,91,1.389,93,1.702,94,1.111,95,1.259,96,1.037,100,1.452,108,1.259,113,1.143,139,0.94,144,0.846,145,1.766,146,1.389,147,1.143,148,1.535,149,2.146,150,2.146,151,2.146,152,1.982,153,1.037,154,1.389,155,2.146,156,1.816,157,1.816,158,1.037,159,1.896,160,1.389,161,1.002,162,2.024,163,2.007,164,1.389,165,1.647,166,1.389,167,1.816,168,1.259,169,2.007,170,1.389,171,1.702,172,1.389,173,2.007,174,1.389,175,1.389,176,1.389,177,1.535,178,1.535,179,1.535,180,1.143,181,1.647,182,2.225,183,1.816,184,2.225]],["title/classes/StartWorkflowDto.html",[21,0.097,185,1.894]],["body/classes/StartWorkflowDto.html",[3,0.47,4,0.405,5,0.343,7,0.47,10,2.151,11,0.038,12,1.765,15,0.767,16,0.591,20,0.47,21,0.153,26,0.029,27,0.029,56,0.767,85,2.113,87,1.367,89,0.864,90,1.453,97,3.395,100,1.317,103,2.545,105,3.427,106,2.699,111,2.385,126,3.395,128,3.395,132,2.373,135,3.715,137,2.113,141,2.373,161,1.075,185,2.985,186,4.316,187,3.136,188,2.609,189,3.945,190,3.799,191,3.395,192,3.945,193,3.945,194,3.945,195,3.945,196,3.799,197,3.799,198,3.136,199,3.136,200,3.136,201,3.136,202,3.136,203,3.799]],["title/interfaces/StepCondition.html",[144,0.487,173,1.365]],["body/interfaces/StepCondition.html",[3,0.424,4,0.365,5,0.31,7,0.424,11,0.038,15,0.951,16,0.424,20,0.694,21,0.11,26,0.028,27,0.028,31,0.693,50,0.693,56,0.919,89,0.809,90,1.043,91,1.397,93,1.712,94,1.116,95,1.267,96,1.043,100,1.455,108,1.267,113,1.15,139,0.945,144,0.848,145,1.67,146,1.397,147,1.15,148,1.544,149,1.397,150,1.397,151,1.397,152,1.77,153,1.043,154,1.397,155,2.151,156,1.823,157,1.823,158,1.043,159,1.908,160,1.397,161,1.006,162,2.03,163,2.015,164,1.397,165,1.653,166,1.397,167,1.823,168,1.267,169,2.015,170,1.397,171,1.712,172,1.397,173,2.243,174,1.397,175,1.397,176,1.397,177,2.377,178,2.243,179,2.243,180,1.15,181,1.653,182,2.234,183,1.823,184,2.234]],["title/interfaces/StepConfig.html",[144,0.487,169,1.365]],["body/interfaces/StepConfig.html",[3,0.422,4,0.363,5,0.308,7,0.422,11,0.038,15,0.95,16,0.422,20,0.693,21,0.109,26,0.027,27,0.027,31,0.689,50,0.689,56,0.878,89,0.806,90,1.037,91,1.389,93,1.702,94,1.111,95,1.259,96,1.037,100,1.597,108,1.259,113,1.143,139,0.94,144,0.846,145,1.665,146,1.389,147,1.143,148,1.535,149,1.389,150,1.389,151,1.389,152,1.766,153,1.037,154,1.389,155,2.146,156,1.816,157,1.816,158,1.037,159,1.896,160,1.389,161,1.002,162,2.024,163,2.007,164,1.389,165,1.647,166,1.389,167,1.816,168,1.259,169,2.236,170,1.389,171,1.702,172,1.389,173,2.007,174,2.146,175,2.146,176,2.146,177,1.535,178,1.535,179,1.535,180,1.143,181,1.647,182,2.225,183,1.816,184,2.225]],["title/interfaces/StepState.html",[144,0.487,204,1.513]],["body/interfaces/StepState.html",[3,0.375,4,0.324,5,0.274,7,0.375,11,0.039,15,0.907,16,0.51,20,0.65,21,0.097,26,0.025,27,0.025,50,1.016,52,1.122,53,1.122,56,0.907,87,0.757,89,0.746,92,2.442,94,0.757,100,1.292,103,1.367,113,1.018,118,2.925,139,1.137,144,0.663,146,1.237,147,1.018,152,1.571,153,0.924,154,1.237,155,2.143,156,1.681,157,1.681,158,0.924,160,1.237,161,0.683,162,1.91,164,1.237,165,2.139,166,1.237,180,1.686,188,2.06,204,2.51,205,1.689,206,3.142,207,3.574,208,2.797,209,3.142,210,2.925,211,2.797,212,2.797,213,2.933,214,2.933,215,2.607,216,3.142,217,2.264,218,2.797,219,2.51,220,2.06,221,2.295,222,2.158,223,1.897,224,2.295,225,1.897,226,2.933,227,2.158,228,2.158,229,1.897,230,1.897,231,1.689,232,2.578]],["title/interfaces/TaskResult.html",[144,0.487,233,2.154]],["body/interfaces/TaskResult.html",[3,0.141,4,0.121,5,0.103,7,0.141,11,0.039,15,0.726,16,0.448,17,0.463,20,0.141,21,0.036,23,0.808,24,3.053,26,0.018,27,0.012,31,0.23,47,0.632,50,0.39,52,0.42,53,1.502,54,0.71,56,0.582,78,0.964,87,0.482,89,0.349,92,0.87,95,0.42,96,1.101,100,0.918,102,0.938,103,1.134,108,1.098,111,1.662,113,0.648,118,2.772,121,0.808,139,0.819,143,3.432,144,0.183,146,0.463,158,0.346,161,0.749,165,1.098,167,0.463,168,1.338,170,0.463,172,1.211,177,0.512,178,0.87,179,0.87,180,0.381,181,1.23,183,0.463,188,1.258,189,1.595,191,0.808,204,0.964,206,0.71,208,2.903,209,1.574,210,1.401,211,0.632,212,0.632,215,0.632,217,0.512,218,1.653,219,1.662,223,1.574,225,0.71,229,1.207,230,1.207,231,2.262,233,1.791,234,0.808,235,0.808,236,1.932,237,0.938,238,1.373,239,1.074,240,1.134,241,0.808,242,0.938,243,1.595,244,2.454,245,2.08,246,0.632,247,3.432,248,2.977,249,1.137,250,0.808,251,1.137,252,1.137,253,3.912,254,0.938,255,3.912,256,4.747,257,4.639,258,1.137,259,3.912,260,3.331,261,2.367,262,4.31,263,1.137,264,1.595,265,1.137,266,1.137,267,1.932,268,4.391,269,1.137,270,1.137,271,2.973,272,3.501,273,1.137,274,3.864,275,1.932,276,1.137,277,4.067,278,2.973,279,2.52,280,2.973,281,4.067,282,1.932,283,1.932,284,1.932,285,1.137,286,1.932,287,1.137,288,1.137,289,1.137,290,3.331,291,1.137,292,1.137,293,1.137,294,1.137,295,3.068,296,1.137,297,1.137,298,1.137,299,2.973,300,1.373,301,1.137,302,1.137,303,1.137,304,3.357,305,1.137,306,0.938,307,1.137,308,1.137,309,0.938,310,1.932,311,1.137,312,1.137,313,2.08,314,0.938,315,3.912,316,1.932,317,2.973,318,3.864,319,1.137,320,1.932,321,2.52,322,1.137,323,1.137,324,1.137,325,1.137,326,1.932,327,1.207,328,1.932,329,2.52,330,1.932,331,1.137,332,1.137,333,1.137,334,1.137,335,1.137,336,1.137,337,1.137,338,3.623,339,1.137,340,1.137,341,1.137,342,1.137,343,1.137,344,1.137,345,1.932,346,1.137,347,0.938,348,1.932,349,1.137,350,1.137,351,1.137,352,4.067,353,1.137,354,1.137,355,1.932,356,1.137,357,1.137,358,1.137,359,1.137,360,1.137,361,1.137,362,1.137,363,2.52,364,1.137,365,1.137,366,1.137,367,1.137,368,1.137,369,1.857,370,3.331,371,1.137,372,1.137,373,1.932,374,1.932,375,1.595,376,1.137,377,1.137,378,1.137,379,1.137,380,1.137,381,1.137,382,1.137,383,1.137,384,1.137,385,3.623,386,2.08,387,1.137,388,1.137,389,1.137,390,1.932,391,1.137,392,2.52,393,1.137,394,1.137,395,1.932,396,1.137,397,1.137,398,1.137,399,1.137,400,1.932,401,1.932,402,1.137,403,2.52,404,1.137,405,1.137,406,1.137,407,1.137,408,1.137,409,1.137,410,1.932,411,1.932,412,1.137,413,1.137,414,1.137,415,1.137,416,1.137,417,1.137,418,1.932,419,1.932,420,1.137,421,1.137,422,1.137,423,1.137,424,1.137,425,1.932,426,1.137,427,1.137,428,1.932,429,1.932,430,1.137,431,1.137,432,1.932,433,1.137,434,1.137,435,1.137,436,1.137,437,1.137,438,0.938,439,2.52,440,1.137,441,1.137,442,1.137,443,1.137,444,0.938,445,1.137,446,0.938,447,0.938,448,1.137]],["title/classes/UpdateWorkflowDefinitionDto.html",[21,0.097,449,1.686]],["body/classes/UpdateWorkflowDefinitionDto.html",[3,0.556,4,0.479,5,0.406,11,0.037,16,0.654,20,0.556,21,0.144,26,0.033,27,0.033,84,2.242,85,2.499,87,1.319,88,3.193,449,2.943,450,3.709,451,5.293,452,5.293,453,4.494,454,3.709,455,3.709,456,2.807,457,3.193]],["title/controllers/WorkflowController.html",[0,1.686,458,1.894]],["body/controllers/WorkflowController.html",[0,0.625,2,0.625,3,0.139,4,0.12,5,0.102,7,0.139,8,1.196,10,1.9,11,0.039,12,1.559,14,2.637,15,0.875,16,0.522,17,0.458,20,0.139,21,0.036,23,1.361,24,2.348,26,0.012,27,0.012,31,0.596,50,0.669,52,0.415,53,1.223,54,0.703,56,0.936,84,1.473,87,1.512,89,0.598,90,1.795,91,0.78,92,1.9,94,1.298,95,0.707,96,1.007,103,0.862,108,0.707,111,2.788,121,0.799,137,0.625,140,2.352,141,2.886,142,0.928,143,1.361,145,0.377,149,0.458,150,0.458,151,0.458,152,0.377,161,1.225,168,1.09,174,1.202,175,1.202,176,1.202,181,1.09,185,2.25,188,0.955,192,1.581,193,1.581,194,1.581,195,1.581,198,0.928,199,0.928,200,2.064,201,0.928,202,0.928,210,2.764,217,0.862,220,1.473,221,1.065,239,1.065,240,1.125,241,0.799,246,1.39,247,1.361,248,1.841,250,0.799,254,1.581,261,3.355,262,3.813,272,3.813,327,2.637,369,2.068,375,2.973,444,0.928,446,0.928,447,0.928,449,1.641,456,1.844,457,1.361,458,1.196,459,0.928,460,1.125,461,0.928,462,1.915,463,2.437,464,1.581,465,1.915,466,1.581,467,1.915,468,1.125,469,1.581,470,2.5,471,3.602,472,4.62,473,2.952,474,4.814,475,1.125,476,2.876,477,1.125,478,1.125,479,1.125,480,2.952,481,1.915,482,1.915,483,1.125,484,1.915,485,3.602,486,3.602,487,2.437,488,1.125,489,1.915,490,1.125,491,1.125,492,1.361,493,2.064,494,1.125,495,0.928,496,1.125,497,1.125,498,1.915,499,1.125,500,1.125,501,1.581,502,1.125,503,0.928,504,1.125,505,2.064,506,1.915,507,1.915,508,1.125,509,1.125,510,1.125,511,1.125,512,1.581,513,1.915,514,1.125,515,1.125,516,1.125,517,2.973,518,1.125,519,1.581,520,1.915,521,1.125,522,0.928,523,2.952,524,1.125,525,2.5,526,1.125,527,1.125,528,1.125,529,1.125,530,0.928,531,1.581,532,2.952,533,4.373,534,3.844,535,5.038,536,1.125,537,0.928,538,1.125,539,1.125,540,0.928,541,0.928,542,1.125,543,1.125,544,4.896,545,1.915,546,3.31,547,2.973,548,1.125,549,1.125,550,0.799,551,0.928,552,2.952,553,1.125,554,1.581,555,2.952,556,1.125,557,1.125,558,2.5,559,2.5,560,1.915,561,1.125,562,0.703,563,1.777,564,0.799,565,1.125,566,1.125,567,3.844,568,2.5,569,1.125,570,2.5,571,1.125,572,2.064,573,1.125,574,1.125,575,2.952,576,1.125,577,1.125,578,1.125,579,1.125,580,1.125,581,1.581,582,1.125,583,1.125,584,1.125,585,2.5,586,1.125,587,1.915,588,1.125,589,2.5,590,1.125,591,1.125,592,1.125,593,1.125,594,1.125,595,1.125,596,1.125,597,1.125,598,1.125,599,1.125,600,1.125,601,1.125,602,0.928,603,1.125,604,1.125,605,1.125,606,1.125,607,1.125,608,1.125,609,1.125,610,1.125,611,1.125,612,0.928,613,1.125,614,1.125,615,1.125,616,1.125,617,1.125,618,1.915,619,1.915,620,1.125,621,1.125,622,1.125,623,1.125,624,1.125,625,1.125,626,1.125,627,1.125,628,1.125,629,1.125,630,1.125,631,1.125,632,1.125,633,1.125]],["title/entities/WorkflowDefinition.html",[50,0.613,153,0.922]],["body/entities/WorkflowDefinition.html",[3,0.364,4,0.313,5,0.266,7,0.364,10,2.56,11,0.039,12,2.101,15,0.933,16,0.364,20,0.664,21,0.094,26,0.025,27,0.025,31,0.595,50,0.816,56,0.933,72,1.838,89,0.73,90,1.402,91,1.879,93,2.301,94,1.237,95,1.703,96,1.402,100,1.481,108,1.492,113,0.986,139,1.113,144,0.797,145,1.546,147,1.929,148,1.324,149,1.199,150,1.199,151,1.199,152,1.664,153,0.895,154,1.199,155,2.189,156,1.879,157,1.879,158,0.895,159,1.636,160,1.645,161,1.116,162,2.189,163,2.076,164,1.879,165,1.833,166,1.879,167,1.645,168,1.087,169,1.818,170,1.199,171,1.468,172,1.199,173,1.818,174,1.199,175,1.199,176,1.199,177,1.324,178,1.324,179,1.324,180,0.986,181,1.492,182,2.016,183,1.645,184,2.016,634,2.943,635,2.943,636,2.943,637,2.943,638,2.943,639,2.943,640,2.943,641,2.943,642,2.943,643,2.943]],["title/entities/WorkflowInstance.html",[53,1.12,153,0.922]],["body/entities/WorkflowInstance.html",[3,0.331,4,0.285,5,0.241,7,0.331,10,2.569,11,0.039,12,2.108,15,0.837,16,0.467,20,0.621,21,0.085,26,0.023,27,0.023,50,1.083,52,0.987,53,1.395,56,0.925,72,1.67,87,0.666,89,0.683,94,0.666,100,1.384,103,1.972,113,1.266,118,2.648,139,1.312,144,0.607,147,1.931,152,0.896,153,0.813,154,1.089,155,2.124,156,1.785,157,1.785,158,0.813,160,1.539,161,0.985,162,2.124,164,1.785,165,2.084,166,1.785,180,1.748,188,2.507,204,2.187,205,1.487,206,1.67,207,1.9,208,1.487,209,1.67,210,2.648,211,1.487,212,2.101,213,2.685,214,2.685,215,2.794,216,2.975,217,2.143,218,2.648,219,2.376,220,1.885,221,2.101,222,1.9,223,2.737,224,2.437,225,1.67,226,2.685,227,3.113,228,3.113,229,1.67,230,1.67,231,1.487,232,2.36,487,2.207,644,3.778,645,2.674,646,2.674,647,2.674,648,2.674,649,2.674,650,2.674,651,2.674,652,2.674,653,2.674,654,2.674,655,2.674,656,2.674,657,2.674]],["title/modules/WorkflowModule.html",[28,1.686,40,1.686]],["body/modules/WorkflowModule.html",[2,2.617,3,0.458,4,0.395,5,0.335,11,0.038,16,0.72,17,1.51,20,0.458,21,0.118,26,0.029,27,0.029,28,2.875,30,2.062,31,0.749,32,2.635,33,2.635,34,2.062,35,3.673,36,3.673,40,3.335,41,3.344,42,2.635,43,2.316,45,3.061,46,3.061,47,2.062,50,0.749,52,1.369,53,1.738,54,2.316,87,0.924,239,2.617,240,2.73,241,2.635,246,3.373,458,3.229,541,3.061,658,3.061,659,3.061,660,3.061,661,3.708,662,3.708,663,3.708]],["title/injectables/WorkflowService.html",[78,1.513,240,1.365]],["body/injectables/WorkflowService.html",[3,0.279,4,0.24,5,0.204,7,0.279,8,2.088,11,0.039,12,1.931,14,3.18,15,0.872,16,0.608,17,0.92,20,0.279,21,0.072,24,2.736,26,0.021,27,0.021,31,0.675,47,1.255,50,0.889,52,0.834,56,0.818,78,1.668,79,1.604,84,2.196,87,1.374,92,2.292,94,1.269,96,1.21,111,1.126,139,0.622,158,0.686,161,1.176,208,1.255,211,2.214,237,1.863,238,3.127,239,1.255,240,1.505,247,3.127,248,2.831,250,2.375,253,4.819,255,4.604,256,4.694,257,4.203,259,3.633,261,1.604,295,3.073,300,1.604,304,2.759,306,1.863,309,1.863,327,2.487,449,2.447,456,2.487,457,2.375,463,3.633,464,2.759,466,2.759,476,3.618,495,2.759,503,2.759,522,1.863,537,1.863,540,1.863,572,2.759,664,1.863,665,3.343,666,3.981,667,2.257,668,2.257,669,3.343,670,3.343,671,2.257,672,3.343,673,2.257,674,2.257,675,3.343,676,2.257,677,2.257,678,2.257,679,4.401,680,2.257,681,2.257,682,2.257,683,3.343,684,2.257,685,2.257,686,3.343,687,2.257,688,2.257,689,3.343,690,2.257,691,2.257,692,1.863,693,1.863,694,3.286,695,3.343,696,2.257,697,2.257,698,2.257,699,2.257,700,3.981,701,3.343,702,2.257,703,2.257,704,2.257,705,3.343,706,3.343,707,2.257,708,2.257,709,2.257,710,2.257,711,2.257,712,2.257,713,2.257,714,2.257,715,2.257,716,2.257,717,2.257,718,2.257,719,2.257,720,2.257,721,2.257]],["title/interfaces/WorkflowState.html",[144,0.487,224,1.686]],["body/interfaces/WorkflowState.html",[3,0.398,4,0.343,5,0.291,7,0.398,11,0.039,15,0.827,16,0.531,20,0.663,21,0.103,26,0.026,27,0.026,50,1.041,52,1.19,53,1.19,56,0.827,87,0.803,89,0.776,94,0.803,100,1.479,103,1.45,113,1.08,118,2.388,139,1.184,144,0.69,146,1.312,147,1.08,152,1.08,153,0.98,154,1.312,155,2.186,156,1.749,157,1.749,158,0.98,160,1.312,161,0.724,162,1.968,164,1.312,165,2.039,166,1.312,180,1.727,188,2.143,204,2.812,205,1.792,206,2.013,207,2.289,208,1.792,209,2.013,210,2.388,211,1.792,212,2.388,213,3.052,214,3.052,215,2.686,216,3.219,217,2.319,218,2.865,219,2.571,220,2.143,221,2.388,222,2.289,223,2.013,224,2.686,225,2.013,226,3.052,227,2.289,228,2.289,229,3.219,230,3.219,231,2.865,232,2.683]],["title/interfaces/WorkflowStep.html",[144,0.487,163,1.365]],["body/interfaces/WorkflowStep.html",[3,0.389,4,0.336,5,0.284,7,0.389,11,0.038,15,0.962,16,0.389,20,0.678,21,0.101,26,0.026,27,0.026,31,1.032,50,0.637,56,0.957,89,0.764,90,0.958,91,1.283,92,2.469,93,1.572,94,1.328,95,1.164,96,0.958,100,1.407,108,1.164,113,1.056,139,0.868,144,0.82,145,1.909,146,1.283,147,1.056,148,1.418,149,1.283,150,1.283,151,1.283,152,1.838,153,0.958,154,1.283,155,2.08,156,1.723,157,1.723,158,0.958,159,1.752,160,1.283,161,1.198,162,1.946,163,2.15,164,1.283,165,1.563,166,1.283,167,2.08,168,1.886,169,2.298,170,2.08,171,1.572,172,2.08,173,2.298,174,1.283,175,1.283,176,1.283,177,1.418,178,1.418,179,1.418,180,1.056,181,1.563,182,2.111,183,1.723,184,2.111]],["title/classes/WorkflowStepDto.html",[21,0.097,120,1.894]],["body/classes/WorkflowStepDto.html",[3,0.317,4,0.273,5,0.231,7,0.317,10,2.437,11,0.039,12,1.999,15,0.869,16,0.529,20,0.317,21,0.117,26,0.023,27,0.023,31,0.865,52,0.946,56,0.954,85,1.424,87,1.281,89,0.662,90,1.676,92,2.314,94,1.232,96,1.114,97,3.318,100,1.01,105,3.211,106,1.819,109,3.532,120,2.289,126,3.318,127,3.025,128,3.318,129,3.855,132,1.6,135,3.653,136,3.855,137,1.424,138,1.819,139,1.01,141,1.6,145,1.434,149,1.493,150,1.493,151,1.493,152,1.656,161,0.962,167,2.013,168,1.58,170,2.013,171,1.828,172,2.013,174,1.493,175,1.493,176,1.493,177,1.649,178,1.649,179,1.153,180,0.858,219,1.828,239,1.424,295,3.602,315,2.114,369,3.087,492,2.603,550,2.603,554,2.114,562,1.6,564,2.603,692,3.025,693,3.025,722,4.549,723,2.114,724,4.279,725,3.664,726,2.561,727,4.671,728,2.561,729,3.664,730,2.561,731,2.561,732,3.025,733,3.664,734,2.561,735,2.561,736,2.561,737,2.561,738,2.561,739,2.561,740,2.561,741,2.561,742,2.561,743,3.664,744,2.561,745,2.561,746,2.561,747,2.561,748,2.561]],["title/coverage.html",[749,2.929]],["body/coverage.html",[0,2.512,1,2.174,5,0.314,6,2.873,11,0.038,18,1.736,21,0.17,26,0.028,27,0.028,34,1.935,50,0.703,53,1.285,56,0.559,78,2.503,80,2.873,84,1.736,86,2.873,87,1.126,88,3.21,120,2.174,144,0.922,145,1.166,147,1.951,148,2.477,153,1.374,163,1.566,169,1.566,173,1.566,185,2.174,186,2.873,187,2.873,204,1.736,205,2.79,224,1.935,233,2.472,234,3.21,235,3.21,240,1.566,246,1.935,248,1.935,313,5.087,386,2.873,449,1.935,450,2.873,458,2.174,459,2.873,664,2.873,722,2.873,723,2.873,732,2.873,749,2.472,750,2.873,751,3.48,752,4.518,753,2.873,754,5.31,755,3.48,756,4.518,757,5.017,758,5.31,759,3.48,760,3.48,761,3.48,762,3.48,763,3.48]],["title/dependencies.html",[31,0.736,764,2.096]],["body/dependencies.html",[11,0.038,17,1.747,21,0.165,26,0.032,27,0.032,31,0.867,47,2.385,132,2.679,133,3.541,137,2.385,158,1.304,454,3.541,455,3.541,765,5.517,766,4.289,767,4.289,768,4.289,769,5.149,770,4.289,771,4.289,772,4.289,773,4.289,774,4.289,775,4.289,776,4.289,777,4.289,778,4.289,779,4.289,780,4.289,781,4.289,782,4.289,783,4.289,784,4.289]],["title/miscellaneous/enumerations.html",[785,1.586,786,3.007]],["body/miscellaneous/enumerations.html",[7,0.467,11,0.038,26,0.029,27,0.029,147,1.595,148,2.142,167,1.938,172,1.938,181,1.758,182,2.375,183,1.938,184,2.375,205,2.898,212,2.646,215,2.646,216,3.418,217,2.463,218,3.043,219,2.731,220,2.375,221,2.646,232,2.972,234,2.681,235,3.381,242,3.928,243,3.928,244,3.928,245,3.928,547,5.125,785,2.357,786,3.115,787,5.473]],["title/miscellaneous/functions.html",[785,1.586,788,3.007]],["body/miscellaneous/functions.html",[7,0.588,11,0.034,26,0.034,27,0.034,34,3.203,753,3.928,785,2.972,788,3.928,789,4.758]],["title/index.html",[7,0.314,519,2.096,790,2.539]],["body/index.html",[4,0.19,5,0.252,11,0.038,15,0.554,26,0.017,27,0.017,31,0.856,43,2.805,56,0.754,69,2.309,75,2.845,87,1.42,89,0.323,90,1.048,91,0.728,94,0.859,95,0.66,96,1.427,105,3.351,108,0.66,111,2.113,122,2.309,138,1.269,140,1.269,145,0.599,149,0.728,150,0.728,151,0.728,161,0.629,168,1.033,170,0.728,174,1.139,175,1.139,176,1.139,181,1.033,183,0.728,191,1.269,217,1.259,220,0.892,231,1.555,238,2.449,248,1.555,264,2.309,295,1.747,300,3.19,314,1.475,327,1.116,347,1.475,369,2.153,438,1.475,456,2.645,461,2.845,469,1.475,476,1.269,492,1.269,493,2.309,501,1.475,505,2.309,512,1.475,517,2.845,530,1.475,531,3.495,550,1.269,551,2.309,562,1.116,563,1.269,564,1.269,581,1.475,602,1.475,612,2.309,694,2.309,749,1.987,750,3.219,791,1.787,792,2.797,793,3.447,794,2.797,795,1.787,796,1.787,797,1.787,798,1.787,799,2.797,800,3.447,801,1.787,802,1.787,803,4.234,804,1.787,805,5.538,806,1.787,807,5.364,808,2.797,809,2.797,810,3.9,811,2.797,812,1.787,813,4.234,814,2.797,815,3.9,816,2.797,817,2.797,818,1.787,819,1.787,820,3.9,821,5.109,822,4.858,823,1.787,824,1.787,825,1.787,826,1.787,827,1.787,828,2.797,829,3.9,830,1.787,831,2.797,832,1.787,833,4.49,834,3.9,835,1.787,836,2.797,837,1.787,838,1.787,839,1.787,840,1.787,841,3.9,842,3.447,843,3.447,844,1.787,845,1.787,846,2.797,847,1.787,848,1.787,849,2.797,850,1.787,851,1.787,852,2.797,853,1.787,854,1.787,855,1.787,856,2.797,857,1.787,858,1.787,859,3.495,860,2.797,861,1.787,862,1.787,863,1.787,864,1.787,865,1.787,866,1.787,867,1.787,868,1.787,869,2.797,870,1.787,871,1.787,872,1.787,873,1.787,874,3.447,875,1.787,876,1.787,877,1.787,878,1.787,879,1.787,880,1.787,881,2.797,882,1.787,883,1.787,884,1.787,885,1.787,886,1.787,887,2.797,888,1.787,889,1.787,890,1.787,891,3.447,892,3.447,893,2.797,894,1.787,895,1.787,896,1.787,897,2.797,898,1.787,899,1.787,900,1.787,901,1.787,902,2.797,903,1.787,904,1.475,905,1.787,906,1.787,907,1.787,908,1.787,909,1.787,910,1.787,911,3.219,912,3.447,913,1.787,914,1.787,915,1.787,916,1.787,917,2.797,918,1.787,919,2.797,920,2.797,921,1.787,922,1.787,923,1.787,924,1.787,925,1.787,926,1.787,927,1.787,928,1.787,929,1.787,930,1.787,931,1.787,932,1.787,933,3.447,934,1.787,935,2.797,936,1.787,937,1.787,938,1.787,939,2.797,940,1.787,941,1.787,942,1.787,943,2.797,944,3.9,945,1.787,946,1.787,947,1.787,948,1.787,949,1.787,950,1.787,951,1.787,952,1.787,953,1.787,954,1.787,955,1.787,956,1.787,957,1.787,958,1.787,959,1.787,960,1.787,961,1.787,962,1.787,963,1.787,964,3.447,965,1.787,966,1.787,967,1.787,968,1.787,969,1.787,970,1.787,971,1.787,972,2.797,973,2.797,974,3.447,975,4.234,976,1.787,977,1.787,978,3.447,979,1.787,980,2.797,981,1.787,982,1.787,983,2.797,984,1.787,985,1.787,986,1.787,987,1.787,988,1.787,989,3.9,990,2.797,991,1.787,992,1.787,993,2.797,994,2.797,995,1.787,996,1.787,997,2.797,998,1.787,999,1.787,1000,1.787,1001,1.787,1002,1.787]],["title/modules.html",[30,2.292]],["body/modules.html",[11,0.034,26,0.034,27,0.034,29,2.947,30,2.624,40,2.624,859,4.496,1003,5.446,1004,5.446,1005,5.446]],["title/overview.html",[1006,3.403]],["body/overview.html",[2,2.265,11,0.037,18,2.692,26,0.031,27,0.031,28,2.265,29,3.667,30,2.265,31,0.823,32,2.894,33,2.894,34,2.265,35,2.894,36,2.894,37,3.362,38,3.362,39,3.362,40,3.363,41,3.545,42,2.894,43,2.544,72,2.544,79,2.894,85,2.265,146,1.659,240,2.676,246,3.306,562,2.544,563,3.833,658,3.362,659,3.362,660,3.362,1006,3.362,1007,4.073,1008,4.073]],["title/properties.html",[89,0.658,764,2.096]],["body/properties.html",[11,0.037,26,0.034,27,0.034,89,0.853,90,1.435,904,3.895,911,3.895,1009,4.719,1010,4.719,1011,4.719]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":313,"title":{},"body":{"interfaces/TaskResult.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1010,"title":{},"body":{"properties.html":{}}}],["0.14.0",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":761,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":760,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":752,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":758,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":759,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":757,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":619,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["1.5",{"_index":747,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["10",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["10.0.0",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":564,"title":{},"body":{"controllers/WorkflowController.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["12345",{"_index":201,"title":{},"body":{"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{}}}],["123e4567",{"_index":192,"title":{},"body":{"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{}}}],["12d3",{"_index":194,"title":{},"body":{"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{}}}],["2",{"_index":563,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{},"overview.html":{}}}],["2.0.4",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":472,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["201",{"_index":480,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["204",{"_index":507,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["3",{"_index":562,"title":{},"body":{"controllers/WorkflowController.html":{},"classes/WorkflowStepDto.html":{},"index.html":{},"overview.html":{}}}],["30000",{"_index":402,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["4",{"_index":1007,"title":{},"body":{"overview.html":{}}}],["404",{"_index":474,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["426614174000",{"_index":198,"title":{},"body":{"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{}}}],["426614174000'})@isstring",{"_index":196,"title":{},"body":{"classes/StartWorkflowDto.html":{}}}],["426614174001",{"_index":616,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["5.0.1",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["7",{"_index":1008,"title":{},"body":{"overview.html":{}}}],["7.4.2",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["8.11.3",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["99.99",{"_index":203,"title":{},"body":{"classes/StartWorkflowDto.html":{}}}],["a456",{"_index":195,"title":{},"body":{"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{}}}],["active",{"_index":112,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["add",{"_index":264,"title":{},"body":{"interfaces/TaskResult.html":{},"index.html":{}}}],["allowing",{"_index":847,"title":{},"body":{"index.html":{}}}],["allows",{"_index":916,"title":{},"body":{"index.html":{}}}],["already",{"_index":296,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["amazing",{"_index":897,"title":{},"body":{"index.html":{}}}],["amount",{"_index":202,"title":{},"body":{"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{}}}],["api",{"_index":933,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":532,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["apioperation",{"_index":533,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["apiparam",{"_index":534,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["apiproperty",{"_index":135,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"classes/WorkflowStepDto.html":{}}}],["apiproperty({description",{"_index":97,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"classes/WorkflowStepDto.html":{}}}],["apiproperty({enum",{"_index":739,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["apipropertyoptional",{"_index":136,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/WorkflowStepDto.html":{}}}],["apipropertyoptional({description",{"_index":109,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/WorkflowStepDto.html":{}}}],["apiresponse",{"_index":535,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["apitags",{"_index":536,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["apitags('workflows",{"_index":542,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["app.controller",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":822,"title":{},"body":{"index.html":{}}}],["applications",{"_index":799,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approval",{"_index":973,"title":{},"body":{"index.html":{}}}],["approve",{"_index":980,"title":{},"body":{"index.html":{}}}],["approved",{"_index":983,"title":{},"body":{"index.html":{}}}],["approvehandler",{"_index":981,"title":{},"body":{"index.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":121,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{}}}],["array.isarray(tasks",{"_index":404,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["associate",{"_index":266,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["async",{"_index":253,"title":{},"body":{"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{}}}],["attempts",{"_index":206,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["author",{"_index":904,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":961,"title":{},"body":{"index.html":{}}}],["await",{"_index":257,"title":{},"body":{"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{}}}],["aws",{"_index":836,"title":{},"body":{"index.html":{}}}],["b",{"_index":992,"title":{},"body":{"index.html":{}}}],["backers",{"_index":898,"title":{},"body":{"index.html":{}}}],["backoffmultiplier",{"_index":149,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["based",{"_index":314,"title":{},"body":{"interfaces/TaskResult.html":{},"index.html":{}}}],["between",{"_index":922,"title":{},"body":{"index.html":{}}}],["board",{"_index":890,"title":{},"body":{"index.html":{}}}],["body",{"_index":375,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{}}}],["boolean",{"_index":108,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"index.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":990,"title":{},"body":{"index.html":{}}}],["branching",{"_index":925,"title":{},"body":{"index.html":{}}}],["break",{"_index":321,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["browse",{"_index":1005,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1003,"title":{},"body":{"modules.html":{}}}],["building",{"_index":794,"title":{},"body":{"index.html":{}}}],["built",{"_index":915,"title":{},"body":{"index.html":{}}}],["cancel",{"_index":469,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["cancelled",{"_index":221,"title":{},"body":{"interfaces/StepState.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"miscellaneous/enumerations.html":{}}}],["cancelworkflow",{"_index":462,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["cancelworkflow(@param('instanceid",{"_index":632,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["cancelworkflow(instanceid",{"_index":447,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{}}}],["case",{"_index":318,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["catch",{"_index":281,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["cd",{"_index":945,"title":{},"body":{"index.html":{}}}],["changes",{"_index":995,"title":{},"body":{"index.html":{}}}],["channel",{"_index":862,"title":{},"body":{"index.html":{}}}],["check",{"_index":300,"title":{},"body":{"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{},"index.html":{}}}],["checkcirculardependencies",{"_index":665,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["checkcirculardependencies(steps",{"_index":670,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["checkout",{"_index":991,"title":{},"body":{"index.html":{}}}],["circular",{"_index":706,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["class",{"_index":21,"title":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"classes/WorkflowStepDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":85,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"classes/WorkflowStepDto.html":{},"overview.html":{}}}],["clicks",{"_index":846,"title":{},"body":{"index.html":{}}}],["clone",{"_index":943,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":832,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_workflowmodule",{"_index":658,"title":{},"body":{"modules/WorkflowModule.html":{},"overview.html":{}}}],["cluster_workflowmodule_exports",{"_index":659,"title":{},"body":{"modules/WorkflowModule.html":{},"overview.html":{}}}],["cluster_workflowmodule_providers",{"_index":660,"title":{},"body":{"modules/WorkflowModule.html":{},"overview.html":{}}}],["column",{"_index":155,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{}}}],["column('jsonb",{"_index":162,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{}}}],["column({default",{"_index":638,"title":{},"body":{"entities/WorkflowDefinition.html":{}}}],["column({nullable",{"_index":644,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["column({type",{"_index":652,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["come",{"_index":853,"title":{},"body":{"index.html":{}}}],["commit",{"_index":994,"title":{},"body":{"index.html":{}}}],["complete",{"_index":339,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["completed",{"_index":218,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"miscellaneous/enumerations.html":{}}}],["completedat",{"_index":228,"title":{},"body":{"interfaces/StepState.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["completedstepids",{"_index":288,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["completedstepids.has(depid",{"_index":302,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["completedstepids.has(step.id",{"_index":297,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["completedsteps",{"_index":230,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["complex",{"_index":918,"title":{},"body":{"index.html":{}}}],["comprehensive",{"_index":929,"title":{},"body":{"index.html":{}}}],["condition",{"_index":172,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"miscellaneous/enumerations.html":{}}}],["conditional",{"_index":920,"title":{},"body":{"index.html":{}}}],["config",{"_index":168,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["configuration",{"_index":727,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["const",{"_index":256,"title":{},"body":{"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{}}}],["constructor",{"_index":250,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["constructor(workflowdefinitionrepo",{"_index":667,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["context",{"_index":385,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["continue",{"_index":345,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/WorkflowController.html":{}},"body":{"controllers/AppController.html":{},"controllers/WorkflowController.html":{},"coverage.html":{}}}],["controller('workflows",{"_index":543,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/WorkflowController.html":{},"modules/WorkflowModule.html":{},"overview.html":{}}}],["courses",{"_index":868,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":749,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":456,"title":{},"body":{"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{},"index.html":{}}}],["create(@body",{"_index":590,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["create(createdto",{"_index":673,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["create(createworkflowdto",{"_index":477,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["created",{"_index":481,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["createdat",{"_index":164,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{}}}],["createdatecolumn",{"_index":156,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{}}}],["createdb",{"_index":958,"title":{},"body":{"index.html":{}}}],["createdto",{"_index":675,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["createworkflowdefinitiondto",{"_index":84,"title":{"classes/CreateWorkflowDefinitionDto.html":{}},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{},"coverage.html":{}}}],["createworkflowdto",{"_index":489,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["creating",{"_index":971,"title":{},"body":{"index.html":{}}}],["creation",{"_index":484,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["credit_card",{"_index":620,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["current",{"_index":310,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["currentsteps",{"_index":229,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["data",{"_index":189,"title":{},"body":{"classes/StartWorkflowDto.html":{},"interfaces/TaskResult.html":{}}}],["database",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["date",{"_index":165,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{}}}],["date.now",{"_index":410,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["db_host=localhost",{"_index":952,"title":{},"body":{"index.html":{}}}],["db_name=workflow_engine",{"_index":956,"title":{},"body":{"index.html":{}}}],["db_password=postgres",{"_index":955,"title":{},"body":{"index.html":{}}}],["db_port=5432",{"_index":953,"title":{},"body":{"index.html":{}}}],["db_username=postgres",{"_index":954,"title":{},"body":{"index.html":{}}}],["decision",{"_index":182,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"miscellaneous/enumerations.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"classes/WorkflowStepDto.html":{}}}],["deeper",{"_index":864,"title":{},"body":{"index.html":{}}}],["default",{"_index":113,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{}}}],["define",{"_index":122,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"index.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"injectables/WorkflowService.html":{},"classes/WorkflowStepDto.html":{}}}],["definition",{"_index":111,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{},"index.html":{}}}],["definition'})@apiparam({name",{"_index":506,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["definition'})@apiresponse({status",{"_index":479,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["definition'})@isstring",{"_index":116,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["definition.dto",{"_index":457,"title":{},"body":{"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["definition.dto.ts",{"_index":88,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"coverage.html":{}}}],["definition.dto.ts:13",{"_index":99,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["definition.dto.ts:22",{"_index":125,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["definition.dto.ts:34",{"_index":107,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["definition.dto.ts:46",{"_index":119,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["definition.dto.ts:54",{"_index":115,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["definition.dto.ts:9",{"_index":117,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["definition.entity",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"classes/WorkflowStepDto.html":{}}}],["definition.entity.ts",{"_index":148,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["definition.entity.ts:12",{"_index":636,"title":{},"body":{"entities/WorkflowDefinition.html":{}}}],["definition.entity.ts:15",{"_index":640,"title":{},"body":{"entities/WorkflowDefinition.html":{}}}],["definition.entity.ts:18",{"_index":635,"title":{},"body":{"entities/WorkflowDefinition.html":{}}}],["definition.entity.ts:21",{"_index":642,"title":{},"body":{"entities/WorkflowDefinition.html":{}}}],["definition.entity.ts:24",{"_index":637,"title":{},"body":{"entities/WorkflowDefinition.html":{}}}],["definition.entity.ts:27",{"_index":641,"title":{},"body":{"entities/WorkflowDefinition.html":{}}}],["definition.entity.ts:30",{"_index":639,"title":{},"body":{"entities/WorkflowDefinition.html":{}}}],["definition.entity.ts:33",{"_index":634,"title":{},"body":{"entities/WorkflowDefinition.html":{}}}],["definition.entity.ts:36",{"_index":643,"title":{},"body":{"entities/WorkflowDefinition.html":{}}}],["definitions",{"_index":493,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["definitions'})@apiresponse({status",{"_index":491,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["delay",{"_index":245,"title":{},"body":{"interfaces/TaskResult.html":{},"miscellaneous/enumerations.html":{}}}],["delete",{"_index":505,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["delete(':id",{"_index":605,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":504,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["deleted",{"_index":606,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["deleted'})@apiresponse({status",{"_index":508,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":705,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["depends",{"_index":729,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["depid",{"_index":700,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["deploy",{"_index":820,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":835,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":828,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":845,"title":{},"body":{"index.html":{}}}],["description",{"_index":90,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":1002,"title":{},"body":{"index.html":{}}}],["detected",{"_index":712,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["development",{"_index":808,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":876,"title":{},"body":{"index.html":{}}}],["dfs",{"_index":710,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["dfs(depid",{"_index":718,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["dfs(step.id",{"_index":721,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["directory",{"_index":950,"title":{},"body":{"index.html":{}}}],["discord",{"_index":861,"title":{},"body":{"index.html":{}}}],["dive",{"_index":863,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":750,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["does'})@isstring",{"_index":98,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["don't",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["dto/create",{"_index":537,"title":{},"body":{"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["dto/start",{"_index":538,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["dto/update",{"_index":540,"title":{},"body":{"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["duration",{"_index":392,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["e2e",{"_index":816,"title":{},"body":{"index.html":{}}}],["e89b",{"_index":193,"title":{},"body":{"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{}}}],["each",{"_index":138,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["efficient",{"_index":795,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":826,"title":{},"body":{"index.html":{}}}],["email",{"_index":141,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{},"classes/WorkflowStepDto.html":{}}}],["emailhandler",{"_index":553,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["emailworkflow",{"_index":545,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["endpoints",{"_index":963,"title":{},"body":{"index.html":{}}}],["endtime",{"_index":207,"title":{},"body":{"interfaces/StepState.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["engine",{"_index":912,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":824,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":880,"title":{},"body":{"index.html":{}}}],["entities",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"overview.html":{}}}],["entities/workflow",{"_index":239,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"classes/WorkflowStepDto.html":{}}}],["entity",{"_index":153,"title":{"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{}},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"coverage.html":{}}}],["entity('workflow_definitions",{"_index":159,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{}}}],["entity('workflow_instances",{"_index":222,"title":{},"body":{"interfaces/StepState.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["enum",{"_index":180,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["enumerations",{"_index":786,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":948,"title":{},"body":{"index.html":{}}}],["environment",{"_index":947,"title":{},"body":{"index.html":{}}}],["error",{"_index":208,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{}}}],["error('parallel",{"_index":406,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["error('task",{"_index":416,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["error(`condition",{"_index":389,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["error(`duplicate",{"_index":697,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["error(`http",{"_index":381,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["error(`script",{"_index":387,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["error(`step",{"_index":703,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["error(`unsupported",{"_index":326,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["error(`workflow",{"_index":260,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["error.message",{"_index":352,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["eval",{"_index":384,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["evaluate",{"_index":396,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["evaluatecondition",{"_index":388,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["evaluation",{"_index":390,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["example",{"_index":105,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["examples",{"_index":486,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["execute",{"_index":191,"title":{},"body":{"classes/StartWorkflowDto.html":{},"interfaces/TaskResult.html":{},"index.html":{}}}],["executedecision",{"_index":394,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["executedelay(config",{"_index":391,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["executehttptask(config",{"_index":371,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["executeparallel",{"_index":399,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["executescripttask",{"_index":382,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["executesteps",{"_index":305,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["executetask",{"_index":356,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["executeworkflow(instanceid",{"_index":270,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["executing",{"_index":283,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["execution",{"_index":369,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["execution'})@apiresponse({status",{"_index":518,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["execution'})@isoptional()@isnumber",{"_index":737,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["execution.service",{"_index":541,"title":{},"body":{"controllers/WorkflowController.html":{},"modules/WorkflowModule.html":{}}}],["execution.service.ts",{"_index":235,"title":{},"body":{"interfaces/TaskResult.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["exist",{"_index":699,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["experience",{"_index":866,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{},"overview.html":{}}}],["express",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["expression",{"_index":177,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["extends",{"_index":451,"title":{},"body":{"classes/UpdateWorkflowDefinitionDto.html":{}}}],["failed",{"_index":219,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"classes/WorkflowStepDto.html":{},"miscellaneous/enumerations.html":{}}}],["failfast",{"_index":403,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["failurecount",{"_index":430,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["false",{"_index":299,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["fast",{"_index":839,"title":{},"body":{"index.html":{}}}],["feature",{"_index":989,"title":{},"body":{"index.html":{}}}],["feature/amazing",{"_index":993,"title":{},"body":{"index.html":{}}}],["features",{"_index":849,"title":{},"body":{"index.html":{}}}],["fetch(url",{"_index":377,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["few",{"_index":841,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"coverage.html":{},"index.html":{}}}],["filter((step",{"_index":293,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["final",{"_index":437,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["findall",{"_index":463,"title":{},"body":{"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["findone",{"_index":464,"title":{},"body":{"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["findone(@param('id",{"_index":594,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["findone(id",{"_index":495,"title":{},"body":{"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["findreadysteps(instance",{"_index":285,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["flexible",{"_index":914,"title":{},"body":{"index.html":{}}}],["focus",{"_index":848,"title":{},"body":{"index.html":{}}}],["follow",{"_index":884,"title":{},"body":{"index.html":{}}}],["following",{"_index":951,"title":{},"body":{"index.html":{}}}],["fork",{"_index":988,"title":{},"body":{"index.html":{}}}],["format",{"_index":142,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{}}}],["found",{"_index":261,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["found'})@apibody({description",{"_index":520,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["found'})@httpcode(httpstatus.no_content",{"_index":509,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["framework",{"_index":793,"title":{},"body":{"index.html":{}}}],["full",{"_index":879,"title":{},"body":{"index.html":{}}}],["function",{"_index":386,"title":{},"body":{"interfaces/TaskResult.html":{},"coverage.html":{}}}],["functionality",{"_index":602,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["functions",{"_index":788,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":844,"title":{},"body":{"index.html":{}}}],["generateworkflowoutput",{"_index":435,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["get(':id",{"_index":593,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["get(':id')@apioperation({summary",{"_index":496,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["get()@apioperation({summary",{"_index":490,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":790,"title":{"index.html":{}},"body":{}}],["git",{"_index":944,"title":{},"body":{"index.html":{}}}],["graph",{"_index":871,"title":{},"body":{"index.html":{}}}],["grow",{"_index":894,"title":{},"body":{"index.html":{}}}],["handle",{"_index":927,"title":{},"body":{"index.html":{}}}],["handler",{"_index":174,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["hands",{"_index":865,"title":{},"body":{"index.html":{}}}],["handy",{"_index":854,"title":{},"body":{"index.html":{}}}],["headers",{"_index":374,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["hello",{"_index":82,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":869,"title":{},"body":{"index.html":{}}}],["here",{"_index":902,"title":{},"body":{"index.html":{}}}],["here's",{"_index":970,"title":{},"body":{"index.html":{}}}],["host",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["http",{"_index":243,"title":{},"body":{"interfaces/TaskResult.html":{},"miscellaneous/enumerations.html":{}}}],["httpcode",{"_index":527,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":607,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["https://nestjs.com",{"_index":908,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":528,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["id",{"_index":161,"title":{},"body":{"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["id'})@apiparam({name",{"_index":497,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["id'})@apiresponse({status",{"_index":471,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["identifier",{"_index":732,"title":{},"body":{"classes/WorkflowStepDto.html":{},"coverage.html":{}}}],["ids",{"_index":693,"title":{},"body":{"injectables/WorkflowService.html":{},"classes/WorkflowStepDto.html":{}}}],["implement",{"_index":398,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["information",{"_index":830,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":851,"title":{},"body":{"index.html":{}}}],["initialdelay",{"_index":150,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["injectable",{"_index":78,"title":{"injectables/AppService.html":{},"injectables/WorkflowService.html":{}},"body":{"injectables/AppService.html":{},"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{},"coverage.html":{}}}],["injectables",{"_index":79,"title":{},"body":{"injectables/AppService.html":{},"injectables/WorkflowService.html":{},"overview.html":{}}}],["injectrepository",{"_index":237,"title":{},"body":{"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{}}}],["injectrepository(workflowdefinition",{"_index":684,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["injectrepository(workflowinstance",{"_index":251,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["input",{"_index":103,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["input.amount",{"_index":748,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["input.body",{"_index":557,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["input.email",{"_index":554,"title":{},"body":{"controllers/WorkflowController.html":{},"classes/WorkflowStepDto.html":{}}}],["input.items",{"_index":576,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["input.orderid",{"_index":574,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["input.paymentmethod",{"_index":586,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["input.request",{"_index":977,"title":{},"body":{"index.html":{}}}],["input.subject",{"_index":556,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["input.templateid",{"_index":600,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["input/output",{"_index":924,"title":{},"body":{"index.html":{}}}],["inputmapping",{"_index":175,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["inputschema",{"_index":91,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"index.html":{}}}],["install",{"_index":843,"title":{},"body":{"index.html":{}}}],["installation",{"_index":942,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":806,"title":{},"body":{"index.html":{}}}],["instance",{"_index":262,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{}}}],["instance.completedat",{"_index":342,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.entity",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"modules/WorkflowModule.html":{}}}],["instance.entity.ts",{"_index":205,"title":{},"body":{"interfaces/StepState.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["instance.entity.ts:16",{"_index":647,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["instance.entity.ts:19",{"_index":657,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["instance.entity.ts:23",{"_index":656,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["instance.entity.ts:26",{"_index":648,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["instance.entity.ts:29",{"_index":649,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["instance.entity.ts:32",{"_index":651,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["instance.entity.ts:39",{"_index":653,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["instance.entity.ts:42",{"_index":646,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["instance.entity.ts:45",{"_index":654,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["instance.entity.ts:48",{"_index":650,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["instance.entity.ts:51",{"_index":645,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["instance.output",{"_index":343,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.startedat",{"_index":276,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.state",{"_index":287,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.state.completedsteps.length",{"_index":434,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.state.completedsteps.push(stepstate",{"_index":335,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.state.currentsteps",{"_index":336,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.state.currentsteps.filter",{"_index":337,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.state.currentsteps.find",{"_index":328,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.state.currentsteps.push",{"_index":311,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.state.variables",{"_index":338,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.state.variables[mapping",{"_index":443,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.status",{"_index":274,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.workflowdefinition",{"_index":286,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.workflowdefinition.steps.find((s",{"_index":308,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instance.workflowdefinition.steps.length",{"_index":433,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["instanceid",{"_index":272,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{}}}],["interact",{"_index":872,"title":{},"body":{"index.html":{}}}],["interface",{"_index":144,"title":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{}},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"coverage.html":{}}}],["interfaces",{"_index":146,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"overview.html":{}}}],["invalid",{"_index":704,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["involving",{"_index":713,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["isactive",{"_index":93,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{}}}],["isarray",{"_index":127,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/WorkflowStepDto.html":{}}}],["isboolean",{"_index":130,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["isenum",{"_index":742,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["isenum(steptype",{"_index":744,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["isnumber",{"_index":743,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["isobject",{"_index":128,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"classes/WorkflowStepDto.html":{}}}],["isoptional",{"_index":129,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/WorkflowStepDto.html":{}}}],["isstring",{"_index":126,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"classes/WorkflowStepDto.html":{}}}],["isworkflowcomplete(instance",{"_index":431,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["item",{"_index":618,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["items",{"_index":575,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["javascript",{"_index":178,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["job",{"_index":887,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":889,"title":{},"body":{"index.html":{}}}],["join",{"_index":900,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":214,"title":{},"body":{"interfaces/StepState.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["joining",{"_index":614,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["json",{"_index":101,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["json.stringify(body",{"_index":378,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["jsonpath",{"_index":179,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["kamil",{"_index":905,"title":{},"body":{"index.html":{}}}],["key",{"_index":438,"title":{},"body":{"interfaces/TaskResult.html":{},"index.html":{}}}],["later",{"_index":939,"title":{},"body":{"index.html":{}}}],["learn",{"_index":857,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{},"overview.html":{}}}],["license",{"_index":911,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":892,"title":{},"body":{"index.html":{}}}],["line",{"_index":265,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["linkedin",{"_index":886,"title":{},"body":{"index.html":{}}}],["list",{"_index":492,"title":{},"body":{"controllers/WorkflowController.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["literal",{"_index":724,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["localhost",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["logger",{"_index":236,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["logger(workflowexecutionservice.name",{"_index":249,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["logging",{"_index":930,"title":{},"body":{"index.html":{}}}],["logic",{"_index":551,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["looking",{"_index":831,"title":{},"body":{"index.html":{}}}],["loop",{"_index":882,"title":{},"body":{"index.html":{}}}],["m",{"_index":996,"title":{},"body":{"index.html":{}}}],["main",{"_index":962,"title":{},"body":{"index.html":{}}}],["makes",{"_index":837,"title":{},"body":{"index.html":{}}}],["manage",{"_index":917,"title":{},"body":{"index.html":{}}}],["management",{"_index":934,"title":{},"body":{"index.html":{}}}],["managing",{"_index":850,"title":{},"body":{"index.html":{}}}],["manytoone",{"_index":213,"title":{},"body":{"interfaces/StepState.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["manytoone(undefined)@joincolumn({name",{"_index":655,"title":{},"body":{"entities/WorkflowInstance.html":{}}}],["map",{"_index":436,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["map((step",{"_index":303,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["mapping",{"_index":439,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["mau",{"_index":833,"title":{},"body":{"index.html":{}}}],["maxattempts",{"_index":151,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["mechanisms",{"_index":926,"title":{},"body":{"index.html":{}}}],["messageid",{"_index":560,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["metadata",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":373,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["milliseconds",{"_index":171,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["miscellaneous",{"_index":785,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":891,"title":{},"body":{"index.html":{}}}],["mode",{"_index":810,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{},"modules.html":{},"overview.html":{}}}],["monitoring",{"_index":931,"title":{},"body":{"index.html":{}}}],["more",{"_index":829,"title":{},"body":{"index.html":{}}}],["move",{"_index":334,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["multiple",{"_index":919,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":906,"title":{},"body":{"index.html":{}}}],["name",{"_index":94,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["need",{"_index":877,"title":{},"body":{"index.html":{}}}],["nest",{"_index":800,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":910,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":821,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":454,"title":{},"body":{"classes/UpdateWorkflowDefinitionDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":137,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{},"classes/WorkflowStepDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"interfaces/TaskResult.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"dependencies.html":{}}}],["new",{"_index":248,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{},"coverage.html":{},"index.html":{}}}],["newemailhandler",{"_index":598,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["next",{"_index":346,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["nextsteps",{"_index":348,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["nextsteps.length",{"_index":349,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["node.js",{"_index":792,"title":{},"body":{"index.html":{}}}],["node_env=development",{"_index":957,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":683,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["notification",{"_index":546,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["notifications",{"_index":549,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["npm",{"_index":805,"title":{},"body":{"index.html":{}}}],["null",{"_index":370,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["nullable",{"_index":226,"title":{},"body":{"interfaces/StepState.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["number",{"_index":152,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["object",{"_index":140,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"index.html":{}}}],["object.assign(workflow",{"_index":690,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["object.entries(outputschema",{"_index":440,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["offer",{"_index":888,"title":{},"body":{"index.html":{}}}],["official",{"_index":834,"title":{},"body":{"index.html":{}}}],["on'})@isarray()@isstring({each",{"_index":730,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["open",{"_index":893,"title":{},"body":{"index.html":{}}}],["optional",{"_index":92,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["ord",{"_index":617,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["order",{"_index":567,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["order.output.total",{"_index":584,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["orderid",{"_index":200,"title":{},"body":{"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{}}}],["orderprocessing",{"_index":566,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["ordervalidator",{"_index":573,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["orderworkflow",{"_index":615,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["origin",{"_index":998,"title":{},"body":{"index.html":{}}}],["out",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":118,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["output.approved",{"_index":984,"title":{},"body":{"index.html":{}}}],["output.id",{"_index":979,"title":{},"body":{"index.html":{}}}],["output.isvalid",{"_index":578,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["output.messageid",{"_index":561,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["output.sent",{"_index":746,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["output.success",{"_index":559,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["output.total",{"_index":580,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["output.transactionid",{"_index":588,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["output[key",{"_index":442,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["outputmapping",{"_index":176,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["outputschema",{"_index":95,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"index.html":{}}}],["overview",{"_index":1006,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":764,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parallel",{"_index":183,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["param",{"_index":529,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["param('id",{"_index":603,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["parameters",{"_index":476,"title":{},"body":{"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{},"index.html":{}}}],["parseint(process.env.db_port",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["part",{"_index":878,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":453,"title":{},"body":{"classes/UpdateWorkflowDefinitionDto.html":{}}}],["partialtype(createworkflowdefinitiondto",{"_index":452,"title":{},"body":{"classes/UpdateWorkflowDefinitionDto.html":{}}}],["password",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["patch",{"_index":530,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["patch(':id",{"_index":596,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":524,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["pause",{"_index":501,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["pause/resume",{"_index":928,"title":{},"body":{"index.html":{}}}],["paused",{"_index":220,"title":{},"body":{"interfaces/StepState.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["pauseworkflow",{"_index":465,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["pauseworkflow(@param('instanceid",{"_index":626,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["pauseworkflow(instanceid",{"_index":444,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{}}}],["payload",{"_index":485,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["payment",{"_index":570,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["paymentmethod",{"_index":585,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["paymentprocessor",{"_index":582,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["pending",{"_index":216,"title":{},"body":{"interfaces/StepState.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"miscellaneous/enumerations.html":{}}}],["persistence",{"_index":936,"title":{},"body":{"index.html":{}}}],["pg",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["platform",{"_index":612,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["please",{"_index":860,"title":{},"body":{"index.html":{}}}],["port",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["possible",{"_index":827,"title":{},"body":{"index.html":{}}}],["post",{"_index":531,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["post(':instanceid/cancel",{"_index":631,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["post(':instanceid/cancel')@apioperation({summary",{"_index":468,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["post(':instanceid/pause",{"_index":625,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["post(':instanceid/pause')@apioperation({summary",{"_index":500,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["post(':instanceid/resume",{"_index":628,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["post(':instanceid/resume')@apioperation({summary",{"_index":511,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["post('execute",{"_index":610,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["post('execute')@apioperation({summary",{"_index":516,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["post()@apioperation({summary",{"_index":478,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["postgres",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["postgresql",{"_index":935,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":913,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":460,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["prerequisites",{"_index":937,"title":{},"body":{"index.html":{}}}],["primarygeneratedcolumn",{"_index":154,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":160,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{}}}],["private",{"_index":247,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["process",{"_index":581,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["process.env.db_host",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_name",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_username",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.node_env",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["processes",{"_index":569,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["processing",{"_index":568,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["production",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["progressive",{"_index":791,"title":{},"body":{"index.html":{}}}],["project",{"_index":803,"title":{},"body":{"index.html":{}}}],["promise",{"_index":255,"title":{},"body":{"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{}}}],["promise((_",{"_index":412,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["promise((resolve",{"_index":393,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["promise.all(taskpromises",{"_index":423,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["promise.race",{"_index":417,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["properties",{"_index":89,"title":{"properties.html":{}},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{},"properties.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{},"overview.html":{}}}],["pull",{"_index":999,"title":{},"body":{"index.html":{}}}],["push",{"_index":997,"title":{},"body":{"index.html":{}}}],["quantity",{"_index":589,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["questions",{"_index":858,"title":{},"body":{"index.html":{}}}],["r.success",{"_index":425,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["r.success).length",{"_index":429,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["read",{"_index":901,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{}}}],["ready",{"_index":347,"title":{},"body":{"interfaces/TaskResult.html":{},"index.html":{}}}],["readysteps",{"_index":278,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["real",{"_index":873,"title":{},"body":{"index.html":{}}}],["record",{"_index":100,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["recursionstack",{"_index":709,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["recursionstack.add(stepid",{"_index":716,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["recursionstack.delete(stepid",{"_index":719,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["recursionstack.has(stepid",{"_index":711,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["reflect",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["reject",{"_index":413,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["reject(new",{"_index":415,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["relations",{"_index":273,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["remove",{"_index":466,"title":{},"body":{"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["remove(@param('id",{"_index":608,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["remove(id",{"_index":503,"title":{},"body":{"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["repository",{"_index":238,"title":{},"body":{"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{},"index.html":{}}}],["request",{"_index":975,"title":{},"body":{"index.html":{}}}],["requestid",{"_index":978,"title":{},"body":{"index.html":{}}}],["required",{"_index":565,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["requires",{"_index":407,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["requiring",{"_index":840,"title":{},"body":{"index.html":{}}}],["reset",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{},"overview.html":{}}}],["resources",{"_index":852,"title":{},"body":{"index.html":{}}}],["response",{"_index":376,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["response.json",{"_index":379,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["response.ok",{"_index":380,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["rest",{"_index":932,"title":{},"body":{"index.html":{}}}],["result",{"_index":315,"title":{},"body":{"interfaces/TaskResult.html":{},"classes/WorkflowStepDto.html":{}}}],["result.error",{"_index":422,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["result.output",{"_index":421,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["result.success",{"_index":420,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["results.every((r",{"_index":424,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["results.filter((r",{"_index":428,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["results.some((r",{"_index":426,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["resume",{"_index":512,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["resumed",{"_index":513,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["resumeworkflow",{"_index":467,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["resumeworkflow(@param('instanceid",{"_index":629,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["resumeworkflow(instanceid",{"_index":446,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{}}}],["retry",{"_index":550,"title":{},"body":{"controllers/WorkflowController.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["retryconfig",{"_index":145,"title":{"interfaces/RetryConfig.html":{}},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"coverage.html":{},"index.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["root",{"_index":949,"title":{},"body":{"index.html":{}}}],["run",{"_index":807,"title":{},"body":{"index.html":{}}}],["running",{"_index":217,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["runningstepids",{"_index":291,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["runningstepids.has(step.id",{"_index":298,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["runs",{"_index":825,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":329,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["s.id",{"_index":309,"title":{},"body":{"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{}}}],["s.stepid",{"_index":290,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["safe",{"_index":383,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["savedinstance",{"_index":267,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["scalable",{"_index":796,"title":{},"body":{"index.html":{}}}],["schema",{"_index":102,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/TaskResult.html":{}}}],["script",{"_index":244,"title":{},"body":{"interfaces/TaskResult.html":{},"miscellaneous/enumerations.html":{}}}],["see",{"_index":1001,"title":{},"body":{"index.html":{}}}],["send",{"_index":552,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["sendemail",{"_index":745,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["sends",{"_index":548,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["sent",{"_index":558,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["server",{"_index":797,"title":{},"body":{"index.html":{}}}],["set",{"_index":694,"title":{},"body":{"injectables/WorkflowService.html":{},"index.html":{}}}],["set(completedsteps.map((s",{"_index":289,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["set(currentsteps.map((s",{"_index":292,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["settimeout",{"_index":414,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["settimeout(resolve",{"_index":355,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["setup",{"_index":804,"title":{},"body":{"index.html":{}}}],["shipping",{"_index":571,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["side",{"_index":798,"title":{},"body":{"index.html":{}}}],["simple",{"_index":842,"title":{},"body":{"index.html":{}}}],["skip",{"_index":294,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["skipped",{"_index":232,"title":{},"body":{"interfaces/StepState.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["specific",{"_index":965,"title":{},"body":{"index.html":{}}}],["specify",{"_index":923,"title":{},"body":{"index.html":{}}}],["sponsors",{"_index":896,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":789,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../workflow",{"_index":787,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":80,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":81,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":753,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/workflow/dto/create",{"_index":86,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"coverage.html":{}}}],["src/workflow/dto/start",{"_index":186,"title":{},"body":{"classes/StartWorkflowDto.html":{},"coverage.html":{}}}],["src/workflow/dto/update",{"_index":450,"title":{},"body":{"classes/UpdateWorkflowDefinitionDto.html":{},"coverage.html":{}}}],["src/workflow/dto/workflow",{"_index":722,"title":{},"body":{"classes/WorkflowStepDto.html":{},"coverage.html":{}}}],["src/workflow/entities/workflow",{"_index":147,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/workflow/workflow",{"_index":234,"title":{},"body":{"interfaces/TaskResult.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/workflow/workflow.controller.ts",{"_index":459,"title":{},"body":{"controllers/WorkflowController.html":{},"coverage.html":{}}}],["src/workflow/workflow.controller.ts:162",{"_index":488,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["src/workflow/workflow.controller.ts:173",{"_index":494,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["src/workflow/workflow.controller.ts:189",{"_index":499,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["src/workflow/workflow.controller.ts:239",{"_index":526,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["src/workflow/workflow.controller.ts:258",{"_index":510,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["src/workflow/workflow.controller.ts:303",{"_index":521,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["src/workflow/workflow.controller.ts:322",{"_index":502,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["src/workflow/workflow.controller.ts:338",{"_index":514,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["src/workflow/workflow.controller.ts:354",{"_index":475,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["src/workflow/workflow.module.ts",{"_index":661,"title":{},"body":{"modules/WorkflowModule.html":{}}}],["src/workflow/workflow.service.ts",{"_index":664,"title":{},"body":{"injectables/WorkflowService.html":{},"coverage.html":{}}}],["src/workflow/workflow.service.ts:15",{"_index":674,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["src/workflow/workflow.service.ts:22",{"_index":676,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["src/workflow/workflow.service.ts:26",{"_index":677,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["src/workflow/workflow.service.ts:38",{"_index":680,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["src/workflow/workflow.service.ts:47",{"_index":678,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["src/workflow/workflow.service.ts:52",{"_index":682,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["src/workflow/workflow.service.ts:79",{"_index":671,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["src/workflow/workflow.service.ts:9",{"_index":668,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["start",{"_index":517,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["start:dev",{"_index":811,"title":{},"body":{"index.html":{}}}],["start:prodapi",{"_index":960,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":812,"title":{},"body":{"index.html":{}}}],["started",{"_index":519,"title":{"index.html":{}},"body":{"controllers/WorkflowController.html":{}}}],["startedat",{"_index":227,"title":{},"body":{"interfaces/StepState.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["starter",{"_index":802,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":209,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["startworkflow",{"_index":254,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{}}}],["startworkflow(@body",{"_index":621,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["startworkflow(startworkflowdto",{"_index":515,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["startworkflowdto",{"_index":185,"title":{"classes/StartWorkflowDto.html":{}},"body":{"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{},"coverage.html":{}}}],["startworkflowdto.input",{"_index":624,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["startworkflowdto.workflowdefinitionid",{"_index":623,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["state",{"_index":223,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["statements",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":210,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["stay",{"_index":881,"title":{},"body":{"index.html":{}}}],["step",{"_index":295,"title":{},"body":{"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["step'})@isenum(steptype",{"_index":740,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["step'})@isstring",{"_index":733,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["step.condition.expression",{"_index":397,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["step.condition.type",{"_index":395,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["step.config",{"_index":363,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["step.dependencies",{"_index":701,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["step.dependencies.every((depid",{"_index":301,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["step.dto",{"_index":134,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["step.dto.ts",{"_index":723,"title":{},"body":{"classes/WorkflowStepDto.html":{},"coverage.html":{}}}],["step.dto.ts:12",{"_index":735,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["step.dto.ts:16",{"_index":741,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["step.dto.ts:21",{"_index":731,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["step.dto.ts:32",{"_index":728,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["step.dto.ts:48",{"_index":736,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["step.dto.ts:59",{"_index":738,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["step.dto.ts:70",{"_index":726,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["step.dto.ts:8",{"_index":734,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["step.id",{"_index":304,"title":{},"body":{"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{}}}],["step.name",{"_index":358,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["step.retryconfig",{"_index":353,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["step.type",{"_index":317,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["stepcondition",{"_index":173,"title":{"interfaces/StepCondition.html":{}},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"coverage.html":{}}}],["stepconfig",{"_index":169,"title":{"interfaces/StepConfig.html":{}},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"coverage.html":{}}}],["stepid",{"_index":211,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{}}}],["stepids",{"_index":306,"title":{},"body":{"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{}}}],["stepids.add(step.id",{"_index":698,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["stepids.has(depid",{"_index":702,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["stepids.has(step.id",{"_index":696,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["stepids.map((id",{"_index":307,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["steps",{"_index":96,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["steps.find((s",{"_index":717,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["steps.submit.output.requestid",{"_index":982,"title":{},"body":{"index.html":{}}}],["steps.validate",{"_index":583,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["stepstate",{"_index":204,"title":{"interfaces/StepState.html":{}},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"coverage.html":{}}}],["stepstate.attempts",{"_index":354,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["stepstate.endtime",{"_index":332,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["stepstate.error",{"_index":351,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["stepstate.output",{"_index":333,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["stepstate.status",{"_index":330,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["stepstatus",{"_index":212,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"miscellaneous/enumerations.html":{}}}],["stepstatus.completed",{"_index":331,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["stepstatus.failed",{"_index":350,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["stepstatus.running",{"_index":312,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["steptype",{"_index":167,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"miscellaneous/enumerations.html":{}}}],["steptype.decision",{"_index":322,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["steptype.parallel",{"_index":324,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["steptype.task",{"_index":319,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["straightforward",{"_index":838,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["sub_workflow",{"_index":184,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"miscellaneous/enumerations.html":{}}}],["subject",{"_index":555,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["submit",{"_index":974,"title":{},"body":{"index.html":{}}}],["submithandler",{"_index":976,"title":{},"body":{"index.html":{}}}],["success",{"_index":143,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{}}}],["successcount",{"_index":427,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["successfully",{"_index":482,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["summary",{"_index":544,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["support",{"_index":859,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1004,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":316,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["synchronize",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":823,"title":{},"body":{"index.html":{}}}],["task",{"_index":181,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["task.id",{"_index":419,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["taskid",{"_index":418,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["taskpromises",{"_index":408,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["taskresult",{"_index":233,"title":{"interfaces/TaskResult.html":{}},"body":{"interfaces/TaskResult.html":{},"coverage.html":{}}}],["tasks",{"_index":400,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["tasks.length",{"_index":405,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["tasks.map(async",{"_index":409,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["tasktype",{"_index":242,"title":{},"body":{"interfaces/TaskResult.html":{},"miscellaneous/enumerations.html":{}}}],["tasktype.condition",{"_index":364,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["tasktype.delay",{"_index":366,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["tasktype.http",{"_index":359,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["tasktype.script",{"_index":361,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["template",{"_index":599,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["templates",{"_index":921,"title":{},"body":{"index.html":{}}}],["test",{"_index":815,"title":{},"body":{"index.html":{}}}],["test:covcontributing",{"_index":987,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":818,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":817,"title":{},"body":{"index.html":{}}}],["testing",{"_index":986,"title":{},"body":{"index.html":{}}}],["tests",{"_index":813,"title":{},"body":{"index.html":{}}}],["thank",{"_index":613,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["thanks",{"_index":895,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.checkcirculardependencies(workflow.steps",{"_index":707,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["this.evaluatecondition",{"_index":365,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.executedecision(instance",{"_index":323,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.executedelay(step.config",{"_index":367,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.executehttptask(step.config",{"_index":360,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.executeparallel(instance",{"_index":325,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.executescripttask",{"_index":362,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.executesteps(instance",{"_index":280,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.executetask(instance",{"_index":320,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.executeworkflow(savedinstance.id",{"_index":269,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.findone(id",{"_index":689,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["this.findreadysteps(instance",{"_index":279,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.generateworkflowoutput(instance",{"_index":344,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.isworkflowcomplete(instance",{"_index":340,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.logger.debug(`executing",{"_index":357,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.logger.error(`error",{"_index":282,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.logger.error(`task",{"_index":368,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.workflowdefinitionrepo.create(createdto",{"_index":685,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["this.workflowdefinitionrepo.find",{"_index":687,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["this.workflowdefinitionrepo.findone",{"_index":688,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["this.workflowdefinitionrepo.remove(workflow",{"_index":691,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["this.workflowdefinitionrepo.save(workflow",{"_index":686,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["this.workflowexecutionservice.cancelworkflow(instanceid",{"_index":633,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["this.workflowexecutionservice.pauseworkflow(instanceid",{"_index":627,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["this.workflowexecutionservice.resumeworkflow(instanceid",{"_index":630,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["this.workflowexecutionservice.startworkflow",{"_index":622,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["this.workflowinstancerepo.create",{"_index":263,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.workflowinstancerepo.findone",{"_index":271,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.workflowinstancerepo.save(instance",{"_index":268,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.workflowservice.create(createworkflowdto",{"_index":591,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["this.workflowservice.findall",{"_index":592,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["this.workflowservice.findone(id",{"_index":595,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["this.workflowservice.findone(workflowdefinitionid",{"_index":258,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["this.workflowservice.remove(id",{"_index":609,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["this.workflowservice.update(id",{"_index":604,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["throw",{"_index":259,"title":{},"body":{"interfaces/TaskResult.html":{},"injectables/WorkflowService.html":{}}}],["time",{"_index":874,"title":{},"body":{"index.html":{}}}],["timeout",{"_index":170,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"index.html":{}}}],["timeoutms",{"_index":401,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["timeoutpromise",{"_index":411,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["title",{"_index":985,"title":{},"body":{"index.html":{}}}],["total",{"_index":579,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["totalsteps",{"_index":432,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["touch",{"_index":903,"title":{},"body":{"index.html":{}}}],["transactionid",{"_index":587,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["transformer",{"_index":133,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"dependencies.html":{}}}],["true",{"_index":139,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{}}}],["true})@isoptional()@isboolean",{"_index":114,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["true})@type(undefined",{"_index":124,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["try",{"_index":277,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["twitter",{"_index":909,"title":{},"body":{"index.html":{}}}],["two",{"_index":972,"title":{},"body":{"index.html":{}}}],["type",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateWorkflowDefinitionDto.html":{},"interfaces/RetryConfig.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"classes/WorkflowStepDto.html":{},"coverage.html":{},"index.html":{}}}],["typeof",{"_index":441,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["typeorm",{"_index":158,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{}}}],["typeormmodule.forfeature([workflowdefinition",{"_index":663,"title":{},"body":{"modules/WorkflowModule.html":{}}}],["typeormmodule.forroot",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":455,"title":{},"body":{"classes/UpdateWorkflowDefinitionDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":801,"title":{},"body":{"index.html":{}}}],["ui",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":487,"title":{},"body":{"controllers/WorkflowController.html":{},"entities/WorkflowInstance.html":{}}}],["undefined})@isarray()@validatenested({each",{"_index":123,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["undefined})@isobject",{"_index":106,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"classes/WorkflowStepDto.html":{}}}],["undefined})@isoptional()@isobject",{"_index":725,"title":{},"body":{"classes/WorkflowStepDto.html":{}}}],["under",{"_index":1000,"title":{},"body":{"index.html":{}}}],["unique",{"_index":692,"title":{},"body":{"injectables/WorkflowService.html":{},"classes/WorkflowStepDto.html":{}}}],["unit",{"_index":814,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":1011,"title":{},"body":{"properties.html":{}}}],["up",{"_index":946,"title":{},"body":{"index.html":{}}}],["update",{"_index":327,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{},"index.html":{}}}],["update(id",{"_index":522,"title":{},"body":{"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["updated",{"_index":525,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["updatedat",{"_index":166,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{}}}],["updatedatecolumn",{"_index":157,"title":{},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{}}}],["updatedescription",{"_index":601,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["updatedto",{"_index":679,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["updates",{"_index":883,"title":{},"body":{"index.html":{}}}],["updatesteps",{"_index":597,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["updateworkflowdefinitiondto",{"_index":449,"title":{"classes/UpdateWorkflowDefinitionDto.html":{}},"body":{"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{},"coverage.html":{}}}],["updateworkflowdto",{"_index":523,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["url",{"_index":372,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["use",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["user@example.com",{"_index":199,"title":{},"body":{"classes/StartWorkflowDto.html":{},"controllers/WorkflowController.html":{}}}],["username",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":875,"title":{},"body":{"index.html":{}}}],["v12",{"_index":940,"title":{},"body":{"index.html":{}}}],["v16",{"_index":938,"title":{},"body":{"index.html":{}}}],["valid",{"_index":577,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["validate",{"_index":572,"title":{},"body":{"controllers/WorkflowController.html":{},"injectables/WorkflowService.html":{}}}],["validatenested",{"_index":131,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["validateworkflowdefinition",{"_index":666,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["validateworkflowdefinition(workflow",{"_index":681,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["validation",{"_index":104,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["validator",{"_index":132,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"classes/WorkflowStepDto.html":{},"dependencies.html":{}}}],["value",{"_index":547,"title":{},"body":{"controllers/WorkflowController.html":{},"miscellaneous/enumerations.html":{}}}],["variables",{"_index":231,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"index.html":{}}}],["version",{"_index":1009,"title":{},"body":{"properties.html":{}}}],["video",{"_index":867,"title":{},"body":{"index.html":{}}}],["visit",{"_index":856,"title":{},"body":{"index.html":{}}}],["visited",{"_index":708,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["visited.add(stepid",{"_index":715,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["visited.has(step.id",{"_index":720,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["visited.has(stepid",{"_index":714,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["visualize",{"_index":870,"title":{},"body":{"index.html":{}}}],["void",{"_index":672,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["watch",{"_index":809,"title":{},"body":{"index.html":{}}}],["website",{"_index":907,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":611,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["whether",{"_index":110,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{}}}],["workflow",{"_index":87,"title":{},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/StartWorkflowDto.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"classes/UpdateWorkflowDefinitionDto.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"classes/WorkflowStepDto.html":{},"coverage.html":{},"index.html":{}}}],["workflow'})@apiparam({name",{"_index":470,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["workflow.controller",{"_index":662,"title":{},"body":{"modules/WorkflowModule.html":{}}}],["workflow.dto",{"_index":539,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["workflow.dto.ts",{"_index":187,"title":{},"body":{"classes/StartWorkflowDto.html":{},"coverage.html":{}}}],["workflow.dto.ts:10",{"_index":197,"title":{},"body":{"classes/StartWorkflowDto.html":{}}}],["workflow.dto.ts:21",{"_index":190,"title":{},"body":{"classes/StartWorkflowDto.html":{}}}],["workflow.service",{"_index":241,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"modules/WorkflowModule.html":{}}}],["workflow.steps",{"_index":695,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["workflow/entities/workflow",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["workflow/workflow.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["workflow_engine",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["workflow_enginerunning",{"_index":959,"title":{},"body":{"index.html":{}}}],["workflowcontroller",{"_index":458,"title":{"controllers/WorkflowController.html":{}},"body":{"controllers/WorkflowController.html":{},"modules/WorkflowModule.html":{},"coverage.html":{}}}],["workflowdefinition",{"_index":50,"title":{"entities/WorkflowDefinition.html":{}},"body":{"modules/AppModule.html":{},"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowDefinition.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"interfaces/WorkflowState.html":{},"interfaces/WorkflowStep.html":{},"coverage.html":{}}}],["workflowdefinitionid",{"_index":188,"title":{},"body":{"classes/StartWorkflowDto.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["workflowdefinitionrepo",{"_index":669,"title":{},"body":{"injectables/WorkflowService.html":{}}}],["workflowdefinition})@apibody({description",{"_index":483,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["workflowdefinition})@apiresponse({status",{"_index":498,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["workflowexecutionservice",{"_index":246,"title":{},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"modules/WorkflowModule.html":{},"coverage.html":{},"overview.html":{}}}],["workflowinstance",{"_index":53,"title":{"entities/WorkflowInstance.html":{}},"body":{"modules/AppModule.html":{},"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"entities/WorkflowInstance.html":{},"modules/WorkflowModule.html":{},"interfaces/WorkflowState.html":{},"coverage.html":{}}}],["workflowinstancerepo",{"_index":252,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["workflowinstance})@apiresponse({status",{"_index":473,"title":{},"body":{"controllers/WorkflowController.html":{}}}],["workflowmodule",{"_index":40,"title":{"modules/WorkflowModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{},"modules.html":{},"overview.html":{}}}],["workflows",{"_index":461,"title":{},"body":{"controllers/WorkflowController.html":{},"index.html":{}}}],["workflows/:id",{"_index":964,"title":{},"body":{"index.html":{}}}],["workflows/:instanceid/cancel",{"_index":969,"title":{},"body":{"index.html":{}}}],["workflows/:instanceid/pause",{"_index":967,"title":{},"body":{"index.html":{}}}],["workflows/:instanceid/resume",{"_index":968,"title":{},"body":{"index.html":{}}}],["workflows/execute",{"_index":966,"title":{},"body":{"index.html":{}}}],["workflowservice",{"_index":240,"title":{"injectables/WorkflowService.html":{}},"body":{"interfaces/TaskResult.html":{},"controllers/WorkflowController.html":{},"modules/WorkflowModule.html":{},"injectables/WorkflowService.html":{},"coverage.html":{},"overview.html":{}}}],["workflowstate",{"_index":224,"title":{"interfaces/WorkflowState.html":{}},"body":{"interfaces/StepState.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"coverage.html":{}}}],["workflowstatus",{"_index":215,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{},"miscellaneous/enumerations.html":{}}}],["workflowstatus.cancelled",{"_index":448,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["workflowstatus.completed",{"_index":341,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["workflowstatus.failed",{"_index":284,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["workflowstatus.paused",{"_index":445,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["workflowstatus.pending",{"_index":225,"title":{},"body":{"interfaces/StepState.html":{},"interfaces/TaskResult.html":{},"entities/WorkflowInstance.html":{},"interfaces/WorkflowState.html":{}}}],["workflowstatus.running",{"_index":275,"title":{},"body":{"interfaces/TaskResult.html":{}}}],["workflowstep",{"_index":163,"title":{"interfaces/WorkflowStep.html":{}},"body":{"interfaces/RetryConfig.html":{},"interfaces/StepCondition.html":{},"interfaces/StepConfig.html":{},"entities/WorkflowDefinition.html":{},"interfaces/WorkflowStep.html":{},"coverage.html":{}}}],["workflowstepdto",{"_index":120,"title":{"classes/WorkflowStepDto.html":{}},"body":{"classes/CreateWorkflowDefinitionDto.html":{},"classes/WorkflowStepDto.html":{},"coverage.html":{}}}],["working",{"_index":855,"title":{},"body":{"index.html":{}}}],["world",{"_index":83,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":885,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":941,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":899,"title":{},"body":{"index.html":{}}}],["you're",{"_index":819,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/WorkflowModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nWorkflowModule\n\nWorkflowModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nWorkflowModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WorkflowModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { WorkflowModule } from './workflow/workflow.module';\nimport { WorkflowDefinition } from './workflow/entities/workflow-definition.entity';\nimport { WorkflowInstance } from './workflow/entities/workflow-instance.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: process.env.DB_HOST || 'localhost',\n      port: parseInt(process.env.DB_PORT, 10) || 5432,\n      username: process.env.DB_USERNAME || 'postgres',\n      password: process.env.DB_PASSWORD || 'postgres',\n      database: process.env.DB_NAME || 'workflow_engine',\n      entities: [WorkflowDefinition, WorkflowInstance],\n      synchronize: process.env.NODE_ENV !== 'production', // Don't use synchronize in production\n    }),\n    WorkflowModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateWorkflowDefinitionDto.html":{"url":"classes/CreateWorkflowDefinitionDto.html","title":"class - CreateWorkflowDefinitionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateWorkflowDefinitionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/dto/create-workflow-definition.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                inputSchema\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isActive\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                outputSchema\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                steps\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Description of what the workflow does'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/create-workflow-definition.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        inputSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JSON Schema for workflow input validation', example: undefined})@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/create-workflow-definition.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Whether the workflow definition is active', default: true})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/create-workflow-definition.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the workflow definition'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/create-workflow-definition.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        outputSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JSON Schema for workflow output validation', example: undefined})@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/create-workflow-definition.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        steps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkflowStepDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Array of workflow steps that define the workflow', type: undefined})@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/create-workflow-definition.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsArray, IsObject, IsOptional, IsBoolean, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { WorkflowStepDto } from './workflow-step.dto';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class CreateWorkflowDefinitionDto {\n  @ApiProperty({ description: 'Name of the workflow definition' })\n  @IsString()\n  name: string;\n\n  @ApiProperty({ description: 'Description of what the workflow does' })\n  @IsString()\n  description: string;\n\n  @ApiProperty({ \n    description: 'Array of workflow steps that define the workflow',\n    type: [WorkflowStepDto]\n  })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => WorkflowStepDto)\n  steps: WorkflowStepDto[];\n\n  @ApiProperty({ \n    description: 'JSON Schema for workflow input validation',\n    example: {\n      type: 'object',\n      properties: {\n        email: { type: 'string', format: 'email' }\n      }\n    }\n  })\n  @IsObject()\n  inputSchema: Record;\n\n  @ApiProperty({ \n    description: 'JSON Schema for workflow output validation',\n    example: {\n      type: 'object',\n      properties: {\n        success: { type: 'boolean' }\n      }\n    }\n  })\n  @IsObject()\n  outputSchema: Record;\n\n  @ApiPropertyOptional({ \n    description: 'Whether the workflow definition is active',\n    default: true\n  })\n  @IsOptional()\n  @IsBoolean()\n  isActive?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RetryConfig.html":{"url":"interfaces/RetryConfig.html","title":"interface - RetryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RetryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/entities/workflow-definition.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            backoffMultiplier\n                                        \n                                \n                                \n                                        \n                                            initialDelay\n                                        \n                                \n                                \n                                        \n                                            maxAttempts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backoffMultiplier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backoffMultiplier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialDelay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialDelay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAttempts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxAttempts:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity('workflow_definitions')\nexport class WorkflowDefinition {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  description: string;\n\n  @Column('jsonb')\n  steps: WorkflowStep[];\n\n  @Column('jsonb')\n  inputSchema: Record;\n\n  @Column('jsonb')\n  outputSchema: Record;\n\n  @Column({ default: true })\n  isActive: boolean;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\nexport interface WorkflowStep {\n  id: string;\n  name: string;\n  type: StepType;\n  dependencies: string[];\n  config: StepConfig;\n  retryConfig?: RetryConfig;\n  timeout?: number; // in milliseconds\n  condition?: StepCondition;\n}\n\nexport interface StepConfig {\n  handler: string;\n  inputMapping: Record;\n  outputMapping: Record;\n}\n\nexport interface RetryConfig {\n  maxAttempts: number;\n  backoffMultiplier: number;\n  initialDelay: number;\n}\n\nexport interface StepCondition {\n  expression: string;\n  type: 'javascript' | 'jsonpath';\n}\n\nexport enum StepType {\n  TASK = 'TASK',\n  DECISION = 'DECISION',\n  PARALLEL = 'PARALLEL',\n  SUB_WORKFLOW = 'SUB_WORKFLOW',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StartWorkflowDto.html":{"url":"classes/StartWorkflowDto.html","title":"class - StartWorkflowDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StartWorkflowDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/dto/start-workflow.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                input\n                            \n                            \n                                    \n                                    \n                                workflowDefinitionId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        input\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Input data for the workflow', example: undefined})@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/start-workflow.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        workflowDefinitionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID of the workflow definition to execute', example: '123e4567-e89b-12d3-a456-426614174000'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/start-workflow.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsObject } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class StartWorkflowDto {\n  @ApiProperty({\n    description: 'ID of the workflow definition to execute',\n    example: '123e4567-e89b-12d3-a456-426614174000'\n  })\n  @IsString()\n  workflowDefinitionId: string;\n\n  @ApiProperty({\n    description: 'Input data for the workflow',\n    example: {\n      email: 'user@example.com',\n      orderId: '12345',\n      amount: 99.99\n    }\n  })\n  @IsObject()\n  input: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StepCondition.html":{"url":"interfaces/StepCondition.html","title":"interface - StepCondition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StepCondition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/entities/workflow-definition.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expression\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expression\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expression:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"javascript\" | \"jsonpath\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"javascript\" | \"jsonpath\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity('workflow_definitions')\nexport class WorkflowDefinition {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  description: string;\n\n  @Column('jsonb')\n  steps: WorkflowStep[];\n\n  @Column('jsonb')\n  inputSchema: Record;\n\n  @Column('jsonb')\n  outputSchema: Record;\n\n  @Column({ default: true })\n  isActive: boolean;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\nexport interface WorkflowStep {\n  id: string;\n  name: string;\n  type: StepType;\n  dependencies: string[];\n  config: StepConfig;\n  retryConfig?: RetryConfig;\n  timeout?: number; // in milliseconds\n  condition?: StepCondition;\n}\n\nexport interface StepConfig {\n  handler: string;\n  inputMapping: Record;\n  outputMapping: Record;\n}\n\nexport interface RetryConfig {\n  maxAttempts: number;\n  backoffMultiplier: number;\n  initialDelay: number;\n}\n\nexport interface StepCondition {\n  expression: string;\n  type: 'javascript' | 'jsonpath';\n}\n\nexport enum StepType {\n  TASK = 'TASK',\n  DECISION = 'DECISION',\n  PARALLEL = 'PARALLEL',\n  SUB_WORKFLOW = 'SUB_WORKFLOW',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StepConfig.html":{"url":"interfaces/StepConfig.html","title":"interface - StepConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StepConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/entities/workflow-definition.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            handler\n                                        \n                                \n                                \n                                        \n                                            inputMapping\n                                        \n                                \n                                \n                                        \n                                            outputMapping\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        handler\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handler:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputMapping\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inputMapping:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outputMapping\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outputMapping:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity('workflow_definitions')\nexport class WorkflowDefinition {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  description: string;\n\n  @Column('jsonb')\n  steps: WorkflowStep[];\n\n  @Column('jsonb')\n  inputSchema: Record;\n\n  @Column('jsonb')\n  outputSchema: Record;\n\n  @Column({ default: true })\n  isActive: boolean;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\nexport interface WorkflowStep {\n  id: string;\n  name: string;\n  type: StepType;\n  dependencies: string[];\n  config: StepConfig;\n  retryConfig?: RetryConfig;\n  timeout?: number; // in milliseconds\n  condition?: StepCondition;\n}\n\nexport interface StepConfig {\n  handler: string;\n  inputMapping: Record;\n  outputMapping: Record;\n}\n\nexport interface RetryConfig {\n  maxAttempts: number;\n  backoffMultiplier: number;\n  initialDelay: number;\n}\n\nexport interface StepCondition {\n  expression: string;\n  type: 'javascript' | 'jsonpath';\n}\n\nexport enum StepType {\n  TASK = 'TASK',\n  DECISION = 'DECISION',\n  PARALLEL = 'PARALLEL',\n  SUB_WORKFLOW = 'SUB_WORKFLOW',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StepState.html":{"url":"interfaces/StepState.html","title":"interface - StepState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StepState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/entities/workflow-instance.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attempts\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            endTime\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            output\n                                        \n                                \n                                \n                                        \n                                            startTime\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            stepId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attempts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attempts:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StepStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stepId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stepId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, ManyToOne, JoinColumn } from 'typeorm';\nimport { WorkflowDefinition } from './workflow-definition.entity';\n\nexport enum WorkflowStatus {\n  PENDING = 'PENDING',\n  RUNNING = 'RUNNING',\n  COMPLETED = 'COMPLETED',\n  FAILED = 'FAILED',\n  PAUSED = 'PAUSED',\n  CANCELLED = 'CANCELLED',\n}\n\n@Entity('workflow_instances')\nexport class WorkflowInstance {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  workflowDefinitionId: string;\n\n  @ManyToOne(() => WorkflowDefinition)\n  @JoinColumn({ name: 'workflowDefinitionId' })\n  workflowDefinition: WorkflowDefinition;\n\n  @Column('jsonb')\n  input: Record;\n\n  @Column('jsonb')\n  output: Record;\n\n  @Column('jsonb')\n  state: WorkflowState;\n\n  @Column({\n    type: 'enum',\n    enum: WorkflowStatus,\n    default: WorkflowStatus.PENDING,\n  })\n  status: WorkflowStatus;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @Column({ nullable: true })\n  startedAt: Date;\n\n  @Column({ nullable: true })\n  completedAt: Date;\n}\n\nexport interface WorkflowState {\n  currentSteps: StepState[];\n  completedSteps: StepState[];\n  variables: Record;\n}\n\nexport interface StepState {\n  stepId: string;\n  status: StepStatus;\n  startTime: Date;\n  endTime?: Date;\n  attempts: number;\n  error?: string;\n  output?: any;\n}\n\nexport enum StepStatus {\n  PENDING = 'PENDING',\n  RUNNING = 'RUNNING',\n  COMPLETED = 'COMPLETED',\n  FAILED = 'FAILED',\n  SKIPPED = 'SKIPPED',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskResult.html":{"url":"interfaces/TaskResult.html","title":"interface - TaskResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TaskResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/workflow-execution.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            output\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { StepType } from './entities/workflow-definition.entity';\nimport {\n  StepStatus,\n  WorkflowInstance,\n  WorkflowStatus,\n} from './entities/workflow-instance.entity';\nimport { WorkflowService } from './workflow.service';\n\nenum TaskType {\n  HTTP = 'http',\n  SCRIPT = 'script',\n  CONDITION = 'condition',\n  DELAY = 'delay',\n}\n\ninterface TaskResult {\n  success: boolean;\n  output: any;\n  error?: string;\n}\n\n@Injectable()\nexport class WorkflowExecutionService {\n  private readonly logger = new Logger(WorkflowExecutionService.name);\n\n  constructor(\n    @InjectRepository(WorkflowInstance)\n    private workflowInstanceRepo: Repository,\n    private workflowService: WorkflowService,\n  ) {}\n\n  async startWorkflow(\n    workflowDefinitionId: string,\n    input: Record,\n  ): Promise {\n    const definition = await this.workflowService.findOne(workflowDefinitionId);\n\n    if (!definition) {\n      throw new Error(`Workflow definition ${workflowDefinitionId} not found`);\n    }\n\n    const instance = this.workflowInstanceRepo.create({\n      workflowDefinitionId,\n      workflowDefinition: definition, // Add this line to associate the definition\n      input,\n      state: {\n        currentSteps: [],\n        completedSteps: [],\n        variables: { ...input },\n      },\n      output: {},\n      status: WorkflowStatus.PENDING,\n    });\n\n    const savedInstance = await this.workflowInstanceRepo.save(instance);\n    await this.executeWorkflow(savedInstance.id);\n    return savedInstance;\n  }\n\n  async executeWorkflow(instanceId: string): Promise {\n    const instance = await this.workflowInstanceRepo.findOne({\n      where: { id: instanceId },\n      relations: ['workflowDefinition'],\n    });\n\n    if (!instance) {\n      throw new Error(`Workflow instance ${instanceId} not found`);\n    }\n\n    instance.status = WorkflowStatus.RUNNING;\n    instance.startedAt = new Date();\n    await this.workflowInstanceRepo.save(instance);\n\n    try {\n      const readySteps = this.findReadySteps(instance);\n      await this.executeSteps(instance, readySteps);\n    } catch (error) {\n      this.logger.error(`Error executing workflow ${instanceId}:`, error);\n      instance.status = WorkflowStatus.FAILED;\n      await this.workflowInstanceRepo.save(instance);\n    }\n  }\n\n  private findReadySteps(instance: WorkflowInstance): string[] {\n    const { steps } = instance.workflowDefinition;\n    const { completedSteps, currentSteps } = instance.state;\n\n    const completedStepIds = new Set(completedSteps.map((s) => s.stepId));\n    const runningStepIds = new Set(currentSteps.map((s) => s.stepId));\n\n    return steps\n      .filter((step) => {\n        // Skip if step is already completed or running\n        if (completedStepIds.has(step.id) || runningStepIds.has(step.id)) {\n          return false;\n        }\n\n        // Check if all dependencies are completed\n        return step.dependencies.every((depId) => completedStepIds.has(depId));\n      })\n      .map((step) => step.id);\n  }\n\n  private async executeSteps(\n    instance: WorkflowInstance,\n    stepIds: string[],\n  ): Promise {\n    const steps = stepIds.map((id) =>\n      instance.workflowDefinition.steps.find((s) => s.id === id),\n    );\n\n    for (const step of steps) {\n      try {\n        // Add step to current steps\n        instance.state.currentSteps.push({\n          stepId: step.id,\n          status: StepStatus.RUNNING,\n          startTime: new Date(),\n          attempts: 0,\n        });\n\n        await this.workflowInstanceRepo.save(instance);\n\n        // Execute step based on type\n        let result;\n        switch (step.type) {\n          case StepType.TASK:\n            result = await this.executeTask(instance, step);\n            break;\n          case StepType.DECISION:\n            result = await this.executeDecision(instance, step);\n            break;\n          case StepType.PARALLEL:\n            result = await this.executeParallel(instance, step);\n            break;\n          default:\n            throw new Error(`Unsupported step type: ${step.type}`);\n        }\n\n        // Update step status to completed\n        const stepState = instance.state.currentSteps.find(\n          (s) => s.stepId === step.id,\n        );\n        stepState.status = StepStatus.COMPLETED;\n        stepState.endTime = new Date();\n        stepState.output = result;\n\n        // Move step from current to completed\n        instance.state.completedSteps.push(stepState);\n        instance.state.currentSteps = instance.state.currentSteps.filter(\n          (s) => s.stepId !== step.id,\n        );\n\n        // Update instance state\n        instance.state.variables = {\n          ...instance.state.variables,\n          [step.id]: result,\n        };\n\n        await this.workflowInstanceRepo.save(instance);\n\n        // Check if workflow is complete\n        if (this.isWorkflowComplete(instance)) {\n          instance.status = WorkflowStatus.COMPLETED;\n          instance.completedAt = new Date();\n          instance.output = this.generateWorkflowOutput(instance);\n          await this.workflowInstanceRepo.save(instance);\n        } else {\n          // Continue with next ready steps\n          const nextSteps = this.findReadySteps(instance);\n          if (nextSteps.length > 0) {\n            await this.executeSteps(instance, nextSteps);\n          }\n        }\n      } catch (error) {\n        this.logger.error(`Error executing step ${step.id}:`, error);\n\n        const stepState = instance.state.currentSteps.find(\n          (s) => s.stepId === step.id,\n        );\n        stepState.status = StepStatus.FAILED;\n        stepState.error = error.message;\n\n        if (\n          step.retryConfig &&\n          stepState.attempts  setTimeout(resolve, delay));\n          await this.executeSteps(instance, [step.id]);\n        } else {\n          instance.status = WorkflowStatus.FAILED;\n          await this.workflowInstanceRepo.save(instance);\n          throw error;\n        }\n      }\n    }\n  }\n\n  private async executeTask(\n    instance: WorkflowInstance,\n    step: any,\n  ): Promise {\n    try {\n      this.logger.debug(`Executing task: ${step.name}`);\n\n      switch (step.type) {\n        case TaskType.HTTP:\n          return await this.executeHttpTask(step.config);\n\n        case TaskType.SCRIPT:\n          return await this.executeScriptTask(\n            step.config,\n            instance.state.variables,\n          );\n\n        case TaskType.CONDITION:\n          return await this.evaluateCondition(\n            step.config,\n            instance.state.variables,\n          );\n\n        case TaskType.DELAY:\n          return await this.executeDelay(step.config);\n\n        default:\n          throw new Error(`Unsupported task type: ${step.type}`);\n      }\n    } catch (error) {\n      this.logger.error(`Task execution failed: ${error.message}`);\n      return {\n        success: false,\n        output: null,\n        error: error.message,\n      };\n    }\n  }\n\n  private async executeHttpTask(config: any): Promise {\n    const { url, method, headers, body } = config;\n    try {\n      const response = await fetch(url, {\n        method,\n        headers,\n        body: JSON.stringify(body),\n      });\n\n      const data = await response.json();\n      return {\n        success: response.ok,\n        output: data,\n      };\n    } catch (error) {\n      throw new Error(`HTTP task failed: ${error.message}`);\n    }\n  }\n\n  private async executeScriptTask(\n    config: any,\n    variables: Record,\n  ): Promise {\n    const { script } = config;\n    try {\n      // Safe eval with context\n      const context = { ...variables };\n      const result = new Function(\n        'context',\n        `\n        with (context) {\n          ${script}\n        }\n      `,\n      )(context);\n\n      return {\n        success: true,\n        output: result,\n      };\n    } catch (error) {\n      throw new Error(`Script execution failed: ${error.message}`);\n    }\n  }\n\n  private async evaluateCondition(\n    config: any,\n    variables: Record,\n  ): Promise {\n    const { condition } = config;\n    try {\n      const result = new Function(\n        'variables',\n        `\n        with (variables) {\n          return ${condition};\n        }\n      `,\n      )(variables);\n\n      return {\n        success: true,\n        output: !!result,\n      };\n    } catch (error) {\n      throw new Error(`Condition evaluation failed: ${error.message}`);\n    }\n  }\n\n  private async executeDelay(config: any): Promise {\n    const { duration } = config;\n    await new Promise((resolve) => setTimeout(resolve, duration));\n    return {\n      success: true,\n      output: null,\n    };\n  }\n\n  private async executeDecision(\n    instance: WorkflowInstance,\n    step: any,\n  ): Promise {\n    if (step.condition.type === 'javascript') {\n      // Evaluate JavaScript expression\n      const result = new Function(\n        'context',\n        `return ${step.condition.expression}`,\n      )(instance.state.variables);\n      return result;\n    } else if (step.condition.type === 'jsonpath') {\n      // Implement JSONPath evaluation\n      return null;\n    }\n    return null;\n  }\n\n  private async executeParallel(\n    instance: WorkflowInstance,\n    step: any,\n  ): Promise {\n    const { tasks, timeoutMs = 30000, failFast = true } = step.config;\n\n    if (!Array.isArray(tasks) || tasks.length === 0) {\n      throw new Error('Parallel step requires an array of tasks');\n    }\n\n    try {\n      const taskPromises = tasks.map(async (task) => {\n        try {\n          const startTime = Date.now();\n          const timeoutPromise = new Promise((_, reject) => {\n            setTimeout(() => reject(new Error('Task timeout')), timeoutMs);\n          });\n\n          const result = (await Promise.race([\n            this.executeTask(instance, task),\n            timeoutPromise,\n          ])) as TaskResult;\n\n          return {\n            taskId: task.id,\n            duration: Date.now() - startTime,\n            success: result.success,\n            output: result.output,\n            error: result.error,\n          };\n        } catch (error) {\n          if (failFast) {\n            throw error;\n          }\n          return {\n            taskId: task.id,\n            success: false,\n            error: error.message,\n          };\n        }\n      });\n\n      const results = await Promise.all(taskPromises);\n      const success = failFast\n        ? results.every((r) => r.success)\n        : results.some((r) => r.success);\n\n      return {\n        success,\n        output: {\n          results,\n          successCount: results.filter((r) => r.success).length,\n          failureCount: results.filter((r) => !r.success).length,\n        },\n      };\n    } catch (error) {\n      return {\n        success: false,\n        output: null,\n        error: `Parallel execution failed: ${error.message}`,\n      };\n    }\n  }\n\n  private isWorkflowComplete(instance: WorkflowInstance): boolean {\n    const totalSteps = instance.workflowDefinition.steps.length;\n    return instance.state.completedSteps.length === totalSteps;\n  }\n\n  private generateWorkflowOutput(\n    instance: WorkflowInstance,\n  ): Record {\n    const output: Record = {};\n    const { outputSchema } = instance.workflowDefinition;\n\n    // Map the final state variables to the output schema\n    for (const [key, mapping] of Object.entries(outputSchema)) {\n      if (typeof mapping === 'string' && mapping in instance.state.variables) {\n        output[key] = instance.state.variables[mapping];\n      }\n    }\n\n    return output;\n  }\n\n  async pauseWorkflow(instanceId: string): Promise {\n    const instance = await this.workflowInstanceRepo.findOne({\n      where: { id: instanceId },\n    });\n\n    if (!instance) {\n      throw new Error(`Workflow instance ${instanceId} not found`);\n    }\n\n    instance.status = WorkflowStatus.PAUSED;\n    return await this.workflowInstanceRepo.save(instance);\n  }\n\n  async resumeWorkflow(instanceId: string): Promise {\n    const instance = await this.workflowInstanceRepo.findOne({\n      where: { id: instanceId },\n    });\n\n    if (!instance) {\n      throw new Error(`Workflow instance ${instanceId} not found`);\n    }\n\n    instance.status = WorkflowStatus.RUNNING;\n    await this.workflowInstanceRepo.save(instance);\n\n    // Continue execution\n    const readySteps = this.findReadySteps(instance);\n    await this.executeSteps(instance, readySteps);\n\n    return instance;\n  }\n\n  async cancelWorkflow(instanceId: string): Promise {\n    const instance = await this.workflowInstanceRepo.findOne({\n      where: { id: instanceId },\n    });\n\n    if (!instance) {\n      throw new Error(`Workflow instance ${instanceId} not found`);\n    }\n\n    instance.status = WorkflowStatus.CANCELLED;\n    return await this.workflowInstanceRepo.save(instance);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateWorkflowDefinitionDto.html":{"url":"classes/UpdateWorkflowDefinitionDto.html","title":"class - UpdateWorkflowDefinitionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateWorkflowDefinitionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/dto/update-workflow-definition.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateWorkflowDefinitionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateWorkflowDefinitionDto } from './create-workflow-definition.dto';\n\nexport class UpdateWorkflowDefinitionDto extends PartialType(CreateWorkflowDefinitionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WorkflowController.html":{"url":"controllers/WorkflowController.html","title":"controller - WorkflowController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WorkflowController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/workflow.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                workflows\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                cancelWorkflow\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                pauseWorkflow\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                resumeWorkflow\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                startWorkflow\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        cancelWorkflow\n                        \n                    \n                \n            \n            \n                \n                        \n                    cancelWorkflow(instanceId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':instanceId/cancel')@ApiOperation({summary: 'Cancel a workflow'})@ApiParam({name: 'instanceId', description: 'Workflow instance ID'})@ApiResponse({status: 200, description: 'The workflow has been cancelled', type: WorkflowInstance})@ApiResponse({status: 404, description: 'Workflow instance not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/workflow/workflow.controller.ts:354\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                instanceId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createWorkflowDto: CreateWorkflowDefinitionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new workflow definition'})@ApiResponse({status: 201, description: 'The workflow definition has been created successfully.', type: WorkflowDefinition})@ApiBody({description: 'Workflow definition creation payload', examples: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/workflow/workflow.controller.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createWorkflowDto\n                                            \n                                                            CreateWorkflowDefinitionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all workflow definitions'})@ApiResponse({status: 200, description: 'List of all workflow definitions', type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/workflow/workflow.controller.ts:173\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get a workflow definition by id'})@ApiParam({name: 'id', description: 'Workflow definition ID'})@ApiResponse({status: 200, description: 'The workflow definition has been found', type: WorkflowDefinition})@ApiResponse({status: 404, description: 'Workflow definition not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/workflow/workflow.controller.ts:189\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        pauseWorkflow\n                        \n                    \n                \n            \n            \n                \n                        \n                    pauseWorkflow(instanceId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':instanceId/pause')@ApiOperation({summary: 'Pause a running workflow'})@ApiParam({name: 'instanceId', description: 'Workflow instance ID'})@ApiResponse({status: 200, description: 'The workflow has been paused', type: WorkflowInstance})@ApiResponse({status: 404, description: 'Workflow instance not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/workflow/workflow.controller.ts:322\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                instanceId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Delete a workflow definition'})@ApiParam({name: 'id', description: 'Workflow definition ID'})@ApiResponse({status: 204, description: 'The workflow definition has been deleted'})@ApiResponse({status: 404, description: 'Workflow definition not found'})@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/workflow/workflow.controller.ts:258\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        resumeWorkflow\n                        \n                    \n                \n            \n            \n                \n                        \n                    resumeWorkflow(instanceId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':instanceId/resume')@ApiOperation({summary: 'Resume a paused workflow'})@ApiParam({name: 'instanceId', description: 'Workflow instance ID'})@ApiResponse({status: 200, description: 'The workflow has been resumed', type: WorkflowInstance})@ApiResponse({status: 404, description: 'Workflow instance not found'})\n                \n            \n\n                    \n                        \n                            Defined in src/workflow/workflow.controller.ts:338\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                instanceId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        startWorkflow\n                        \n                    \n                \n            \n            \n                \n                        \n                    startWorkflow(startWorkflowDto: StartWorkflowDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('execute')@ApiOperation({summary: 'Start a new workflow execution'})@ApiResponse({status: 201, description: 'The workflow execution has started', type: WorkflowInstance})@ApiResponse({status: 404, description: 'Workflow definition not found'})@ApiBody({description: 'Start workflow execution payload', examples: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/workflow/workflow.controller.ts:303\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                startWorkflowDto\n                                            \n                                                            StartWorkflowDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateWorkflowDto: UpdateWorkflowDefinitionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Update a workflow definition'})@ApiParam({name: 'id', description: 'Workflow definition ID'})@ApiResponse({status: 200, description: 'The workflow definition has been updated', type: WorkflowDefinition})@ApiResponse({status: 404, description: 'Workflow definition not found'})@ApiBody({description: 'Workflow definition update payload', examples: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/workflow/workflow.controller.ts:239\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateWorkflowDto\n                                            \n                                                            UpdateWorkflowDefinitionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport {\n  ApiBody,\n  ApiOperation,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { CreateWorkflowDefinitionDto } from './dto/create-workflow-definition.dto';\nimport { StartWorkflowDto } from './dto/start-workflow.dto';\nimport { UpdateWorkflowDefinitionDto } from './dto/update-workflow-definition.dto';\nimport { WorkflowDefinition } from './entities/workflow-definition.entity';\nimport { WorkflowInstance } from './entities/workflow-instance.entity';\nimport { WorkflowExecutionService } from './workflow-execution.service';\nimport { WorkflowService } from './workflow.service';\n\n@ApiTags('workflows')\n@Controller('workflows')\nexport class WorkflowController {\n  constructor(\n    private readonly workflowService: WorkflowService,\n    private readonly workflowExecutionService: WorkflowExecutionService,\n  ) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create a new workflow definition' })\n  @ApiResponse({\n    status: 201,\n    description: 'The workflow definition has been created successfully.',\n    type: WorkflowDefinition,\n  })\n  @ApiBody({\n    description: 'Workflow definition creation payload',\n    examples: {\n      emailWorkflow: {\n        summary: 'Email Notification Workflow',\n        value: {\n          name: 'Email Notification Workflow',\n          description: 'Sends email notifications with optional retry logic',\n          steps: [\n            {\n              id: 'send-email',\n              name: 'Send Email Notification',\n              type: 'TASK',\n              dependencies: [],\n              config: {\n                handler: 'emailHandler',\n                inputMapping: {\n                  to: '$.input.email',\n                  subject: '$.input.subject',\n                  body: '$.input.body',\n                },\n                outputMapping: {\n                  sent: '$.output.success',\n                  messageId: '$.output.messageId',\n                },\n              },\n              retryConfig: {\n                maxAttempts: 3,\n                backoffMultiplier: 2,\n                initialDelay: 1000,\n              },\n            },\n          ],\n          inputSchema: {\n            type: 'object',\n            properties: {\n              email: { type: 'string', format: 'email' },\n              subject: { type: 'string' },\n              body: { type: 'string' },\n            },\n            required: ['email', 'subject', 'body'],\n          },\n          outputSchema: {\n            type: 'object',\n            properties: {\n              sent: { type: 'boolean' },\n              messageId: { type: 'string' },\n            },\n          },\n        },\n      },\n      orderProcessing: {\n        summary: 'Order Processing Workflow',\n        value: {\n          name: 'Order Processing Workflow',\n          description: 'Processes an order with payment and shipping steps',\n          steps: [\n            {\n              id: 'validate-order',\n              name: 'Validate Order',\n              type: 'TASK',\n              dependencies: [],\n              config: {\n                handler: 'orderValidator',\n                inputMapping: {\n                  orderId: '$.input.orderId',\n                  items: '$.input.items',\n                },\n                outputMapping: {\n                  valid: '$.output.isValid',\n                  total: '$.output.total',\n                },\n              },\n            },\n            {\n              id: 'process-payment',\n              name: 'Process Payment',\n              type: 'TASK',\n              dependencies: ['validate-order'],\n              config: {\n                handler: 'paymentProcessor',\n                inputMapping: {\n                  amount: '$.steps.validate-order.output.total',\n                  paymentMethod: '$.input.paymentMethod',\n                },\n                outputMapping: {\n                  success: '$.output.success',\n                  transactionId: '$.output.transactionId',\n                },\n              },\n            },\n          ],\n          inputSchema: {\n            type: 'object',\n            properties: {\n              orderId: { type: 'string' },\n              items: {\n                type: 'array',\n                items: {\n                  type: 'object',\n                  properties: {\n                    id: { type: 'string' },\n                    quantity: { type: 'number' },\n                  },\n                },\n              },\n              paymentMethod: { type: 'string' },\n            },\n          },\n          outputSchema: {\n            type: 'object',\n            properties: {\n              success: { type: 'boolean' },\n              transactionId: { type: 'string' },\n            },\n          },\n        },\n      },\n    },\n  })\n  create(@Body() createWorkflowDto: CreateWorkflowDefinitionDto) {\n    return this.workflowService.create(createWorkflowDto);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Get all workflow definitions' })\n  @ApiResponse({\n    status: 200,\n    description: 'List of all workflow definitions',\n    type: [WorkflowDefinition],\n  })\n  findAll() {\n    return this.workflowService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Get a workflow definition by id' })\n  @ApiParam({ name: 'id', description: 'Workflow definition ID' })\n  @ApiResponse({\n    status: 200,\n    description: 'The workflow definition has been found',\n    type: WorkflowDefinition,\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Workflow definition not found',\n  })\n  findOne(@Param('id') id: string) {\n    return this.workflowService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Update a workflow definition' })\n  @ApiParam({ name: 'id', description: 'Workflow definition ID' })\n  @ApiResponse({\n    status: 200,\n    description: 'The workflow definition has been updated',\n    type: WorkflowDefinition,\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Workflow definition not found',\n  })\n  @ApiBody({\n    description: 'Workflow definition update payload',\n    examples: {\n      updateSteps: {\n        summary: 'Update workflow steps',\n        value: {\n          steps: [\n            {\n              id: 'send-email',\n              name: 'Send Email Notification',\n              type: 'TASK',\n              dependencies: [],\n              config: {\n                handler: 'newEmailHandler',\n                inputMapping: {\n                  to: '$.input.email',\n                  template: '$.input.templateId',\n                },\n                outputMapping: {\n                  sent: '$.output.success',\n                },\n              },\n            },\n          ],\n        },\n      },\n      updateDescription: {\n        summary: 'Update workflow description',\n        value: {\n          description: 'Updated workflow description with new functionality',\n        },\n      },\n    },\n  })\n  update(\n    @Param('id') id: string,\n    @Body() updateWorkflowDto: UpdateWorkflowDefinitionDto,\n  ) {\n    return this.workflowService.update(id, updateWorkflowDto);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Delete a workflow definition' })\n  @ApiParam({ name: 'id', description: 'Workflow definition ID' })\n  @ApiResponse({\n    status: 204,\n    description: 'The workflow definition has been deleted',\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Workflow definition not found',\n  })\n  @HttpCode(HttpStatus.NO_CONTENT)\n  remove(@Param('id') id: string) {\n    return this.workflowService.remove(id);\n  }\n\n  @Post('execute')\n  @ApiOperation({ summary: 'Start a new workflow execution' })\n  @ApiResponse({\n    status: 201,\n    description: 'The workflow execution has started',\n    type: WorkflowInstance,\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Workflow definition not found',\n  })\n  @ApiBody({\n    description: 'Start workflow execution payload',\n    examples: {\n      emailWorkflow: {\n        summary: 'Start email notification workflow',\n        value: {\n          workflowDefinitionId: '123e4567-e89b-12d3-a456-426614174000',\n          input: {\n            email: 'user@example.com',\n            subject: 'Welcome to our platform',\n            body: 'Thank you for joining us!',\n          },\n        },\n      },\n      orderWorkflow: {\n        summary: 'Start order processing workflow',\n        value: {\n          workflowDefinitionId: '123e4567-e89b-12d3-a456-426614174001',\n          input: {\n            orderId: 'ORD-12345',\n            items: [\n              { id: 'ITEM-1', quantity: 2 },\n              { id: 'ITEM-2', quantity: 1 },\n            ],\n            paymentMethod: 'credit_card',\n          },\n        },\n      },\n    },\n  })\n  startWorkflow(@Body() startWorkflowDto: StartWorkflowDto) {\n    return this.workflowExecutionService.startWorkflow(\n      startWorkflowDto.workflowDefinitionId,\n      startWorkflowDto.input,\n    );\n  }\n\n  @Post(':instanceId/pause')\n  @ApiOperation({ summary: 'Pause a running workflow' })\n  @ApiParam({ name: 'instanceId', description: 'Workflow instance ID' })\n  @ApiResponse({\n    status: 200,\n    description: 'The workflow has been paused',\n    type: WorkflowInstance,\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Workflow instance not found',\n  })\n  pauseWorkflow(@Param('instanceId') instanceId: string) {\n    return this.workflowExecutionService.pauseWorkflow(instanceId);\n  }\n\n  @Post(':instanceId/resume')\n  @ApiOperation({ summary: 'Resume a paused workflow' })\n  @ApiParam({ name: 'instanceId', description: 'Workflow instance ID' })\n  @ApiResponse({\n    status: 200,\n    description: 'The workflow has been resumed',\n    type: WorkflowInstance,\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Workflow instance not found',\n  })\n  resumeWorkflow(@Param('instanceId') instanceId: string) {\n    return this.workflowExecutionService.resumeWorkflow(instanceId);\n  }\n\n  @Post(':instanceId/cancel')\n  @ApiOperation({ summary: 'Cancel a workflow' })\n  @ApiParam({ name: 'instanceId', description: 'Workflow instance ID' })\n  @ApiResponse({\n    status: 200,\n    description: 'The workflow has been cancelled',\n    type: WorkflowInstance,\n  })\n  @ApiResponse({\n    status: 404,\n    description: 'Workflow instance not found',\n  })\n  cancelWorkflow(@Param('instanceId') instanceId: string) {\n    return this.workflowExecutionService.cancelWorkflow(instanceId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/WorkflowDefinition.html":{"url":"entities/WorkflowDefinition.html","title":"entity - WorkflowDefinition","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  WorkflowDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/entities/workflow-definition.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                inputSchema\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                outputSchema\n                            \n                            \n                                    \n                                steps\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-definition.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-definition.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-definition.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        inputSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('jsonb')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-definition.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-definition.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-definition.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        outputSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('jsonb')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-definition.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        steps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkflowStep[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('jsonb')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-definition.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-definition.entity.ts:36\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity('workflow_definitions')\nexport class WorkflowDefinition {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  description: string;\n\n  @Column('jsonb')\n  steps: WorkflowStep[];\n\n  @Column('jsonb')\n  inputSchema: Record;\n\n  @Column('jsonb')\n  outputSchema: Record;\n\n  @Column({ default: true })\n  isActive: boolean;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\nexport interface WorkflowStep {\n  id: string;\n  name: string;\n  type: StepType;\n  dependencies: string[];\n  config: StepConfig;\n  retryConfig?: RetryConfig;\n  timeout?: number; // in milliseconds\n  condition?: StepCondition;\n}\n\nexport interface StepConfig {\n  handler: string;\n  inputMapping: Record;\n  outputMapping: Record;\n}\n\nexport interface RetryConfig {\n  maxAttempts: number;\n  backoffMultiplier: number;\n  initialDelay: number;\n}\n\nexport interface StepCondition {\n  expression: string;\n  type: 'javascript' | 'jsonpath';\n}\n\nexport enum StepType {\n  TASK = 'TASK',\n  DECISION = 'DECISION',\n  PARALLEL = 'PARALLEL',\n  SUB_WORKFLOW = 'SUB_WORKFLOW',\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/WorkflowInstance.html":{"url":"entities/WorkflowInstance.html","title":"entity - WorkflowInstance","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  WorkflowInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/entities/workflow-instance.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                completedAt\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                input\n                            \n                            \n                                    \n                                output\n                            \n                            \n                                    \n                                startedAt\n                            \n                            \n                                    \n                                state\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                workflowDefinition\n                            \n                            \n                                    \n                                workflowDefinitionId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        completedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-instance.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-instance.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-instance.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        input\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('jsonb')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-instance.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        output\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('jsonb')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-instance.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-instance.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkflowState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('jsonb')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-instance.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkflowStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: WorkflowStatus, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-instance.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-instance.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        workflowDefinition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WorkflowDefinition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'workflowDefinitionId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-instance.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        workflowDefinitionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/entities/workflow-instance.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, ManyToOne, JoinColumn } from 'typeorm';\nimport { WorkflowDefinition } from './workflow-definition.entity';\n\nexport enum WorkflowStatus {\n  PENDING = 'PENDING',\n  RUNNING = 'RUNNING',\n  COMPLETED = 'COMPLETED',\n  FAILED = 'FAILED',\n  PAUSED = 'PAUSED',\n  CANCELLED = 'CANCELLED',\n}\n\n@Entity('workflow_instances')\nexport class WorkflowInstance {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  workflowDefinitionId: string;\n\n  @ManyToOne(() => WorkflowDefinition)\n  @JoinColumn({ name: 'workflowDefinitionId' })\n  workflowDefinition: WorkflowDefinition;\n\n  @Column('jsonb')\n  input: Record;\n\n  @Column('jsonb')\n  output: Record;\n\n  @Column('jsonb')\n  state: WorkflowState;\n\n  @Column({\n    type: 'enum',\n    enum: WorkflowStatus,\n    default: WorkflowStatus.PENDING,\n  })\n  status: WorkflowStatus;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @Column({ nullable: true })\n  startedAt: Date;\n\n  @Column({ nullable: true })\n  completedAt: Date;\n}\n\nexport interface WorkflowState {\n  currentSteps: StepState[];\n  completedSteps: StepState[];\n  variables: Record;\n}\n\nexport interface StepState {\n  stepId: string;\n  status: StepStatus;\n  startTime: Date;\n  endTime?: Date;\n  attempts: number;\n  error?: string;\n  output?: any;\n}\n\nexport enum StepStatus {\n  PENDING = 'PENDING',\n  RUNNING = 'RUNNING',\n  COMPLETED = 'COMPLETED',\n  FAILED = 'FAILED',\n  SKIPPED = 'SKIPPED',\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WorkflowModule.html":{"url":"modules/WorkflowModule.html","title":"module - WorkflowModule","body":"\n                   \n\n\n\n\n    Modules\n    WorkflowModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WorkflowModule\n\n\n\ncluster_WorkflowModule_exports\n\n\n\ncluster_WorkflowModule_providers\n\n\n\n\nWorkflowExecutionService \n\nWorkflowExecutionService \n\n\n\nWorkflowService \n\nWorkflowService \n\n\n\nWorkflowModule\n\nWorkflowModule\n\nWorkflowExecutionService  -->\n\nWorkflowModule->WorkflowExecutionService \n\n\n\nWorkflowService  -->\n\nWorkflowModule->WorkflowService \n\n\n\n\n\nWorkflowExecutionService\n\nWorkflowExecutionService\n\nWorkflowModule -->\n\nWorkflowExecutionService->WorkflowModule\n\n\n\n\n\nWorkflowService\n\nWorkflowService\n\nWorkflowModule -->\n\nWorkflowService->WorkflowModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/workflow/workflow.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            WorkflowExecutionService\n                        \n                        \n                            WorkflowService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            WorkflowController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            WorkflowExecutionService\n                        \n                        \n                            WorkflowService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { WorkflowDefinition } from './entities/workflow-definition.entity';\nimport { WorkflowInstance } from './entities/workflow-instance.entity';\nimport { WorkflowService } from './workflow.service';\nimport { WorkflowController } from './workflow.controller';\nimport { WorkflowExecutionService } from './workflow-execution.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([WorkflowDefinition, WorkflowInstance])],\n  providers: [WorkflowService, WorkflowExecutionService],\n  controllers: [WorkflowController],\n  exports: [WorkflowService, WorkflowExecutionService],\n})\nexport class WorkflowModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkflowService.html":{"url":"injectables/WorkflowService.html","title":"injectable - WorkflowService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WorkflowService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/workflow.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkCircularDependencies\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                validateWorkflowDefinition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(workflowDefinitionRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/workflow/workflow.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        workflowDefinitionRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkCircularDependencies\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkCircularDependencies(steps: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/workflow/workflow.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                steps\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateWorkflowDefinitionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/workflow/workflow.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                            CreateWorkflowDefinitionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/workflow/workflow.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/workflow/workflow.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/workflow/workflow.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateWorkflowDefinitionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/workflow/workflow.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                            UpdateWorkflowDefinitionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateWorkflowDefinition\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateWorkflowDefinition(workflow: WorkflowDefinition)\n                \n            \n\n\n                    \n                        \n                            Defined in src/workflow/workflow.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                workflow\n                                            \n                                                            WorkflowDefinition\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { WorkflowDefinition } from './entities/workflow-definition.entity';\nimport { CreateWorkflowDefinitionDto } from './dto/create-workflow-definition.dto';\nimport { UpdateWorkflowDefinitionDto } from './dto/update-workflow-definition.dto';\n\n@Injectable()\nexport class WorkflowService {\n  constructor(\n    @InjectRepository(WorkflowDefinition)\n    private workflowDefinitionRepo: Repository,\n  ) {}\n\n  async create(\n    createDto: CreateWorkflowDefinitionDto,\n  ): Promise {\n    const workflow = this.workflowDefinitionRepo.create(createDto);\n    return await this.workflowDefinitionRepo.save(workflow);\n  }\n\n  async findAll(): Promise {\n    return await this.workflowDefinitionRepo.find();\n  }\n\n  async findOne(id: string): Promise {\n    const workflow = await this.workflowDefinitionRepo.findOne({\n      where: { id },\n    });\n    if (!workflow) {\n      throw new NotFoundException(\n        `Workflow definition with ID \"${id}\" not found`,\n      );\n    }\n    return workflow;\n  }\n\n  async update(\n    id: string,\n    updateDto: UpdateWorkflowDefinitionDto,\n  ): Promise {\n    const workflow = await this.findOne(id);\n    Object.assign(workflow, updateDto);\n    return await this.workflowDefinitionRepo.save(workflow);\n  }\n\n  async remove(id: string): Promise {\n    const workflow = await this.findOne(id);\n    await this.workflowDefinitionRepo.remove(workflow);\n  }\n\n  async validateWorkflowDefinition(\n    workflow: WorkflowDefinition,\n  ): Promise {\n    // Validate steps have unique IDs\n    const stepIds = new Set();\n    for (const step of workflow.steps) {\n      if (stepIds.has(step.id)) {\n        throw new Error(`Duplicate step ID: ${step.id}`);\n      }\n      stepIds.add(step.id);\n    }\n\n    // Validate dependencies exist\n    for (const step of workflow.steps) {\n      for (const depId of step.dependencies) {\n        if (!stepIds.has(depId)) {\n          throw new Error(`Step ${step.id} has invalid dependency: ${depId}`);\n        }\n      }\n    }\n\n    // Check for circular dependencies\n    this.checkCircularDependencies(workflow.steps);\n\n    return true;\n  }\n\n  private checkCircularDependencies(steps: any[]): void {\n    const visited = new Set();\n    const recursionStack = new Set();\n\n    const dfs = (stepId: string) => {\n      if (recursionStack.has(stepId)) {\n        throw new Error(\n          `Circular dependency detected involving step: ${stepId}`,\n        );\n      }\n      if (visited.has(stepId)) return;\n\n      visited.add(stepId);\n      recursionStack.add(stepId);\n\n      const step = steps.find((s) => s.id === stepId);\n      for (const depId of step.dependencies) {\n        dfs(depId);\n      }\n\n      recursionStack.delete(stepId);\n    };\n\n    for (const step of steps) {\n      if (!visited.has(step.id)) {\n        dfs(step.id);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkflowState.html":{"url":"interfaces/WorkflowState.html","title":"interface - WorkflowState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkflowState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/entities/workflow-instance.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completedSteps\n                                        \n                                \n                                \n                                        \n                                            currentSteps\n                                        \n                                \n                                \n                                        \n                                            variables\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completedSteps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completedSteps:         StepState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentSteps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentSteps:         StepState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        variables\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        variables:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, ManyToOne, JoinColumn } from 'typeorm';\nimport { WorkflowDefinition } from './workflow-definition.entity';\n\nexport enum WorkflowStatus {\n  PENDING = 'PENDING',\n  RUNNING = 'RUNNING',\n  COMPLETED = 'COMPLETED',\n  FAILED = 'FAILED',\n  PAUSED = 'PAUSED',\n  CANCELLED = 'CANCELLED',\n}\n\n@Entity('workflow_instances')\nexport class WorkflowInstance {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  workflowDefinitionId: string;\n\n  @ManyToOne(() => WorkflowDefinition)\n  @JoinColumn({ name: 'workflowDefinitionId' })\n  workflowDefinition: WorkflowDefinition;\n\n  @Column('jsonb')\n  input: Record;\n\n  @Column('jsonb')\n  output: Record;\n\n  @Column('jsonb')\n  state: WorkflowState;\n\n  @Column({\n    type: 'enum',\n    enum: WorkflowStatus,\n    default: WorkflowStatus.PENDING,\n  })\n  status: WorkflowStatus;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @Column({ nullable: true })\n  startedAt: Date;\n\n  @Column({ nullable: true })\n  completedAt: Date;\n}\n\nexport interface WorkflowState {\n  currentSteps: StepState[];\n  completedSteps: StepState[];\n  variables: Record;\n}\n\nexport interface StepState {\n  stepId: string;\n  status: StepStatus;\n  startTime: Date;\n  endTime?: Date;\n  attempts: number;\n  error?: string;\n  output?: any;\n}\n\nexport enum StepStatus {\n  PENDING = 'PENDING',\n  RUNNING = 'RUNNING',\n  COMPLETED = 'COMPLETED',\n  FAILED = 'FAILED',\n  SKIPPED = 'SKIPPED',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkflowStep.html":{"url":"interfaces/WorkflowStep.html","title":"interface - WorkflowStep","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkflowStep\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/entities/workflow-definition.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            condition\n                                        \n                                \n                                \n                                        \n                                            config\n                                        \n                                \n                                \n                                        \n                                            dependencies\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            retryConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timeout\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condition:         StepCondition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepCondition\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:         StepConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dependencies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dependencies:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        retryConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        retryConfig:         RetryConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RetryConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         StepType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity('workflow_definitions')\nexport class WorkflowDefinition {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  description: string;\n\n  @Column('jsonb')\n  steps: WorkflowStep[];\n\n  @Column('jsonb')\n  inputSchema: Record;\n\n  @Column('jsonb')\n  outputSchema: Record;\n\n  @Column({ default: true })\n  isActive: boolean;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n}\n\nexport interface WorkflowStep {\n  id: string;\n  name: string;\n  type: StepType;\n  dependencies: string[];\n  config: StepConfig;\n  retryConfig?: RetryConfig;\n  timeout?: number; // in milliseconds\n  condition?: StepCondition;\n}\n\nexport interface StepConfig {\n  handler: string;\n  inputMapping: Record;\n  outputMapping: Record;\n}\n\nexport interface RetryConfig {\n  maxAttempts: number;\n  backoffMultiplier: number;\n  initialDelay: number;\n}\n\nexport interface StepCondition {\n  expression: string;\n  type: 'javascript' | 'jsonpath';\n}\n\nexport enum StepType {\n  TASK = 'TASK',\n  DECISION = 'DECISION',\n  PARALLEL = 'PARALLEL',\n  SUB_WORKFLOW = 'SUB_WORKFLOW',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkflowStepDto.html":{"url":"classes/WorkflowStepDto.html","title":"class - WorkflowStepDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkflowStepDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workflow/dto/workflow-step.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                condition\n                            \n                            \n                                    \n                                    \n                                config\n                            \n                            \n                                    \n                                    \n                                    \n                                dependencies\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                retryConfig\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                timeout\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        condition\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Condition for step execution', example: undefined})@IsOptional()@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/workflow-step.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Configuration for the step execution', example: undefined})@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/workflow-step.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        dependencies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of step IDs that this step depends on'})@IsArray()@IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/workflow-step.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Unique identifier for the workflow step'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/workflow-step.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the workflow step'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/workflow-step.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        retryConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Retry configuration for failed steps', example: undefined})@IsOptional()@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/workflow-step.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        timeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Timeout in milliseconds for the step execution'})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/workflow-step.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StepType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: StepType, description: 'Type of the workflow step'})@IsEnum(StepType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workflow/dto/workflow-step.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsEnum, IsArray, IsObject, IsOptional, IsNumber } from 'class-validator';\nimport { StepType } from '../entities/workflow-definition.entity';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class WorkflowStepDto {\n  @ApiProperty({ description: 'Unique identifier for the workflow step' })\n  @IsString()\n  id: string;\n\n  @ApiProperty({ description: 'Name of the workflow step' })\n  @IsString()\n  name: string;\n\n  @ApiProperty({ enum: StepType, description: 'Type of the workflow step' })\n  @IsEnum(StepType)\n  type: StepType;\n\n  @ApiProperty({ description: 'List of step IDs that this step depends on' })\n  @IsArray()\n  @IsString({ each: true })\n  dependencies: string[];\n\n  @ApiProperty({\n    description: 'Configuration for the step execution',\n    example: {\n      handler: 'sendEmail',\n      inputMapping: { email: '$.input.email' },\n      outputMapping: { result: '$.output.sent' }\n    }\n  })\n  @IsObject()\n  config: {\n    handler: string;\n    inputMapping: Record;\n    outputMapping: Record;\n  };\n\n  @ApiPropertyOptional({\n    description: 'Retry configuration for failed steps',\n    example: {\n      maxAttempts: 3,\n      backoffMultiplier: 1.5,\n      initialDelay: 1000\n    }\n  })\n  @IsOptional()\n  @IsObject()\n  retryConfig?: {\n    maxAttempts: number;\n    backoffMultiplier: number;\n    initialDelay: number;\n  };\n\n  @ApiPropertyOptional({\n    description: 'Timeout in milliseconds for the step execution'\n  })\n  @IsOptional()\n  @IsNumber()\n  timeout?: number;\n\n  @ApiPropertyOptional({\n    description: 'Condition for step execution',\n    example: {\n      expression: '$.input.amount > 1000',\n      type: 'javascript'\n    }\n  })\n  @IsOptional()\n  @IsObject()\n  condition?: {\n    expression: string;\n    type: 'javascript' | 'jsonpath';\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workflow/dto/create-workflow-definition.dto.ts\n            \n            class\n            CreateWorkflowDefinitionDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/workflow/dto/start-workflow.dto.ts\n            \n            class\n            StartWorkflowDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/workflow/dto/update-workflow-definition.dto.ts\n            \n            class\n            UpdateWorkflowDefinitionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workflow/dto/workflow-step.dto.ts\n            \n            class\n            WorkflowStepDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/workflow/entities/workflow-definition.entity.ts\n            \n            entity\n            WorkflowDefinition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workflow/entities/workflow-definition.entity.ts\n            \n            interface\n            RetryConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/workflow/entities/workflow-definition.entity.ts\n            \n            interface\n            StepCondition\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/workflow/entities/workflow-definition.entity.ts\n            \n            interface\n            StepConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/workflow/entities/workflow-definition.entity.ts\n            \n            interface\n            WorkflowStep\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/workflow/entities/workflow-instance.entity.ts\n            \n            entity\n            WorkflowInstance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/workflow/entities/workflow-instance.entity.ts\n            \n            interface\n            StepState\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/workflow/entities/workflow-instance.entity.ts\n            \n            interface\n            WorkflowState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/workflow/workflow-execution.service.ts\n            \n            injectable\n            WorkflowExecutionService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/workflow/workflow-execution.service.ts\n            \n            interface\n            TaskResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/workflow/workflow.controller.ts\n            \n            controller\n            WorkflowController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/workflow/workflow.service.ts\n            \n            injectable\n            WorkflowService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : ^2.0.4\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.4.2\n        \n            @nestjs/typeorm : ^10.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            pg : ^8.11.3\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.1\n        \n            typeorm : ^0.3.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StepStatus   (src/.../workflow-instance.entity.ts)\n                        \n                        \n                            StepType   (src/.../workflow-definition.entity.ts)\n                        \n                        \n                            TaskType   (src/.../workflow-execution.service.ts)\n                        \n                        \n                            WorkflowStatus   (src/.../workflow-instance.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/workflow/entities/workflow-instance.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        StepStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 RUNNING\n                            \n                        \n                        \n                            \n                                Value : RUNNING\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : COMPLETED\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : FAILED\n                            \n                        \n                        \n                            \n                                 SKIPPED\n                            \n                        \n                        \n                            \n                                Value : SKIPPED\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        WorkflowStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 RUNNING\n                            \n                        \n                        \n                            \n                                Value : RUNNING\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : COMPLETED\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n                        \n                            \n                                Value : FAILED\n                            \n                        \n                        \n                            \n                                 PAUSED\n                            \n                        \n                        \n                            \n                                Value : PAUSED\n                            \n                        \n                        \n                            \n                                 CANCELLED\n                            \n                        \n                        \n                            \n                                Value : CANCELLED\n                            \n                        \n            \n        \n\n    src/workflow/entities/workflow-definition.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        StepType\n                    \n                \n                        \n                            \n                                 TASK\n                            \n                        \n                        \n                            \n                                Value : TASK\n                            \n                        \n                        \n                            \n                                 DECISION\n                            \n                        \n                        \n                            \n                                Value : DECISION\n                            \n                        \n                        \n                            \n                                 PARALLEL\n                            \n                        \n                        \n                            \n                                Value : PARALLEL\n                            \n                        \n                        \n                            \n                                 SUB_WORKFLOW\n                            \n                        \n                        \n                            \n                                Value : SUB_WORKFLOW\n                            \n                        \n            \n        \n\n    src/workflow/workflow-execution.service.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskType\n                    \n                \n                        \n                            \n                                 HTTP\n                            \n                        \n                        \n                            \n                                Value : http\n                            \n                        \n                        \n                            \n                                 SCRIPT\n                            \n                        \n                        \n                            \n                                Value : script\n                            \n                        \n                        \n                            \n                                 CONDITION\n                            \n                        \n                        \n                            \n                                Value : condition\n                            \n                        \n                        \n                            \n                                 DELAY\n                            \n                        \n                        \n                            \n                                Value : delay\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\nNestJS Workflow Engine\nA powerful and flexible workflow engine built with NestJS that allows you to define, execute, and manage complex workflows with multiple steps, dependencies, and conditional logic.\nFeatures\n\nCreate and manage workflow templates with multiple steps\nDefine dependencies between steps\nSpecify input/output parameters for each step\nSet conditional logic and branching\nAdd timeout and retry mechanisms\nHandle parallel execution\nSupport workflow pause/resume functionality\nComprehensive logging and monitoring\nREST API for workflow management\nPostgreSQL database for persistence\n\nPrerequisites\n\nNode.js (v16 or later)\nPostgreSQL (v12 or later)\nnpm or yarn\n\nInstallation\n\nClone the repository:\n\nExample :git clone \ncd workflow-engine\nInstall dependencies:\n\nExample :npm install\nSet up environment variables:\nCreate a .env file in the root directory with the following variables:\n\nExample :DB_HOST=localhost\nDB_PORT=5432\nDB_USERNAME=postgres\nDB_PASSWORD=postgres\nDB_NAME=workflow_engine\nNODE_ENV=development\nCreate the database:\n\nExample :createdb workflow_engineRunning the Application\nExample :# development\nnpm run start\n\n# watch mode\nnpm run start:dev\n\n# production mode\nnpm run start:prodAPI Documentation\nThe API documentation is available at /api when the application is running. Here are the main endpoints:\nWorkflow Definitions\n\nPOST /workflows - Create a new workflow definition\nGET /workflows - List all workflow definitions\nGET /workflows/:id - Get a specific workflow definition\nPATCH /workflows/:id - Update a workflow definition\nDELETE /workflows/:id - Delete a workflow definition\n\nWorkflow Execution\n\nPOST /workflows/execute - Start a new workflow execution\nPOST /workflows/:instanceId/pause - Pause a running workflow\nPOST /workflows/:instanceId/resume - Resume a paused workflow\nPOST /workflows/:instanceId/cancel - Cancel a workflow\n\nExample Workflow Definition\nHere's an example of creating a simple workflow with two steps:\nExample :{\n  \"name\": \"Simple Approval Workflow\",\n  \"description\": \"A two-step approval process\",\n  \"steps\": [\n    {\n      \"id\": \"submit\",\n      \"name\": \"Submit Request\",\n      \"type\": \"TASK\",\n      \"dependencies\": [],\n      \"config\": {\n        \"handler\": \"submitHandler\",\n        \"inputMapping\": {\n          \"request\": \"$.input.request\"\n        },\n        \"outputMapping\": {\n          \"requestId\": \"$.output.id\"\n        }\n      }\n    },\n    {\n      \"id\": \"approve\",\n      \"name\": \"Approve Request\",\n      \"type\": \"TASK\",\n      \"dependencies\": [\"submit\"],\n      \"config\": {\n        \"handler\": \"approveHandler\",\n        \"inputMapping\": {\n          \"requestId\": \"$.steps.submit.output.requestId\"\n        },\n        \"outputMapping\": {\n          \"approved\": \"$.output.approved\"\n        }\n      },\n      \"retryConfig\": {\n        \"maxAttempts\": 3,\n        \"backoffMultiplier\": 2,\n        \"initialDelay\": 1000\n      }\n    }\n  ],\n  \"inputSchema\": {\n    \"request\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"title\": { \"type\": \"string\" },\n        \"description\": { \"type\": \"string\" }\n      }\n    }\n  },\n  \"outputSchema\": {\n    \"requestId\": { \"type\": \"string\" },\n    \"approved\": { \"type\": \"boolean\" }\n  }\n}Testing\nExample :# unit tests\nnpm run test\n\n# e2e tests\nnpm run test:e2e\n\n# test coverage\nnpm run test:covContributing\n\nFork the repository\nCreate your feature branch (git checkout -b feature/amazing-feature)\nCommit your changes (git commit -m 'Add some amazing feature')\nPush to the branch (git push origin feature/amazing-feature)\nOpen a Pull Request\n\nLicense\nThis project is licensed under the MIT License - see the LICENSE file for details.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WorkflowModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_WorkflowModule\n\n\n\ncluster_WorkflowModule_exports\n\n\n\ncluster_WorkflowModule_providers\n\n\n\n\nWorkflowModule\n\nWorkflowModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nWorkflowModule->AppModule\n\n\n\n\n\nWorkflowExecutionService \n\nWorkflowExecutionService \n\nWorkflowExecutionService  -->\n\nWorkflowModule->WorkflowExecutionService \n\n\n\n\n\nWorkflowService \n\nWorkflowService \n\nWorkflowService  -->\n\nWorkflowModule->WorkflowService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nWorkflowExecutionService\n\nWorkflowExecutionService\n\nWorkflowModule -->\n\nWorkflowExecutionService->WorkflowModule\n\n\n\n\n\nWorkflowService\n\nWorkflowService\n\nWorkflowModule -->\n\nWorkflowService->WorkflowModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
